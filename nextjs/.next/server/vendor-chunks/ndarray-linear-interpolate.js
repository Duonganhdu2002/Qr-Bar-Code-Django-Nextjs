"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/ndarray-linear-interpolate";
exports.ids = ["vendor-chunks/ndarray-linear-interpolate"];
exports.modules = {

/***/ "(ssr)/./node_modules/ndarray-linear-interpolate/interp.js":
/*!***********************************************************!*\
  !*** ./node_modules/ndarray-linear-interpolate/interp.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("\nfunction interp1d(arr, x) {\n    var ix = Math.floor(x), fx = x - ix, s0 = 0 <= ix && ix < arr.shape[0], s1 = 0 <= ix + 1 && ix + 1 < arr.shape[0], w0 = s0 ? +arr.get(ix) : 0.0, w1 = s1 ? +arr.get(ix + 1) : 0.0;\n    return (1.0 - fx) * w0 + fx * w1;\n}\nfunction interp2d(arr, x, y) {\n    var ix = Math.floor(x), fx = x - ix, s0 = 0 <= ix && ix < arr.shape[0], s1 = 0 <= ix + 1 && ix + 1 < arr.shape[0], iy = Math.floor(y), fy = y - iy, t0 = 0 <= iy && iy < arr.shape[1], t1 = 0 <= iy + 1 && iy + 1 < arr.shape[1], w00 = s0 && t0 ? arr.get(ix, iy) : 0.0, w01 = s0 && t1 ? arr.get(ix, iy + 1) : 0.0, w10 = s1 && t0 ? arr.get(ix + 1, iy) : 0.0, w11 = s1 && t1 ? arr.get(ix + 1, iy + 1) : 0.0;\n    return (1.0 - fy) * ((1.0 - fx) * w00 + fx * w10) + fy * ((1.0 - fx) * w01 + fx * w11);\n}\nfunction interp3d(arr, x, y, z) {\n    var ix = Math.floor(x), fx = x - ix, s0 = 0 <= ix && ix < arr.shape[0], s1 = 0 <= ix + 1 && ix + 1 < arr.shape[0], iy = Math.floor(y), fy = y - iy, t0 = 0 <= iy && iy < arr.shape[1], t1 = 0 <= iy + 1 && iy + 1 < arr.shape[1], iz = Math.floor(z), fz = z - iz, u0 = 0 <= iz && iz < arr.shape[2], u1 = 0 <= iz + 1 && iz + 1 < arr.shape[2], w000 = s0 && t0 && u0 ? arr.get(ix, iy, iz) : 0.0, w010 = s0 && t1 && u0 ? arr.get(ix, iy + 1, iz) : 0.0, w100 = s1 && t0 && u0 ? arr.get(ix + 1, iy, iz) : 0.0, w110 = s1 && t1 && u0 ? arr.get(ix + 1, iy + 1, iz) : 0.0, w001 = s0 && t0 && u1 ? arr.get(ix, iy, iz + 1) : 0.0, w011 = s0 && t1 && u1 ? arr.get(ix, iy + 1, iz + 1) : 0.0, w101 = s1 && t0 && u1 ? arr.get(ix + 1, iy, iz + 1) : 0.0, w111 = s1 && t1 && u1 ? arr.get(ix + 1, iy + 1, iz + 1) : 0.0;\n    return (1.0 - fz) * ((1.0 - fy) * ((1.0 - fx) * w000 + fx * w100) + fy * ((1.0 - fx) * w010 + fx * w110)) + fz * ((1.0 - fy) * ((1.0 - fx) * w001 + fx * w101) + fy * ((1.0 - fx) * w011 + fx * w111));\n}\nfunction interpNd(arr) {\n    var d = arr.shape.length | 0, ix = new Array(d), fx = new Array(d), s0 = new Array(d), s1 = new Array(d), i, t;\n    for(i = 0; i < d; ++i){\n        t = +arguments[i + 1];\n        ix[i] = Math.floor(t);\n        fx[i] = t - ix[i];\n        s0[i] = 0 <= ix[i] && ix[i] < arr.shape[i];\n        s1[i] = 0 <= ix[i] + 1 && ix[i] + 1 < arr.shape[i];\n    }\n    var r = 0.0, j, w, idx;\n    i_loop: for(i = 0; i < 1 << d; ++i){\n        w = 1.0;\n        idx = arr.offset;\n        for(j = 0; j < d; ++j){\n            if (i & 1 << j) {\n                if (!s1[j]) {\n                    continue i_loop;\n                }\n                w *= fx[j];\n                idx += arr.stride[j] * (ix[j] + 1);\n            } else {\n                if (!s0[j]) {\n                    continue i_loop;\n                }\n                w *= 1.0 - fx[j];\n                idx += arr.stride[j] * ix[j];\n            }\n        }\n        r += w * arr.data[idx];\n    }\n    return r;\n}\nfunction interpolate(arr, x, y, z) {\n    switch(arr.shape.length){\n        case 0:\n            return 0.0;\n        case 1:\n            return interp1d(arr, x);\n        case 2:\n            return interp2d(arr, x, y);\n        case 3:\n            return interp3d(arr, x, y, z);\n        default:\n            return interpNd.apply(undefined, arguments);\n    }\n}\nmodule.exports = interpolate;\nmodule.exports.d1 = interp1d;\nmodule.exports.d2 = interp2d;\nmodule.exports.d3 = interp3d;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/ndarray-linear-interpolate/interp.js\n");

/***/ })

};
;