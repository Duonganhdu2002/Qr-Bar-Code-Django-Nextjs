"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/phin";
exports.ids = ["vendor-chunks/phin"];
exports.modules = {

/***/ "(ssr)/./node_modules/phin/lib/phin.compiled.js":
/*!************************************************!*\
  !*** ./node_modules/phin/lib/phin.compiled.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function(obj) {\n    return typeof obj;\n} : function(obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nvar http = __webpack_require__(/*! http */ \"http\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar url = __webpack_require__(/*! url */ \"url\");\nvar qs = __webpack_require__(/*! querystring */ \"querystring\");\nvar zlib = __webpack_require__(/*! zlib */ \"zlib\");\nvar util = __webpack_require__(/*! util */ \"util\");\nvar phin = function phin(opts, cb) {\n    if (typeof opts !== \"string\") {\n        if (!opts.hasOwnProperty(\"url\")) {\n            throw new Error(\"Missing url option from options for request method.\");\n        }\n    }\n    var addr = (typeof opts === \"undefined\" ? \"undefined\" : _typeof(opts)) === \"object\" ? url.parse(opts.url) : url.parse(opts);\n    var options = {\n        \"hostname\": addr.hostname,\n        \"port\": addr.port || (addr.protocol.toLowerCase() === \"http:\" ? 80 : 443),\n        \"path\": addr.path,\n        \"method\": \"GET\",\n        \"headers\": {},\n        \"auth\": addr.auth || null,\n        \"parse\": \"none\",\n        \"stream\": false\n    };\n    if ((typeof opts === \"undefined\" ? \"undefined\" : _typeof(opts)) === \"object\") {\n        options = Object.assign(options, opts);\n    }\n    options.port = Number(options.port);\n    if (options.hasOwnProperty(\"timeout\")) delete options.timeout;\n    if (options.compressed === true) {\n        options.headers[\"accept-encoding\"] = \"gzip, deflate\";\n    }\n    if (opts.hasOwnProperty(\"form\")) {\n        if (_typeof(opts.form) !== \"object\") {\n            throw new Error(\"phin 'form' option must be of type Object if present.\");\n        }\n        var formDataString = qs.stringify(opts.form);\n        options.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n        options.headers[\"Content-Length\"] = Buffer.byteLength(formDataString);\n        opts.data = formDataString;\n    }\n    var req = void 0;\n    var resHandler = function resHandler(res) {\n        var stream = res;\n        if (options.compressed === true) {\n            if (res.headers[\"content-encoding\"] === \"gzip\") {\n                stream = res.pipe(zlib.createGunzip());\n            } else if (res.headers[\"content-encoding\"] === \"deflate\") {\n                stream = res.pipe(zlib.createInflate());\n            }\n        }\n        if (options.stream === true) {\n            res.stream = stream;\n            if (cb) cb(null, res);\n        } else {\n            res.body = new Buffer([]);\n            stream.on(\"data\", function(chunk) {\n                res.body = Buffer.concat([\n                    res.body,\n                    chunk\n                ]);\n            });\n            stream.on(\"end\", function() {\n                if (cb) {\n                    if (options.parse === \"json\") {\n                        try {\n                            res.body = JSON.parse(res.body.toString());\n                        } catch (err) {\n                            cb(\"Invalid JSON received.\", res);\n                            return;\n                        }\n                    }\n                    cb(null, res);\n                }\n            });\n        }\n    };\n    switch(addr.protocol.toLowerCase()){\n        case \"http:\":\n            req = http.request(options, resHandler);\n            break;\n        case \"https:\":\n            req = https.request(options, resHandler);\n            break;\n        default:\n            if (cb) cb(new Error(\"Invalid / unknown URL protocol. Expected HTTP or HTTPS.\"), null);\n            return;\n    }\n    if (typeof opts.timeout === \"number\") {\n        req.setTimeout(opts.timeout, function() {\n            req.abort();\n            if (cb) cb(new Error(\"Timeout has been reached.\"), null);\n            cb = null;\n        });\n    }\n    req.on(\"error\", function(err) {\n        if (cb) cb(err, null);\n    });\n    if (opts.hasOwnProperty(\"data\")) {\n        var postData = opts.data;\n        if (!(opts.data instanceof Buffer) && _typeof(opts.data) === \"object\") {\n            var contentType = options.headers[\"content-type\"] || options.headers[\"Content-Type\"];\n            if (contentType === \"application/x-www-form-urlencoded\") {\n                postData = qs.stringify(opts.data);\n            } else {\n                try {\n                    postData = JSON.stringify(opts.data);\n                } catch (err) {\n                    if (cb) cb(new Error(\"Couldn't stringify object. (Likely due to a circular reference.)\"), null);\n                }\n            }\n        }\n        req.write(postData);\n    }\n    req.end();\n};\nphin.promisified = function(opts, http) {\n    return new Promise(function(resolve, reject) {\n        phin(opts, function(err, res) {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(res);\n            }\n        }, http);\n    });\n};\nif (util.promisify) {\n    phin[util.promisify.custom] = phin.promisified;\n}\nmodule.exports = phin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/phin/lib/phin.compiled.js\n");

/***/ })

};
;