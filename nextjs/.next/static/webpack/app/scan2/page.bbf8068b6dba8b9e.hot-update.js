/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/scan2/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CDuong%5CDocuments%5CQr-code-1%5Cnextjs%5Csrc%5Capp%5Cscan2%5Cpage.tsx&server=false!":
/*!****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CDuong%5CDocuments%5CQr-code-1%5Cnextjs%5Csrc%5Capp%5Cscan2%5Cpage.tsx&server=false! ***!
  \****************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/scan2/page.tsx */ \"(app-pages-browser)/./src/app/scan2/page.tsx\"))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz1DJTNBJTVDVXNlcnMlNUNEdW9uZyU1Q0RvY3VtZW50cyU1Q1FyLWNvZGUtMSU1Q25leHRqcyU1Q3NyYyU1Q2FwcCU1Q3NjYW4yJTVDcGFnZS50c3gmc2VydmVyPWZhbHNlISIsIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvP2VhZTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJDOlxcXFxVc2Vyc1xcXFxEdW9uZ1xcXFxEb2N1bWVudHNcXFxcUXItY29kZS0xXFxcXG5leHRqc1xcXFxzcmNcXFxcYXBwXFxcXHNjYW4yXFxcXHBhZ2UudHN4XCIpIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=C%3A%5CUsers%5CDuong%5CDocuments%5CQr-code-1%5Cnextjs%5Csrc%5Capp%5Cscan2%5Cpage.tsx&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@ericblade/quagga2/dist/quagga.min.js":
/*!************************************************************!*\
  !*** ./node_modules/@ericblade/quagga2/dist/quagga.min.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n!function(t, e) {\n     true ? module.exports = e() : 0;\n}(window, function() {\n    return function(t) {\n        var e = {};\n        function n(r) {\n            if (e[r]) return e[r].exports;\n            var o = e[r] = {\n                i: r,\n                l: !1,\n                exports: {}\n            };\n            return t[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n        }\n        return n.m = t, n.c = e, n.d = function(t, e, r) {\n            n.o(t, e) || Object.defineProperty(t, e, {\n                enumerable: !0,\n                get: r\n            });\n        }, n.r = function(t) {\n            \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n                value: \"Module\"\n            }), Object.defineProperty(t, \"__esModule\", {\n                value: !0\n            });\n        }, n.t = function(t, e) {\n            if (1 & e && (t = n(t)), 8 & e) return t;\n            if (4 & e && \"object\" == typeof t && t && t.__esModule) return t;\n            var r = Object.create(null);\n            if (n.r(r), Object.defineProperty(r, \"default\", {\n                enumerable: !0,\n                value: t\n            }), 2 & e && \"string\" != typeof t) for(var o in t)n.d(r, o, (function(e) {\n                return t[e];\n            }).bind(null, o));\n            return r;\n        }, n.n = function(t) {\n            var e = t && t.__esModule ? function() {\n                return t.default;\n            } : function() {\n                return t;\n            };\n            return n.d(e, \"a\", e), e;\n        }, n.o = function(t, e) {\n            return Object.prototype.hasOwnProperty.call(t, e);\n        }, n.p = \"/\", n(n.s = 73);\n    }([\n        function(t, e, n) {\n            var r = n(61);\n            t.exports = function(t, e, n) {\n                return (e = r(e)) in t ? Object.defineProperty(t, e, {\n                    value: n,\n                    enumerable: !0,\n                    configurable: !0,\n                    writable: !0\n                }) : t[e] = n, t;\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                return t;\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            function n(e) {\n                return t.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {\n                    return t.__proto__ || Object.getPrototypeOf(t);\n                }, t.exports.__esModule = !0, t.exports.default = t.exports, n(e);\n            }\n            t.exports = n, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(61);\n            function o(t, e) {\n                for(var n = 0; n < e.length; n++){\n                    var o = e[n];\n                    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, r(o.key), o);\n                }\n            }\n            t.exports = function(t, e, n) {\n                return e && o(t.prototype, e), n && o(t, n), Object.defineProperty(t, \"prototype\", {\n                    writable: !1\n                }), t;\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            \"use strict\";\n            n.d(e, \"a\", function() {\n                return r;\n            }), n.d(e, \"b\", function() {\n                return o;\n            }), n.d(e, \"c\", function() {\n                return i;\n            }), n.d(e, \"d\", function() {\n                return a;\n            });\n            var r = {};\n            n.r(r), n.d(r, \"EPSILON\", function() {\n                return u;\n            }), n.d(r, \"ARRAY_TYPE\", function() {\n                return c;\n            }), n.d(r, \"RANDOM\", function() {\n                return s;\n            }), n.d(r, \"setMatrixArrayType\", function() {\n                return f;\n            }), n.d(r, \"toRadian\", function() {\n                return d;\n            }), n.d(r, \"equals\", function() {\n                return h;\n            });\n            var o = {};\n            n.r(o), n.d(o, \"create\", function() {\n                return v;\n            }), n.d(o, \"clone\", function() {\n                return p;\n            }), n.d(o, \"copy\", function() {\n                return y;\n            }), n.d(o, \"identity\", function() {\n                return g;\n            }), n.d(o, \"fromValues\", function() {\n                return x;\n            }), n.d(o, \"set\", function() {\n                return m;\n            }), n.d(o, \"transpose\", function() {\n                return _;\n            }), n.d(o, \"invert\", function() {\n                return b;\n            }), n.d(o, \"adjoint\", function() {\n                return w;\n            }), n.d(o, \"determinant\", function() {\n                return O;\n            }), n.d(o, \"multiply\", function() {\n                return R;\n            }), n.d(o, \"rotate\", function() {\n                return M;\n            }), n.d(o, \"scale\", function() {\n                return C;\n            }), n.d(o, \"fromRotation\", function() {\n                return E;\n            }), n.d(o, \"fromScaling\", function() {\n                return A;\n            }), n.d(o, \"str\", function() {\n                return S;\n            }), n.d(o, \"frob\", function() {\n                return k;\n            }), n.d(o, \"LDU\", function() {\n                return P;\n            }), n.d(o, \"add\", function() {\n                return T;\n            }), n.d(o, \"subtract\", function() {\n                return D;\n            }), n.d(o, \"exactEquals\", function() {\n                return j;\n            }), n.d(o, \"equals\", function() {\n                return I;\n            }), n.d(o, \"multiplyScalar\", function() {\n                return z;\n            }), n.d(o, \"multiplyScalarAndAdd\", function() {\n                return U;\n            }), n.d(o, \"mul\", function() {\n                return L;\n            }), n.d(o, \"sub\", function() {\n                return N;\n            });\n            var i = {};\n            n.r(i), n.d(i, \"create\", function() {\n                return F;\n            }), n.d(i, \"clone\", function() {\n                return B;\n            }), n.d(i, \"fromValues\", function() {\n                return W;\n            }), n.d(i, \"copy\", function() {\n                return q;\n            }), n.d(i, \"set\", function() {\n                return V;\n            }), n.d(i, \"add\", function() {\n                return G;\n            }), n.d(i, \"subtract\", function() {\n                return H;\n            }), n.d(i, \"multiply\", function() {\n                return X;\n            }), n.d(i, \"divide\", function() {\n                return Q;\n            }), n.d(i, \"ceil\", function() {\n                return Y;\n            }), n.d(i, \"floor\", function() {\n                return $;\n            }), n.d(i, \"min\", function() {\n                return Z;\n            }), n.d(i, \"max\", function() {\n                return K;\n            }), n.d(i, \"round\", function() {\n                return J;\n            }), n.d(i, \"scale\", function() {\n                return tt;\n            }), n.d(i, \"scaleAndAdd\", function() {\n                return et;\n            }), n.d(i, \"distance\", function() {\n                return nt;\n            }), n.d(i, \"squaredDistance\", function() {\n                return rt;\n            }), n.d(i, \"length\", function() {\n                return ot;\n            }), n.d(i, \"squaredLength\", function() {\n                return it;\n            }), n.d(i, \"negate\", function() {\n                return at;\n            }), n.d(i, \"inverse\", function() {\n                return ut;\n            }), n.d(i, \"normalize\", function() {\n                return ct;\n            }), n.d(i, \"dot\", function() {\n                return st;\n            }), n.d(i, \"cross\", function() {\n                return ft;\n            }), n.d(i, \"lerp\", function() {\n                return lt;\n            }), n.d(i, \"random\", function() {\n                return dt;\n            }), n.d(i, \"transformMat2\", function() {\n                return ht;\n            }), n.d(i, \"transformMat2d\", function() {\n                return vt;\n            }), n.d(i, \"transformMat3\", function() {\n                return pt;\n            }), n.d(i, \"transformMat4\", function() {\n                return yt;\n            }), n.d(i, \"rotate\", function() {\n                return gt;\n            }), n.d(i, \"angle\", function() {\n                return xt;\n            }), n.d(i, \"zero\", function() {\n                return mt;\n            }), n.d(i, \"str\", function() {\n                return _t;\n            }), n.d(i, \"exactEquals\", function() {\n                return bt;\n            }), n.d(i, \"equals\", function() {\n                return wt;\n            }), n.d(i, \"len\", function() {\n                return Rt;\n            }), n.d(i, \"sub\", function() {\n                return Mt;\n            }), n.d(i, \"mul\", function() {\n                return Ct;\n            }), n.d(i, \"div\", function() {\n                return Et;\n            }), n.d(i, \"dist\", function() {\n                return At;\n            }), n.d(i, \"sqrDist\", function() {\n                return St;\n            }), n.d(i, \"sqrLen\", function() {\n                return kt;\n            }), n.d(i, \"forEach\", function() {\n                return Pt;\n            });\n            var a = {};\n            n.r(a), n.d(a, \"create\", function() {\n                return Tt;\n            }), n.d(a, \"clone\", function() {\n                return Dt;\n            }), n.d(a, \"length\", function() {\n                return jt;\n            }), n.d(a, \"fromValues\", function() {\n                return It;\n            }), n.d(a, \"copy\", function() {\n                return zt;\n            }), n.d(a, \"set\", function() {\n                return Ut;\n            }), n.d(a, \"add\", function() {\n                return Lt;\n            }), n.d(a, \"subtract\", function() {\n                return Nt;\n            }), n.d(a, \"multiply\", function() {\n                return Ft;\n            }), n.d(a, \"divide\", function() {\n                return Bt;\n            }), n.d(a, \"ceil\", function() {\n                return Wt;\n            }), n.d(a, \"floor\", function() {\n                return qt;\n            }), n.d(a, \"min\", function() {\n                return Vt;\n            }), n.d(a, \"max\", function() {\n                return Gt;\n            }), n.d(a, \"round\", function() {\n                return Ht;\n            }), n.d(a, \"scale\", function() {\n                return Xt;\n            }), n.d(a, \"scaleAndAdd\", function() {\n                return Qt;\n            }), n.d(a, \"distance\", function() {\n                return Yt;\n            }), n.d(a, \"squaredDistance\", function() {\n                return $t;\n            }), n.d(a, \"squaredLength\", function() {\n                return Zt;\n            }), n.d(a, \"negate\", function() {\n                return Kt;\n            }), n.d(a, \"inverse\", function() {\n                return Jt;\n            }), n.d(a, \"normalize\", function() {\n                return te;\n            }), n.d(a, \"dot\", function() {\n                return ee;\n            }), n.d(a, \"cross\", function() {\n                return ne;\n            }), n.d(a, \"lerp\", function() {\n                return re;\n            }), n.d(a, \"hermite\", function() {\n                return oe;\n            }), n.d(a, \"bezier\", function() {\n                return ie;\n            }), n.d(a, \"random\", function() {\n                return ae;\n            }), n.d(a, \"transformMat4\", function() {\n                return ue;\n            }), n.d(a, \"transformMat3\", function() {\n                return ce;\n            }), n.d(a, \"transformQuat\", function() {\n                return se;\n            }), n.d(a, \"rotateX\", function() {\n                return fe;\n            }), n.d(a, \"rotateY\", function() {\n                return le;\n            }), n.d(a, \"rotateZ\", function() {\n                return de;\n            }), n.d(a, \"angle\", function() {\n                return he;\n            }), n.d(a, \"zero\", function() {\n                return ve;\n            }), n.d(a, \"str\", function() {\n                return pe;\n            }), n.d(a, \"exactEquals\", function() {\n                return ye;\n            }), n.d(a, \"equals\", function() {\n                return ge;\n            }), n.d(a, \"sub\", function() {\n                return xe;\n            }), n.d(a, \"mul\", function() {\n                return me;\n            }), n.d(a, \"div\", function() {\n                return _e;\n            }), n.d(a, \"dist\", function() {\n                return be;\n            }), n.d(a, \"sqrDist\", function() {\n                return we;\n            }), n.d(a, \"len\", function() {\n                return Oe;\n            }), n.d(a, \"sqrLen\", function() {\n                return Re;\n            }), n.d(a, \"forEach\", function() {\n                return Me;\n            });\n            var u = 1e-6, c = \"undefined\" != typeof Float32Array ? Float32Array : Array, s = Math.random;\n            function f(t) {\n                c = t;\n            }\n            var l = Math.PI / 180;\n            function d(t) {\n                return t * l;\n            }\n            function h(t, e) {\n                return Math.abs(t - e) <= u * Math.max(1, Math.abs(t), Math.abs(e));\n            }\n            function v() {\n                var t = new c(4);\n                return c != Float32Array && (t[1] = 0, t[2] = 0), t[0] = 1, t[3] = 1, t;\n            }\n            function p(t) {\n                var e = new c(4);\n                return e[0] = t[0], e[1] = t[1], e[2] = t[2], e[3] = t[3], e;\n            }\n            function y(t, e) {\n                return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t;\n            }\n            function g(t) {\n                return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t;\n            }\n            function x(t, e, n, r) {\n                var o = new c(4);\n                return o[0] = t, o[1] = e, o[2] = n, o[3] = r, o;\n            }\n            function m(t, e, n, r, o) {\n                return t[0] = e, t[1] = n, t[2] = r, t[3] = o, t;\n            }\n            function _(t, e) {\n                if (t === e) {\n                    var n = e[1];\n                    t[1] = e[2], t[2] = n;\n                } else t[0] = e[0], t[1] = e[2], t[2] = e[1], t[3] = e[3];\n                return t;\n            }\n            function b(t, e) {\n                var n = e[0], r = e[1], o = e[2], i = e[3], a = n * i - o * r;\n                return a ? (a = 1 / a, t[0] = i * a, t[1] = -r * a, t[2] = -o * a, t[3] = n * a, t) : null;\n            }\n            function w(t, e) {\n                var n = e[0];\n                return t[0] = e[3], t[1] = -e[1], t[2] = -e[2], t[3] = n, t;\n            }\n            function O(t) {\n                return t[0] * t[3] - t[2] * t[1];\n            }\n            function R(t, e, n) {\n                var r = e[0], o = e[1], i = e[2], a = e[3], u = n[0], c = n[1], s = n[2], f = n[3];\n                return t[0] = r * u + i * c, t[1] = o * u + a * c, t[2] = r * s + i * f, t[3] = o * s + a * f, t;\n            }\n            function M(t, e, n) {\n                var r = e[0], o = e[1], i = e[2], a = e[3], u = Math.sin(n), c = Math.cos(n);\n                return t[0] = r * c + i * u, t[1] = o * c + a * u, t[2] = r * -u + i * c, t[3] = o * -u + a * c, t;\n            }\n            function C(t, e, n) {\n                var r = e[0], o = e[1], i = e[2], a = e[3], u = n[0], c = n[1];\n                return t[0] = r * u, t[1] = o * u, t[2] = i * c, t[3] = a * c, t;\n            }\n            function E(t, e) {\n                var n = Math.sin(e), r = Math.cos(e);\n                return t[0] = r, t[1] = n, t[2] = -n, t[3] = r, t;\n            }\n            function A(t, e) {\n                return t[0] = e[0], t[1] = 0, t[2] = 0, t[3] = e[1], t;\n            }\n            function S(t) {\n                return \"mat2(\" + t[0] + \", \" + t[1] + \", \" + t[2] + \", \" + t[3] + \")\";\n            }\n            function k(t) {\n                return Math.hypot(t[0], t[1], t[2], t[3]);\n            }\n            function P(t, e, n, r) {\n                return t[2] = r[2] / r[0], n[0] = r[0], n[1] = r[1], n[3] = r[3] - t[2] * n[1], [\n                    t,\n                    e,\n                    n\n                ];\n            }\n            function T(t, e, n) {\n                return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t[3] = e[3] + n[3], t;\n            }\n            function D(t, e, n) {\n                return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t[3] = e[3] - n[3], t;\n            }\n            function j(t, e) {\n                return t[0] === e[0] && t[1] === e[1] && t[2] === e[2] && t[3] === e[3];\n            }\n            function I(t, e) {\n                var n = t[0], r = t[1], o = t[2], i = t[3], a = e[0], c = e[1], s = e[2], f = e[3];\n                return Math.abs(n - a) <= u * Math.max(1, Math.abs(n), Math.abs(a)) && Math.abs(r - c) <= u * Math.max(1, Math.abs(r), Math.abs(c)) && Math.abs(o - s) <= u * Math.max(1, Math.abs(o), Math.abs(s)) && Math.abs(i - f) <= u * Math.max(1, Math.abs(i), Math.abs(f));\n            }\n            function z(t, e, n) {\n                return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t[3] = e[3] * n, t;\n            }\n            function U(t, e, n, r) {\n                return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t[3] = e[3] + n[3] * r, t;\n            }\n            Math.hypot || (Math.hypot = function() {\n                for(var t = 0, e = arguments.length; e--;)t += arguments[e] * arguments[e];\n                return Math.sqrt(t);\n            });\n            var L = R, N = D;\n            function F() {\n                var t = new c(2);\n                return c != Float32Array && (t[0] = 0, t[1] = 0), t;\n            }\n            function B(t) {\n                var e = new c(2);\n                return e[0] = t[0], e[1] = t[1], e;\n            }\n            function W(t, e) {\n                var n = new c(2);\n                return n[0] = t, n[1] = e, n;\n            }\n            function q(t, e) {\n                return t[0] = e[0], t[1] = e[1], t;\n            }\n            function V(t, e, n) {\n                return t[0] = e, t[1] = n, t;\n            }\n            function G(t, e, n) {\n                return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t;\n            }\n            function H(t, e, n) {\n                return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t;\n            }\n            function X(t, e, n) {\n                return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t;\n            }\n            function Q(t, e, n) {\n                return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t;\n            }\n            function Y(t, e) {\n                return t[0] = Math.ceil(e[0]), t[1] = Math.ceil(e[1]), t;\n            }\n            function $(t, e) {\n                return t[0] = Math.floor(e[0]), t[1] = Math.floor(e[1]), t;\n            }\n            function Z(t, e, n) {\n                return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t;\n            }\n            function K(t, e, n) {\n                return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t;\n            }\n            function J(t, e) {\n                return t[0] = Math.round(e[0]), t[1] = Math.round(e[1]), t;\n            }\n            function tt(t, e, n) {\n                return t[0] = e[0] * n, t[1] = e[1] * n, t;\n            }\n            function et(t, e, n, r) {\n                return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t;\n            }\n            function nt(t, e) {\n                var n = e[0] - t[0], r = e[1] - t[1];\n                return Math.hypot(n, r);\n            }\n            function rt(t, e) {\n                var n = e[0] - t[0], r = e[1] - t[1];\n                return n * n + r * r;\n            }\n            function ot(t) {\n                var e = t[0], n = t[1];\n                return Math.hypot(e, n);\n            }\n            function it(t) {\n                var e = t[0], n = t[1];\n                return e * e + n * n;\n            }\n            function at(t, e) {\n                return t[0] = -e[0], t[1] = -e[1], t;\n            }\n            function ut(t, e) {\n                return t[0] = 1 / e[0], t[1] = 1 / e[1], t;\n            }\n            function ct(t, e) {\n                var n = e[0], r = e[1], o = n * n + r * r;\n                return o > 0 && (o = 1 / Math.sqrt(o)), t[0] = e[0] * o, t[1] = e[1] * o, t;\n            }\n            function st(t, e) {\n                return t[0] * e[0] + t[1] * e[1];\n            }\n            function ft(t, e, n) {\n                var r = e[0] * n[1] - e[1] * n[0];\n                return t[0] = t[1] = 0, t[2] = r, t;\n            }\n            function lt(t, e, n, r) {\n                var o = e[0], i = e[1];\n                return t[0] = o + r * (n[0] - o), t[1] = i + r * (n[1] - i), t;\n            }\n            function dt(t, e) {\n                e = e || 1;\n                var n = 2 * s() * Math.PI;\n                return t[0] = Math.cos(n) * e, t[1] = Math.sin(n) * e, t;\n            }\n            function ht(t, e, n) {\n                var r = e[0], o = e[1];\n                return t[0] = n[0] * r + n[2] * o, t[1] = n[1] * r + n[3] * o, t;\n            }\n            function vt(t, e, n) {\n                var r = e[0], o = e[1];\n                return t[0] = n[0] * r + n[2] * o + n[4], t[1] = n[1] * r + n[3] * o + n[5], t;\n            }\n            function pt(t, e, n) {\n                var r = e[0], o = e[1];\n                return t[0] = n[0] * r + n[3] * o + n[6], t[1] = n[1] * r + n[4] * o + n[7], t;\n            }\n            function yt(t, e, n) {\n                var r = e[0], o = e[1];\n                return t[0] = n[0] * r + n[4] * o + n[12], t[1] = n[1] * r + n[5] * o + n[13], t;\n            }\n            function gt(t, e, n, r) {\n                var o = e[0] - n[0], i = e[1] - n[1], a = Math.sin(r), u = Math.cos(r);\n                return t[0] = o * u - i * a + n[0], t[1] = o * a + i * u + n[1], t;\n            }\n            function xt(t, e) {\n                var n = t[0], r = t[1], o = e[0], i = e[1], a = Math.sqrt(n * n + r * r) * Math.sqrt(o * o + i * i), u = a && (n * o + r * i) / a;\n                return Math.acos(Math.min(Math.max(u, -1), 1));\n            }\n            function mt(t) {\n                return t[0] = 0, t[1] = 0, t;\n            }\n            function _t(t) {\n                return \"vec2(\" + t[0] + \", \" + t[1] + \")\";\n            }\n            function bt(t, e) {\n                return t[0] === e[0] && t[1] === e[1];\n            }\n            function wt(t, e) {\n                var n = t[0], r = t[1], o = e[0], i = e[1];\n                return Math.abs(n - o) <= u * Math.max(1, Math.abs(n), Math.abs(o)) && Math.abs(r - i) <= u * Math.max(1, Math.abs(r), Math.abs(i));\n            }\n            var Ot, Rt = ot, Mt = H, Ct = X, Et = Q, At = nt, St = rt, kt = it, Pt = (Ot = F(), function(t, e, n, r, o, i) {\n                var a, u;\n                for(e || (e = 2), n || (n = 0), u = r ? Math.min(r * e + n, t.length) : t.length, a = n; a < u; a += e)Ot[0] = t[a], Ot[1] = t[a + 1], o(Ot, Ot, i), t[a] = Ot[0], t[a + 1] = Ot[1];\n                return t;\n            });\n            function Tt() {\n                var t = new c(3);\n                return c != Float32Array && (t[0] = 0, t[1] = 0, t[2] = 0), t;\n            }\n            function Dt(t) {\n                var e = new c(3);\n                return e[0] = t[0], e[1] = t[1], e[2] = t[2], e;\n            }\n            function jt(t) {\n                var e = t[0], n = t[1], r = t[2];\n                return Math.hypot(e, n, r);\n            }\n            function It(t, e, n) {\n                var r = new c(3);\n                return r[0] = t, r[1] = e, r[2] = n, r;\n            }\n            function zt(t, e) {\n                return t[0] = e[0], t[1] = e[1], t[2] = e[2], t;\n            }\n            function Ut(t, e, n, r) {\n                return t[0] = e, t[1] = n, t[2] = r, t;\n            }\n            function Lt(t, e, n) {\n                return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t[2] = e[2] + n[2], t;\n            }\n            function Nt(t, e, n) {\n                return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t[2] = e[2] - n[2], t;\n            }\n            function Ft(t, e, n) {\n                return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t[2] = e[2] * n[2], t;\n            }\n            function Bt(t, e, n) {\n                return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t[2] = e[2] / n[2], t;\n            }\n            function Wt(t, e) {\n                return t[0] = Math.ceil(e[0]), t[1] = Math.ceil(e[1]), t[2] = Math.ceil(e[2]), t;\n            }\n            function qt(t, e) {\n                return t[0] = Math.floor(e[0]), t[1] = Math.floor(e[1]), t[2] = Math.floor(e[2]), t;\n            }\n            function Vt(t, e, n) {\n                return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t[2] = Math.min(e[2], n[2]), t;\n            }\n            function Gt(t, e, n) {\n                return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t[2] = Math.max(e[2], n[2]), t;\n            }\n            function Ht(t, e) {\n                return t[0] = Math.round(e[0]), t[1] = Math.round(e[1]), t[2] = Math.round(e[2]), t;\n            }\n            function Xt(t, e, n) {\n                return t[0] = e[0] * n, t[1] = e[1] * n, t[2] = e[2] * n, t;\n            }\n            function Qt(t, e, n, r) {\n                return t[0] = e[0] + n[0] * r, t[1] = e[1] + n[1] * r, t[2] = e[2] + n[2] * r, t;\n            }\n            function Yt(t, e) {\n                var n = e[0] - t[0], r = e[1] - t[1], o = e[2] - t[2];\n                return Math.hypot(n, r, o);\n            }\n            function $t(t, e) {\n                var n = e[0] - t[0], r = e[1] - t[1], o = e[2] - t[2];\n                return n * n + r * r + o * o;\n            }\n            function Zt(t) {\n                var e = t[0], n = t[1], r = t[2];\n                return e * e + n * n + r * r;\n            }\n            function Kt(t, e) {\n                return t[0] = -e[0], t[1] = -e[1], t[2] = -e[2], t;\n            }\n            function Jt(t, e) {\n                return t[0] = 1 / e[0], t[1] = 1 / e[1], t[2] = 1 / e[2], t;\n            }\n            function te(t, e) {\n                var n = e[0], r = e[1], o = e[2], i = n * n + r * r + o * o;\n                return i > 0 && (i = 1 / Math.sqrt(i)), t[0] = e[0] * i, t[1] = e[1] * i, t[2] = e[2] * i, t;\n            }\n            function ee(t, e) {\n                return t[0] * e[0] + t[1] * e[1] + t[2] * e[2];\n            }\n            function ne(t, e, n) {\n                var r = e[0], o = e[1], i = e[2], a = n[0], u = n[1], c = n[2];\n                return t[0] = o * c - i * u, t[1] = i * a - r * c, t[2] = r * u - o * a, t;\n            }\n            function re(t, e, n, r) {\n                var o = e[0], i = e[1], a = e[2];\n                return t[0] = o + r * (n[0] - o), t[1] = i + r * (n[1] - i), t[2] = a + r * (n[2] - a), t;\n            }\n            function oe(t, e, n, r, o, i) {\n                var a = i * i, u = a * (2 * i - 3) + 1, c = a * (i - 2) + i, s = a * (i - 1), f = a * (3 - 2 * i);\n                return t[0] = e[0] * u + n[0] * c + r[0] * s + o[0] * f, t[1] = e[1] * u + n[1] * c + r[1] * s + o[1] * f, t[2] = e[2] * u + n[2] * c + r[2] * s + o[2] * f, t;\n            }\n            function ie(t, e, n, r, o, i) {\n                var a = 1 - i, u = a * a, c = i * i, s = u * a, f = 3 * i * u, l = 3 * c * a, d = c * i;\n                return t[0] = e[0] * s + n[0] * f + r[0] * l + o[0] * d, t[1] = e[1] * s + n[1] * f + r[1] * l + o[1] * d, t[2] = e[2] * s + n[2] * f + r[2] * l + o[2] * d, t;\n            }\n            function ae(t, e) {\n                e = e || 1;\n                var n = 2 * s() * Math.PI, r = 2 * s() - 1, o = Math.sqrt(1 - r * r) * e;\n                return t[0] = Math.cos(n) * o, t[1] = Math.sin(n) * o, t[2] = r * e, t;\n            }\n            function ue(t, e, n) {\n                var r = e[0], o = e[1], i = e[2], a = n[3] * r + n[7] * o + n[11] * i + n[15];\n                return a = a || 1, t[0] = (n[0] * r + n[4] * o + n[8] * i + n[12]) / a, t[1] = (n[1] * r + n[5] * o + n[9] * i + n[13]) / a, t[2] = (n[2] * r + n[6] * o + n[10] * i + n[14]) / a, t;\n            }\n            function ce(t, e, n) {\n                var r = e[0], o = e[1], i = e[2];\n                return t[0] = r * n[0] + o * n[3] + i * n[6], t[1] = r * n[1] + o * n[4] + i * n[7], t[2] = r * n[2] + o * n[5] + i * n[8], t;\n            }\n            function se(t, e, n) {\n                var r = n[0], o = n[1], i = n[2], a = n[3], u = e[0], c = e[1], s = e[2], f = o * s - i * c, l = i * u - r * s, d = r * c - o * u, h = o * d - i * l, v = i * f - r * d, p = r * l - o * f, y = 2 * a;\n                return f *= y, l *= y, d *= y, h *= 2, v *= 2, p *= 2, t[0] = u + f + h, t[1] = c + l + v, t[2] = s + d + p, t;\n            }\n            function fe(t, e, n, r) {\n                var o = [], i = [];\n                return o[0] = e[0] - n[0], o[1] = e[1] - n[1], o[2] = e[2] - n[2], i[0] = o[0], i[1] = o[1] * Math.cos(r) - o[2] * Math.sin(r), i[2] = o[1] * Math.sin(r) + o[2] * Math.cos(r), t[0] = i[0] + n[0], t[1] = i[1] + n[1], t[2] = i[2] + n[2], t;\n            }\n            function le(t, e, n, r) {\n                var o = [], i = [];\n                return o[0] = e[0] - n[0], o[1] = e[1] - n[1], o[2] = e[2] - n[2], i[0] = o[2] * Math.sin(r) + o[0] * Math.cos(r), i[1] = o[1], i[2] = o[2] * Math.cos(r) - o[0] * Math.sin(r), t[0] = i[0] + n[0], t[1] = i[1] + n[1], t[2] = i[2] + n[2], t;\n            }\n            function de(t, e, n, r) {\n                var o = [], i = [];\n                return o[0] = e[0] - n[0], o[1] = e[1] - n[1], o[2] = e[2] - n[2], i[0] = o[0] * Math.cos(r) - o[1] * Math.sin(r), i[1] = o[0] * Math.sin(r) + o[1] * Math.cos(r), i[2] = o[2], t[0] = i[0] + n[0], t[1] = i[1] + n[1], t[2] = i[2] + n[2], t;\n            }\n            function he(t, e) {\n                var n = t[0], r = t[1], o = t[2], i = e[0], a = e[1], u = e[2], c = Math.sqrt(n * n + r * r + o * o) * Math.sqrt(i * i + a * a + u * u), s = c && ee(t, e) / c;\n                return Math.acos(Math.min(Math.max(s, -1), 1));\n            }\n            function ve(t) {\n                return t[0] = 0, t[1] = 0, t[2] = 0, t;\n            }\n            function pe(t) {\n                return \"vec3(\" + t[0] + \", \" + t[1] + \", \" + t[2] + \")\";\n            }\n            function ye(t, e) {\n                return t[0] === e[0] && t[1] === e[1] && t[2] === e[2];\n            }\n            function ge(t, e) {\n                var n = t[0], r = t[1], o = t[2], i = e[0], a = e[1], c = e[2];\n                return Math.abs(n - i) <= u * Math.max(1, Math.abs(n), Math.abs(i)) && Math.abs(r - a) <= u * Math.max(1, Math.abs(r), Math.abs(a)) && Math.abs(o - c) <= u * Math.max(1, Math.abs(o), Math.abs(c));\n            }\n            var xe = Nt, me = Ft, _e = Bt, be = Yt, we = $t, Oe = jt, Re = Zt, Me = function() {\n                var t = Tt();\n                return function(e, n, r, o, i, a) {\n                    var u, c;\n                    for(n || (n = 3), r || (r = 0), c = o ? Math.min(o * n + r, e.length) : e.length, u = r; u < c; u += n)t[0] = e[u], t[1] = e[u + 1], t[2] = e[u + 2], i(t, t, a), e[u] = t[0], e[u + 1] = t[1], e[u + 2] = t[2];\n                    return e;\n                };\n            }();\n        },\n        function(t, e, n) {\n            var r = n(13).default, o = n(1);\n            t.exports = function(t, e) {\n                if (e && (\"object\" === r(e) || \"function\" == typeof e)) return e;\n                if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n                return o(t);\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(40);\n            t.exports = function(t, e) {\n                if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n                t.prototype = Object.create(e && e.prototype, {\n                    constructor: {\n                        value: t,\n                        writable: !0,\n                        configurable: !0\n                    }\n                }), Object.defineProperty(t, \"prototype\", {\n                    writable: !1\n                }), e && r(t, e);\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(141)();\n            t.exports = r;\n            try {\n                regeneratorRuntime = r;\n            } catch (t) {\n                \"object\" == typeof globalThis ? globalThis.regeneratorRuntime = r : Function(\"r\", \"regeneratorRuntime = r\")(r);\n            }\n        },\n        function(t, e, n) {\n            \"use strict\";\n            e.a = {\n                init: function(t, e) {\n                    t.fill(e);\n                },\n                shuffle: function(t) {\n                    for(var e = t.length - 1; e > 0; e--){\n                        var n = Math.floor(Math.random() * (e + 1)), r = [\n                            t[n],\n                            t[e]\n                        ];\n                        t[e] = r[0], t[n] = r[1];\n                    }\n                    return t;\n                },\n                toPointList: function(t) {\n                    var e = t.reduce(function(t, e) {\n                        var n = \"[\".concat(e.join(\",\"), \"]\");\n                        return t.push(n), t;\n                    }, []);\n                    return \"[\".concat(e.join(\",\\r\\n\"), \"]\");\n                },\n                threshold: function(t, e, n) {\n                    return t.reduce(function(r, o) {\n                        return n.apply(t, [\n                            o\n                        ]) >= e && r.push(o), r;\n                    }, []);\n                },\n                maxIndex: function(t) {\n                    for(var e = 0, n = 0; n < t.length; n++)t[n] > t[e] && (e = n);\n                    return e;\n                },\n                max: function(t) {\n                    for(var e = 0, n = 0; n < t.length; n++)t[n] > e && (e = t[n]);\n                    return e;\n                },\n                sum: function(t) {\n                    for(var e = t.length, n = 0; e--;)n += t[e];\n                    return n;\n                }\n            };\n        },\n        function(t, e, n) {\n            \"use strict\";\n            n.d(e, \"h\", function() {\n                return u;\n            }), n.d(e, \"i\", function() {\n                return s;\n            }), n.d(e, \"b\", function() {\n                return f;\n            }), n.d(e, \"j\", function() {\n                return l;\n            }), n.d(e, \"e\", function() {\n                return d;\n            }), n.d(e, \"c\", function() {\n                return h;\n            }), n.d(e, \"f\", function() {\n                return v;\n            }), n.d(e, \"g\", function() {\n                return p;\n            }), n.d(e, \"a\", function() {\n                return g;\n            }), n.d(e, \"d\", function() {\n                return m;\n            });\n            var r = n(5), o = n(9);\n            r.a.setMatrixArrayType(Array);\n            var i = function(t, e) {\n                var n = [], o = {\n                    rad: 0,\n                    vec: r.c.clone([\n                        0,\n                        0\n                    ])\n                }, i = {};\n                function a(t) {\n                    i[t.id] = t, n.push(t);\n                }\n                function u() {\n                    var t, e = 0;\n                    for(t = 0; t < n.length; t++)e += n[t].rad;\n                    o.rad = e / n.length, o.vec = r.c.clone([\n                        Math.cos(o.rad),\n                        Math.sin(o.rad)\n                    ]);\n                }\n                return a(t), u(), {\n                    add: function(t) {\n                        i[t.id] || (a(t), u());\n                    },\n                    fits: function(t) {\n                        return Math.abs(r.c.dot(t.point.vec, o.vec)) > e;\n                    },\n                    getPoints: function() {\n                        return n;\n                    },\n                    getCenter: function() {\n                        return o;\n                    }\n                };\n            }, a = function(t, e, n) {\n                return {\n                    rad: t[n],\n                    point: t,\n                    id: e\n                };\n            };\n            function u(t, e) {\n                return {\n                    x: t,\n                    y: e,\n                    toVec2: function() {\n                        return r.c.clone([\n                            this.x,\n                            this.y\n                        ]);\n                    },\n                    toVec3: function() {\n                        return r.d.clone([\n                            this.x,\n                            this.y,\n                            1\n                        ]);\n                    },\n                    round: function() {\n                        return this.x = this.x > 0 ? Math.floor(this.x + .5) : Math.floor(this.x - .5), this.y = this.y > 0 ? Math.floor(this.y + .5) : Math.floor(this.y - .5), this;\n                    }\n                };\n            }\n            function c(t, e) {\n                e || (e = 8);\n                for(var n = t.data, r = n.length, o = 8 - e, i = new Int32Array(1 << e); r--;)i[n[r] >> o]++;\n                return i;\n            }\n            function s(t, e) {\n                var n = function(t) {\n                    var e, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 8, r = 8 - n;\n                    function i(t, n) {\n                        for(var r = 0, o = t; o <= n; o++)r += e[o];\n                        return r;\n                    }\n                    function a(t, n) {\n                        for(var r = 0, o = t; o <= n; o++)r += o * e[o];\n                        return r;\n                    }\n                    function u() {\n                        var r, u, s, f, l = [\n                            0\n                        ], d = (1 << n) - 1;\n                        e = c(t, n);\n                        for(var h = 1; h < d; h++)0 === (s = (r = i(0, h)) * (u = i(h + 1, d))) && (s = 1), f = a(0, h) * u - a(h + 1, d) * r, l[h] = f * f / s;\n                        return o.a.maxIndex(l);\n                    }\n                    var s = u();\n                    return s << r;\n                }(t);\n                return function(t, e, n) {\n                    n || (n = t);\n                    for(var r = t.data, o = r.length, i = n.data; o--;)i[o] = r[o] < e ? 1 : 0;\n                }(t, n, e), n;\n            }\n            function f(t, e, n) {\n                var r, o, u, c, s = [];\n                function f(t) {\n                    var e = !1;\n                    for(o = 0; o < s.length; o++)(u = s[o]).fits(t) && (u.add(t), e = !0);\n                    return e;\n                }\n                for(n || (n = \"rad\"), r = 0; r < t.length; r++)f(c = a(t[r], r, n)) || s.push(i(c, e));\n                return s;\n            }\n            r.a.setMatrixArrayType(Array);\n            function l(t, e, n) {\n                var r, o, i, a, u = 0, c = 0, s = [];\n                for(r = 0; r < e; r++)s[r] = {\n                    score: 0,\n                    item: null\n                };\n                for(r = 0; r < t.length; r++)if ((o = n.apply(this, [\n                    t[r]\n                ])) > c) for((i = s[u]).score = o, i.item = t[r], c = Number.MAX_VALUE, a = 0; a < e; a++)s[a].score < c && (c = s[a].score, u = a);\n                return s;\n            }\n            function d(t, e, n) {\n                for(var r, o = 0, i = e.x, a = Math.floor(t.length / 4), u = e.x / 2, c = 0, s = e.x; i < a;){\n                    for(r = 0; r < u; r++)n[c] = (.299 * t[4 * o + 0] + .587 * t[4 * o + 1] + .114 * t[4 * o + 2] + (.299 * t[4 * (o + 1) + 0] + .587 * t[4 * (o + 1) + 1] + .114 * t[4 * (o + 1) + 2]) + (.299 * t[4 * i + 0] + .587 * t[4 * i + 1] + .114 * t[4 * i + 2]) + (.299 * t[4 * (i + 1) + 0] + .587 * t[4 * (i + 1) + 1] + .114 * t[4 * (i + 1) + 2])) / 4, c++, o += 2, i += 2;\n                    o += s, i += s;\n                }\n            }\n            function h(t, e, n) {\n                var r = t.length / 4 | 0;\n                if (n && !0 === n.singleChannel) for(var o = 0; o < r; o++)e[o] = t[4 * o + 0];\n                else for(var i = 0; i < r; i++)e[i] = .299 * t[4 * i + 0] + .587 * t[4 * i + 1] + .114 * t[4 * i + 2];\n            }\n            function v(t, e) {\n                for(var n = t.data, r = t.size.x, o = e.data, i = 0, a = r, u = n.length, c = r / 2, s = 0; a < u;){\n                    for(var f = 0; f < c; f++)o[s] = Math.floor((n[i] + n[i + 1] + n[a] + n[a + 1]) / 4), s++, i += 2, a += 2;\n                    i += r, a += r;\n                }\n            }\n            function p(t) {\n                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [\n                    0,\n                    0,\n                    0\n                ], n = t[0], r = t[1], o = t[2], i = o * r, a = i * (1 - Math.abs(n / 60 % 2 - 1)), u = o - i, c = 0, s = 0, f = 0;\n                return n < 60 ? (c = i, s = a) : n < 120 ? (c = a, s = i) : n < 180 ? (s = i, f = a) : n < 240 ? (s = a, f = i) : n < 300 ? (c = a, f = i) : n < 360 && (c = i, f = a), e[0] = 255 * (c + u) | 0, e[1] = 255 * (s + u) | 0, e[2] = 255 * (f + u) | 0, e;\n            }\n            function y(t) {\n                for(var e = [], n = [], r = 1; r < Math.sqrt(t) + 1; r++)t % r == 0 && (n.push(r), r !== t / r && e.unshift(Math.floor(t / r)));\n                return n.concat(e);\n            }\n            function g(t, e) {\n                var n, r = y(e.x), o = y(e.y), i = Math.max(e.x, e.y), a = function(t, e) {\n                    for(var n = 0, r = 0, o = []; n < t.length && r < e.length;)t[n] === e[r] ? (o.push(t[n]), n++, r++) : t[n] > e[r] ? r++ : n++;\n                    return o;\n                }(r, o), u = [\n                    8,\n                    10,\n                    15,\n                    20,\n                    32,\n                    60,\n                    80\n                ], c = {\n                    \"x-small\": 5,\n                    small: 4,\n                    medium: 3,\n                    large: 2,\n                    \"x-large\": 1\n                }, s = c[t] || c.medium, f = u[s], l = Math.floor(i / f);\n                function d(t) {\n                    for(var e = 0, n = t[Math.floor(t.length / 2)]; e < t.length - 1 && t[e] < l;)e++;\n                    return e > 0 && (n = Math.abs(t[e] - l) > Math.abs(t[e - 1] - l) ? t[e - 1] : t[e]), l / n < u[s + 1] / u[s] && l / n > u[s - 1] / u[s] ? {\n                        x: n,\n                        y: n\n                    } : null;\n                }\n                return (n = d(a)) || (n = d(y(i))) || (n = d(y(l * f))), n;\n            }\n            var x = {\n                top: function(t, e) {\n                    return \"%\" === t.unit ? Math.floor(e.height * (t.value / 100)) : null;\n                },\n                right: function(t, e) {\n                    return \"%\" === t.unit ? Math.floor(e.width - e.width * (t.value / 100)) : null;\n                },\n                bottom: function(t, e) {\n                    return \"%\" === t.unit ? Math.floor(e.height - e.height * (t.value / 100)) : null;\n                },\n                left: function(t, e) {\n                    return \"%\" === t.unit ? Math.floor(e.width * (t.value / 100)) : null;\n                }\n            };\n            function m(t, e, n) {\n                var r = {\n                    width: t,\n                    height: e\n                }, o = Object.keys(n).reduce(function(t, e) {\n                    var o = function(t) {\n                        return {\n                            value: parseFloat(t),\n                            unit: (t.indexOf(\"%\"), t.length, \"%\")\n                        };\n                    }(n[e]), i = x[e](o, r);\n                    return t[e] = i, t;\n                }, {});\n                return {\n                    sx: o.left,\n                    sy: o.top,\n                    sw: o.right - o.left,\n                    sh: o.bottom - o.top\n                };\n            }\n        },\n        function(t, e, n) {\n            \"use strict\";\n            var r = n(62), o = n.n(r), i = n(3), a = n.n(i), u = n(4), c = n.n(u), s = n(0), f = n.n(s), l = n(5), d = n(9), h = n(10);\n            function v(t) {\n                if (t < 0) throw new Error(\"expected positive number, received \".concat(t));\n            }\n            l.a.setMatrixArrayType(Array);\n            var p = function() {\n                function t(e, n) {\n                    var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Uint8Array, o = arguments.length > 3 ? arguments[3] : void 0;\n                    a()(this, t), f()(this, \"data\", void 0), f()(this, \"size\", void 0), f()(this, \"indexMapping\", void 0), n ? this.data = n : (this.data = new r(e.x * e.y), o && d.a.init(this.data, 0)), this.size = e;\n                }\n                return c()(t, [\n                    {\n                        key: \"inImageWithBorder\",\n                        value: function(t) {\n                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;\n                            return v(e), t.x >= 0 && t.y >= 0 && t.x < this.size.x + 2 * e && t.y < this.size.y + 2 * e;\n                        }\n                    },\n                    {\n                        key: \"subImageAsCopy\",\n                        value: function(t, e) {\n                            v(e.x), v(e.y);\n                            for(var n = t.size, r = n.x, o = n.y, i = 0; i < r; i++)for(var a = 0; a < o; a++)t.data[a * r + i] = this.data[(e.y + a) * this.size.x + e.x + i];\n                            return t;\n                        }\n                    },\n                    {\n                        key: \"get\",\n                        value: function(t, e) {\n                            return this.data[e * this.size.x + t];\n                        }\n                    },\n                    {\n                        key: \"getSafe\",\n                        value: function(t, e) {\n                            if (!this.indexMapping) {\n                                this.indexMapping = {\n                                    x: [],\n                                    y: []\n                                };\n                                for(var n = 0; n < this.size.x; n++)this.indexMapping.x[n] = n, this.indexMapping.x[n + this.size.x] = n;\n                                for(var r = 0; r < this.size.y; r++)this.indexMapping.y[r] = r, this.indexMapping.y[r + this.size.y] = r;\n                            }\n                            return this.data[this.indexMapping.y[e + this.size.y] * this.size.x + this.indexMapping.x[t + this.size.x]];\n                        }\n                    },\n                    {\n                        key: \"set\",\n                        value: function(t, e, n) {\n                            return this.data[e * this.size.x + t] = n, delete this.indexMapping, this;\n                        }\n                    },\n                    {\n                        key: \"zeroBorder\",\n                        value: function() {\n                            for(var t = this.size, e = t.x, n = t.y, r = 0; r < e; r++)this.data[r] = this.data[(n - 1) * e + r] = 0;\n                            for(var o = 1; o < n - 1; o++)this.data[o * e] = this.data[o * e + (e - 1)] = 0;\n                            return delete this.indexMapping, this;\n                        }\n                    },\n                    {\n                        key: \"moments\",\n                        value: function(t) {\n                            var e, n, r, o, i, a, u, c, s, f, d = this.data, h = this.size.y, v = this.size.x, p = [], y = [], g = Math.PI, x = g / 4;\n                            if (t <= 0) return y;\n                            for(i = 0; i < t; i++)p[i] = {\n                                m00: 0,\n                                m01: 0,\n                                m10: 0,\n                                m11: 0,\n                                m02: 0,\n                                m20: 0,\n                                theta: 0,\n                                rad: 0\n                            };\n                            for(n = 0; n < h; n++)for(o = n * n, e = 0; e < v; e++)(r = d[n * v + e]) > 0 && ((a = p[r - 1]).m00 += 1, a.m01 += n, a.m10 += e, a.m11 += e * n, a.m02 += o, a.m20 += e * e);\n                            for(i = 0; i < t; i++)a = p[i], isNaN(a.m00) || 0 === a.m00 || (c = a.m10 / a.m00, s = a.m01 / a.m00, u = a.m11 / a.m00 - c * s, f = (a.m02 / a.m00 - s * s - (a.m20 / a.m00 - c * c)) / (2 * u), f = .5 * Math.atan(f) + (u >= 0 ? x : -x) + g, a.theta = (180 * f / g + 90) % 180 - 90, a.theta < 0 && (a.theta += 180), a.rad = f > g ? f - g : f, a.vec = l.c.clone([\n                                Math.cos(f),\n                                Math.sin(f)\n                            ]), y.push(a));\n                            return y;\n                        }\n                    },\n                    {\n                        key: \"getAsRGBA\",\n                        value: function() {\n                            for(var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, e = new Uint8ClampedArray(4 * this.size.x * this.size.y), n = 0; n < this.size.y; n++)for(var r = 0; r < this.size.x; r++){\n                                var o = n * this.size.x + r, i = this.get(r, n) * t;\n                                e[4 * o + 0] = i, e[4 * o + 1] = i, e[4 * o + 2] = i, e[4 * o + 3] = 255;\n                            }\n                            return e;\n                        }\n                    },\n                    {\n                        key: \"show\",\n                        value: function(t) {\n                            var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;\n                            console.warn(\"* imagewrapper show getcontext 2d\");\n                            var n = t.getContext(\"2d\");\n                            if (!n) throw new Error(\"Unable to get canvas context\");\n                            var r = n.getImageData(0, 0, t.width, t.height), o = this.getAsRGBA(e);\n                            t.width = this.size.x, t.height = this.size.y;\n                            var i = new ImageData(o, r.width, r.height);\n                            n.putImageData(i, 0, 0);\n                        }\n                    },\n                    {\n                        key: \"overlay\",\n                        value: function(t, e, n) {\n                            var r = e < 0 || e > 360 ? 360 : e, i = [\n                                0,\n                                1,\n                                1\n                            ], a = [\n                                0,\n                                0,\n                                0\n                            ], u = [\n                                255,\n                                255,\n                                255\n                            ], c = [\n                                0,\n                                0,\n                                0\n                            ];\n                            console.warn(\"* imagewrapper overlay getcontext 2d\");\n                            var s = t.getContext(\"2d\");\n                            if (!s) throw new Error(\"Unable to get canvas context\");\n                            for(var f = s.getImageData(n.x, n.y, this.size.x, this.size.y), l = f.data, d = this.data.length; d--;){\n                                i[0] = this.data[d] * r;\n                                var v = 4 * d, p = i[0] <= 0 ? u : i[0] >= 360 ? c : Object(h.g)(i, a), y = o()(p, 3);\n                                l[v] = y[0], l[v + 1] = y[1], l[v + 2] = y[2], l[v + 3] = 255;\n                            }\n                            s.putImageData(f, n.x, n.y);\n                        }\n                    }\n                ]), t;\n            }();\n            e.a = p;\n        },\n        function(t, e) {\n            function n(t, e, n, r, o, i, a) {\n                try {\n                    var u = t[i](a), c = u.value;\n                } catch (t) {\n                    return void n(t);\n                }\n                u.done ? e(c) : Promise.resolve(c).then(r, o);\n            }\n            t.exports = function(t) {\n                return function() {\n                    var e = this, r = arguments;\n                    return new Promise(function(o, i) {\n                        var a = t.apply(e, r);\n                        function u(t) {\n                            n(a, o, i, u, c, \"next\", t);\n                        }\n                        function c(t) {\n                            n(a, o, i, u, c, \"throw\", t);\n                        }\n                        u(void 0);\n                    });\n                };\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            function n(e) {\n                return t.exports = n = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(t) {\n                    return typeof t;\n                } : function(t) {\n                    return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n                }, t.exports.__esModule = !0, t.exports.default = t.exports, n(e);\n            }\n            t.exports = n, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(142);\n            function o() {\n                return \"undefined\" != typeof Reflect && Reflect.get ? (t.exports = o = Reflect.get.bind(), t.exports.__esModule = !0, t.exports.default = t.exports) : (t.exports = o = function(t, e, n) {\n                    var o = r(t, e);\n                    if (o) {\n                        var i = Object.getOwnPropertyDescriptor(o, e);\n                        return i.get ? i.get.call(arguments.length < 3 ? t : n) : i.value;\n                    }\n                }, t.exports.__esModule = !0, t.exports.default = t.exports), o.apply(this, arguments);\n            }\n            t.exports = o, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                var e = typeof t;\n                return null != t && (\"object\" == e || \"function\" == e);\n            };\n        },\n        function(t, e) {\n            var n = Array.isArray;\n            t.exports = n;\n        },\n        function(t, e, n) {\n            \"use strict\";\n            e.a = {\n                drawRect: function(t, e, n, r) {\n                    n.strokeStyle = r.color, n.fillStyle = r.color, n.lineWidth = r.lineWidth || 1, n.beginPath(), n.strokeRect(t.x, t.y, e.x, e.y);\n                },\n                drawPath: function(t, e, n, r) {\n                    n.strokeStyle = r.color, n.fillStyle = r.color, n.lineWidth = r.lineWidth, n.beginPath(), n.moveTo(t[0][e.x], t[0][e.y]);\n                    for(var o = 1; o < t.length; o++)n.lineTo(t[o][e.x], t[o][e.y]);\n                    n.closePath(), n.stroke();\n                },\n                drawImage: function(t, e, n) {\n                    var r = n.getImageData(0, 0, e.x, e.y), o = r.data, i = o.length, a = t.length;\n                    if (i / a != 4) return !1;\n                    for(; a--;){\n                        var u = t[a];\n                        o[--i] = 255, o[--i] = u, o[--i] = u, o[--i] = u;\n                    }\n                    return n.putImageData(r, 0, 0), !0;\n                }\n            };\n        },\n        function(t, e, n) {\n            var r = n(74), o = n(129)(function(t, e, n) {\n                r(t, e, n);\n            });\n            t.exports = o;\n        },\n        function(t, e, n) {\n            var r = n(44), o = \"object\" == typeof self && self && self.Object === Object && self, i = r || o || Function(\"return this\")();\n            t.exports = i;\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                return null != t && \"object\" == typeof t;\n            };\n        },\n        function(t, e, n) {\n            \"use strict\";\n            e.a = {\n                searchDirections: [\n                    [\n                        0,\n                        1\n                    ],\n                    [\n                        1,\n                        1\n                    ],\n                    [\n                        1,\n                        0\n                    ],\n                    [\n                        1,\n                        -1\n                    ],\n                    [\n                        0,\n                        -1\n                    ],\n                    [\n                        -1,\n                        -1\n                    ],\n                    [\n                        -1,\n                        0\n                    ],\n                    [\n                        -1,\n                        1\n                    ]\n                ],\n                create: function(t, e) {\n                    var n, r = t.data, o = e.data, i = this.searchDirections, a = t.size.x;\n                    function u(t, e, u, c) {\n                        var s, f, l;\n                        for(s = 0; s < i.length; s++){\n                            if (f = t.cy + i[t.dir][0], l = t.cx + i[t.dir][1], r[n = f * a + l] === e && (0 === o[n] || o[n] === u)) return o[n] = u, t.cy = f, t.cx = l, !0;\n                            0 === o[n] && (o[n] = c), t.dir = (t.dir + 1) % 8;\n                        }\n                        return !1;\n                    }\n                    function c(t, e, n) {\n                        return {\n                            dir: n,\n                            x: t,\n                            y: e,\n                            next: null,\n                            prev: null\n                        };\n                    }\n                    return {\n                        trace: function(t, e, n, r) {\n                            return u(t, e, n, r);\n                        },\n                        contourTracing: function(e, n, r, o, i) {\n                            return function(e, n, r, o, i) {\n                                var a, s, f, l = null, d = {\n                                    cx: n,\n                                    cy: e,\n                                    dir: 0\n                                };\n                                if (u(d, o, r, i)) {\n                                    a = l = c(n, e, d.dir), f = d.dir, (s = c(d.cx, d.cy, 0)).prev = a, a.next = s, s.next = null, a = s;\n                                    var h = t.size.x * t.size.y, v = 0;\n                                    do {\n                                        d.dir = (d.dir + 6) % 8, u(d, o, r, i), f !== d.dir ? (a.dir = d.dir, (s = c(d.cx, d.cy, 0)).prev = a, a.next = s, s.next = null, a = s) : (a.dir = f, a.x = d.cx, a.y = d.cy), f = d.dir;\n                                    }while ((d.cx !== n || d.cy !== e) && ++v < h);\n                                    l.prev = a.prev, a.prev.next = l;\n                                }\n                                return l;\n                            }(e, n, r, o, i);\n                        }\n                    };\n                }\n            };\n        },\n        function(t, e, n) {\n            var r = n(27), o = n(87), i = n(88), a = r ? r.toStringTag : void 0;\n            t.exports = function(t) {\n                return null == t ? void 0 === t ? \"[object Undefined]\" : \"[object Null]\" : a && a in Object(t) ? o(t) : i(t);\n            };\n        },\n        function(t, e, n) {\n            \"use strict\";\n            (function(t) {\n                var r, o, i, a, u, c, s, f, l, d, h = n(5), v = n(11), p = n(10), y = n(9), g = (n(17), n(65)), x = n(21), m = n(66);\n                h.a.setMatrixArrayType(Array);\n                var _, b, w = {\n                    ctx: {\n                        binary: null\n                    },\n                    dom: {\n                        binary: null\n                    }\n                }, O = {\n                    x: 0,\n                    y: 0\n                };\n                function R(t) {\n                    var e, n, o, i, a, u, c, s = l.size.x, f = l.size.y, d = -l.size.x, v = -l.size.y;\n                    for(e = 0, n = 0; n < t.length; n++)e += (i = t[n]).rad;\n                    for((e = (180 * (e /= t.length) / Math.PI + 90) % 180 - 90) < 0 && (e += 180), e = (180 - e) * Math.PI / 180, a = h.b.copy(h.b.create(), [\n                        Math.cos(e),\n                        Math.sin(e),\n                        -Math.sin(e),\n                        Math.cos(e)\n                    ]), n = 0; n < t.length; n++){\n                        for(i = t[n], o = 0; o < 4; o++)h.c.transformMat2(i.box[o], i.box[o], a);\n                        0;\n                    }\n                    for(n = 0; n < t.length; n++)for(i = t[n], o = 0; o < 4; o++)i.box[o][0] < s && (s = i.box[o][0]), i.box[o][0] > d && (d = i.box[o][0]), i.box[o][1] < f && (f = i.box[o][1]), i.box[o][1] > v && (v = i.box[o][1]);\n                    for(u = [\n                        [\n                            s,\n                            f\n                        ],\n                        [\n                            d,\n                            f\n                        ],\n                        [\n                            d,\n                            v\n                        ],\n                        [\n                            s,\n                            v\n                        ]\n                    ], c = r.halfSample ? 2 : 1, a = h.b.invert(a, a), o = 0; o < 4; o++)h.c.transformMat2(u[o], u[o], a);\n                    for(o = 0; o < 4; o++)h.c.scale(u[o], u[o], c);\n                    return u;\n                }\n                function M(t, e) {\n                    l.subImageAsCopy(a, Object(p.h)(t, e)), b.skeletonize();\n                }\n                function C(t, e, n, r) {\n                    var o, i, u, c, s = [], f = [], l = Math.ceil(d.x / 3);\n                    if (t.length >= 2) {\n                        for(o = 0; o < t.length; o++)t[o].m00 > l && s.push(t[o]);\n                        if (s.length >= 2) {\n                            for(u = function(t) {\n                                var e = Object(p.b)(t, .9), n = Object(p.j)(e, 1, function(t) {\n                                    return t.getPoints().length;\n                                }), r = [], o = [];\n                                if (1 === n.length) {\n                                    r = n[0].item.getPoints();\n                                    for(var i = 0; i < r.length; i++)o.push(r[i].point);\n                                }\n                                return o;\n                            }(s), i = 0, o = 0; o < u.length; o++){\n                                var v, y;\n                                i += null !== (v = null === (y = u[o]) || void 0 === y ? void 0 : y.rad) && void 0 !== v ? v : 0;\n                            }\n                            u.length > 1 && u.length >= s.length / 4 * 3 && u.length > t.length / 4 && (i /= u.length, c = {\n                                index: e[1] * O.x + e[0],\n                                pos: {\n                                    x: n,\n                                    y: r\n                                },\n                                box: [\n                                    h.c.clone([\n                                        n,\n                                        r\n                                    ]),\n                                    h.c.clone([\n                                        n + a.size.x,\n                                        r\n                                    ]),\n                                    h.c.clone([\n                                        n + a.size.x,\n                                        r + a.size.y\n                                    ]),\n                                    h.c.clone([\n                                        n,\n                                        r + a.size.y\n                                    ])\n                                ],\n                                moments: u,\n                                rad: i,\n                                vec: h.c.clone([\n                                    Math.cos(i),\n                                    Math.sin(i)\n                                ])\n                            }, f.push(c));\n                        }\n                    }\n                    return f;\n                }\n                e.a = {\n                    init: function(e, n) {\n                        r = n, _ = e, function() {\n                            o = r.halfSample ? new v.a({\n                                x: _.size.x / 2 | 0,\n                                y: _.size.y / 2 | 0\n                            }) : _, d = Object(p.a)(r.patchSize, o.size), O.x = o.size.x / d.x | 0, O.y = o.size.y / d.y | 0, l = new v.a(o.size, void 0, Uint8Array, !1), u = new v.a(d, void 0, Array, !0);\n                            var e = new ArrayBuffer(65536);\n                            a = new v.a(d, new Uint8Array(e, 0, d.x * d.y)), i = new v.a(d, new Uint8Array(e, d.x * d.y * 3, d.x * d.y), void 0, !0), b = Object(m.a)( true ? window : 0, {\n                                size: d.x\n                            }, e), f = new v.a({\n                                x: o.size.x / a.size.x | 0,\n                                y: o.size.y / a.size.y | 0\n                            }, void 0, Array, !0), c = new v.a(f.size, void 0, void 0, !0), s = new v.a(f.size, void 0, Int32Array, !0);\n                        }(), function() {\n                            if (!r.useWorker && \"undefined\" != typeof document) {\n                                w.dom.binary = document.createElement(\"canvas\"), w.dom.binary.className = \"binaryBuffer\";\n                                var t = !!r.willReadFrequently;\n                                console.warn(\"* initCanvas willReadFrequently\", t, r), w.ctx.binary = w.dom.binary.getContext(\"2d\", {\n                                    willReadFrequently: t\n                                }), w.dom.binary.width = l.size.x, w.dom.binary.height = l.size.y;\n                            }\n                        }();\n                    },\n                    locate: function() {\n                        r.halfSample && Object(p.f)(_, o), Object(p.i)(o, l), l.zeroBorder();\n                        var t = function() {\n                            var t, e, n, r, o, c, s = [];\n                            for(t = 0; t < O.x; t++)for(e = 0; e < O.y; e++)M(n = a.size.x * t, r = a.size.y * e), i.zeroBorder(), y.a.init(u.data, 0), c = g.a.create(i, u).rasterize(0), o = u.moments(c.count), s = s.concat(C(o, [\n                                t,\n                                e\n                            ], n, r));\n                            return s;\n                        }();\n                        if (t.length < O.x * O.y * .05) return null;\n                        var e = function(t) {\n                            var e, n, r = 0, o = 0;\n                            function i() {\n                                var t;\n                                for(t = 0; t < s.data.length; t++)if (0 === s.data[t] && 1 === c.data[t]) return t;\n                                return s.data.length;\n                            }\n                            function a(t) {\n                                var e, n, o, i, u, l = t % s.size.x, d = t / s.size.x | 0;\n                                if (t < s.data.length) for(o = f.data[t], s.data[t] = r, u = 0; u < x.a.searchDirections.length; u++)n = d + x.a.searchDirections[u][0], e = l + x.a.searchDirections[u][1], i = n * s.size.x + e, 0 !== c.data[i] ? 0 === s.data[i] && Math.abs(h.c.dot(f.data[i].vec, o.vec)) > .95 && a(i) : s.data[i] = Number.MAX_VALUE;\n                            }\n                            for(y.a.init(c.data, 0), y.a.init(s.data, 0), y.a.init(f.data, null), e = 0; e < t.length; e++)n = t[e], f.data[n.index] = n, c.data[n.index] = 1;\n                            for(c.zeroBorder(); (o = i()) < s.data.length;)r++, a(o);\n                            return r;\n                        }(t);\n                        if (e < 1) return null;\n                        var n = function(t) {\n                            var e, n, r = [];\n                            for(e = 0; e < t; e++)r.push(0);\n                            for(n = s.data.length; n--;)s.data[n] > 0 && r[s.data[n] - 1]++;\n                            return (r = r.map(function(t, e) {\n                                return {\n                                    val: t,\n                                    label: e + 1\n                                };\n                            })).sort(function(t, e) {\n                                return e.val - t.val;\n                            }), r.filter(function(t) {\n                                return t.val >= 5;\n                            });\n                        }(e);\n                        return 0 === n.length ? null : function(t, e) {\n                            var n, r, o, i, a = [], u = [];\n                            for(n = 0; n < t.length; n++){\n                                for(r = s.data.length, a.length = 0; r--;)s.data[r] === t[n].label && (o = f.data[r], a.push(o));\n                                (i = R(a)) && u.push(i);\n                            }\n                            return u;\n                        }(n);\n                    },\n                    checkImageConstraints: function(t, e) {\n                        var n, r, o = t.getWidth(), i = t.getHeight(), a = e.halfSample ? .5 : 1;\n                        t.getConfig().area && (r = Object(p.d)(o, i, t.getConfig().area), t.setTopRight({\n                            x: r.sx,\n                            y: r.sy\n                        }), t.setCanvasSize({\n                            x: o,\n                            y: i\n                        }), o = r.sw, i = r.sh);\n                        var u = {\n                            x: Math.floor(o * a),\n                            y: Math.floor(i * a)\n                        };\n                        if (n = Object(p.a)(e.patchSize, u), t.setWidth(Math.max(Math.floor(Math.floor(u.x / n.x) * (1 / a) * n.x), n.x)), t.setHeight(Math.max(Math.floor(Math.floor(u.y / n.y) * (1 / a) * n.y), n.y)), t.getWidth() % n.x == 0 && t.getHeight() % n.y == 0) return !0;\n                        throw new Error(\"Image dimensions do not comply with the current settings: Width (\".concat(o, \" )and height (\").concat(i, \") must a multiple of \").concat(n.x));\n                    }\n                };\n            }).call(this, n(45));\n        },\n        function(t, e, n) {\n            var r = n(76), o = n(77), i = n(78), a = n(79), u = n(80);\n            function c(t) {\n                var e = -1, n = null == t ? 0 : t.length;\n                for(this.clear(); ++e < n;){\n                    var r = t[e];\n                    this.set(r[0], r[1]);\n                }\n            }\n            c.prototype.clear = r, c.prototype.delete = o, c.prototype.get = i, c.prototype.has = a, c.prototype.set = u, t.exports = c;\n        },\n        function(t, e, n) {\n            var r = n(26);\n            t.exports = function(t, e) {\n                for(var n = t.length; n--;)if (r(t[n][0], e)) return n;\n                return -1;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                return t === e || t != t && e != e;\n            };\n        },\n        function(t, e, n) {\n            var r = n(19).Symbol;\n            t.exports = r;\n        },\n        function(t, e, n) {\n            var r = n(34)(Object, \"create\");\n            t.exports = r;\n        },\n        function(t, e, n) {\n            var r = n(101);\n            t.exports = function(t, e) {\n                var n = t.__data__;\n                return r(e) ? n[\"string\" == typeof e ? \"string\" : \"hash\"] : n.map;\n            };\n        },\n        function(t, e, n) {\n            var r = n(116), o = n(20), i = Object.prototype, a = i.hasOwnProperty, u = i.propertyIsEnumerable, c = r(function() {\n                return arguments;\n            }()) ? r : function(t) {\n                return o(t) && a.call(t, \"callee\") && !u.call(t, \"callee\");\n            };\n            t.exports = c;\n        },\n        function(t, e) {\n            var n = /^(?:0|[1-9]\\d*)$/;\n            t.exports = function(t, e) {\n                var r = typeof t;\n                return !!(e = null == e ? 9007199254740991 : e) && (\"number\" == r || \"symbol\" != r && n.test(t)) && t > -1 && t % 1 == 0 && t < e;\n            };\n        },\n        function(t, e, n) {\n            var r = n(16), o = n(149), i = n(150), a = n(153);\n            t.exports = function(t, e) {\n                return r(t) ? t : o(t, e) ? [\n                    t\n                ] : i(a(t));\n            };\n        },\n        function(t, e, n) {\n            var r = n(143), o = n(144), i = n(59), a = n(145);\n            t.exports = function(t) {\n                return r(t) || o(t) || i(t) || a();\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(86), o = n(92);\n            t.exports = function(t, e) {\n                var n = o(t, e);\n                return r(n) ? n : void 0;\n            };\n        },\n        function(t, e, n) {\n            var r = n(22), o = n(15);\n            t.exports = function(t) {\n                if (!o(t)) return !1;\n                var e = r(t);\n                return \"[object Function]\" == e || \"[object GeneratorFunction]\" == e || \"[object AsyncFunction]\" == e || \"[object Proxy]\" == e;\n            };\n        },\n        function(t, e, n) {\n            var r = n(48);\n            t.exports = function(t, e, n) {\n                \"__proto__\" == e && r ? r(t, e, {\n                    configurable: !0,\n                    enumerable: !0,\n                    value: n,\n                    writable: !0\n                }) : t[e] = n;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                return t.webpackPolyfill || (t.deprecate = function() {}, t.paths = [], t.children || (t.children = []), Object.defineProperty(t, \"loaded\", {\n                    enumerable: !0,\n                    get: function() {\n                        return t.l;\n                    }\n                }), Object.defineProperty(t, \"id\", {\n                    enumerable: !0,\n                    get: function() {\n                        return t.i;\n                    }\n                }), t.webpackPolyfill = 1), t;\n            };\n        },\n        function(t, e, n) {\n            var r = n(35), o = n(39);\n            t.exports = function(t) {\n                return null != t && o(t.length) && !r(t);\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                return \"number\" == typeof t && t > -1 && t % 1 == 0 && t <= 9007199254740991;\n            };\n        },\n        function(t, e) {\n            function n(e, r) {\n                return t.exports = n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {\n                    return t.__proto__ = e, t;\n                }, t.exports.__esModule = !0, t.exports.default = t.exports, n(e, r);\n            }\n            t.exports = n, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(22), o = n(20);\n            t.exports = function(t) {\n                return \"symbol\" == typeof t || o(t) && \"[object Symbol]\" == r(t);\n            };\n        },\n        function(t, e, n) {\n            var r = n(41);\n            t.exports = function(t) {\n                if (\"string\" == typeof t || r(t)) return t;\n                var e = t + \"\";\n                return \"0\" == e && 1 / t == -1 / 0 ? \"-0\" : e;\n            };\n        },\n        function(t, e, n) {\n            var r = n(34)(n(19), \"Map\");\n            t.exports = r;\n        },\n        function(t, e, n) {\n            (function(e) {\n                var n = \"object\" == typeof e && e && e.Object === Object && e;\n                t.exports = n;\n            }).call(this, n(45));\n        },\n        function(t, e) {\n            var n;\n            n = function() {\n                return this;\n            }();\n            try {\n                n = n || new Function(\"return this\")();\n            } catch (t) {\n                 true && (n = window);\n            }\n            t.exports = n;\n        },\n        function(t, e, n) {\n            var r = n(93), o = n(100), i = n(102), a = n(103), u = n(104);\n            function c(t) {\n                var e = -1, n = null == t ? 0 : t.length;\n                for(this.clear(); ++e < n;){\n                    var r = t[e];\n                    this.set(r[0], r[1]);\n                }\n            }\n            c.prototype.clear = r, c.prototype.delete = o, c.prototype.get = i, c.prototype.has = a, c.prototype.set = u, t.exports = c;\n        },\n        function(t, e, n) {\n            var r = n(36), o = n(26);\n            t.exports = function(t, e, n) {\n                (void 0 !== n && !o(t[e], n) || void 0 === n && !(e in t)) && r(t, e, n);\n            };\n        },\n        function(t, e, n) {\n            var r = n(34), o = function() {\n                try {\n                    var t = r(Object, \"defineProperty\");\n                    return t({}, \"\", {}), t;\n                } catch (t) {}\n            }();\n            t.exports = o;\n        },\n        function(t, e, n) {\n            var r = n(115)(Object.getPrototypeOf, Object);\n            t.exports = r;\n        },\n        function(t, e) {\n            var n = Object.prototype;\n            t.exports = function(t) {\n                var e = t && t.constructor;\n                return t === (\"function\" == typeof e && e.prototype || n);\n            };\n        },\n        function(t, e, n) {\n            (function(t) {\n                var r = n(19), o = n(118), i = e && !e.nodeType && e, a = i && \"object\" == typeof t && t && !t.nodeType && t, u = a && a.exports === i ? r.Buffer : void 0, c = (u ? u.isBuffer : void 0) || o;\n                t.exports = c;\n            }).call(this, n(37)(t));\n        },\n        function(t, e, n) {\n            var r = n(120), o = n(121), i = n(122), a = i && i.isTypedArray, u = a ? o(a) : r;\n            t.exports = u;\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                if ((\"constructor\" !== e || \"function\" != typeof t[e]) && \"__proto__\" != e) return t[e];\n            };\n        },\n        function(t, e, n) {\n            var r = n(36), o = n(26), i = Object.prototype.hasOwnProperty;\n            t.exports = function(t, e, n) {\n                var a = t[e];\n                i.call(t, e) && o(a, n) && (void 0 !== n || e in t) || r(t, e, n);\n            };\n        },\n        function(t, e, n) {\n            var r = n(125), o = n(127), i = n(38);\n            t.exports = function(t) {\n                return i(t) ? r(t, !0) : o(t);\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                return t;\n            };\n        },\n        function(t, e, n) {\n            var r = n(131), o = Math.max;\n            t.exports = function(t, e, n) {\n                return e = o(void 0 === e ? t.length - 1 : e, 0), function() {\n                    for(var i = arguments, a = -1, u = o(i.length - e, 0), c = Array(u); ++a < u;)c[a] = i[e + a];\n                    a = -1;\n                    for(var s = Array(e + 1); ++a < e;)s[a] = i[a];\n                    return s[e] = n(c), r(t, this, s);\n                };\n            };\n        },\n        function(t, e, n) {\n            var r = n(132), o = n(134)(r);\n            t.exports = o;\n        },\n        function(t, e, n) {\n            var r = n(60);\n            t.exports = function(t, e) {\n                if (t) {\n                    if (\"string\" == typeof t) return r(t, e);\n                    var n = Object.prototype.toString.call(t).slice(8, -1);\n                    return \"Object\" === n && t.constructor && (n = t.constructor.name), \"Map\" === n || \"Set\" === n ? Array.from(t) : \"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? r(t, e) : void 0;\n                }\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                (null == e || e > t.length) && (e = t.length);\n                for(var n = 0, r = new Array(e); n < e; n++)r[n] = t[n];\n                return r;\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(13).default, o = n(140);\n            t.exports = function(t) {\n                var e = o(t, \"string\");\n                return \"symbol\" === r(e) ? e : String(e);\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(137), o = n(138), i = n(59), a = n(139);\n            t.exports = function(t, e) {\n                return r(t) || o(t, e) || i(t, e) || a();\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(146), o = n(160)(function(t, e) {\n                return null == t ? {} : r(t, e);\n            });\n            t.exports = o;\n        },\n        function(t, e, n) {\n            var r = n(2), o = n(40), i = n(165), a = n(166);\n            function u(e) {\n                var n = \"function\" == typeof Map ? new Map : void 0;\n                return t.exports = u = function(t) {\n                    if (null === t || !i(t)) return t;\n                    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n                    if (void 0 !== n) {\n                        if (n.has(t)) return n.get(t);\n                        n.set(t, e);\n                    }\n                    function e() {\n                        return a(t, arguments, r(this).constructor);\n                    }\n                    return e.prototype = Object.create(t.prototype, {\n                        constructor: {\n                            value: e,\n                            enumerable: !1,\n                            writable: !0,\n                            configurable: !0\n                        }\n                    }), o(e, t);\n                }, t.exports.__esModule = !0, t.exports.default = t.exports, u(e);\n            }\n            t.exports = u, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            \"use strict\";\n            var r = n(21), o = {\n                createContour2D: function() {\n                    return {\n                        dir: null,\n                        index: null,\n                        firstVertex: null,\n                        insideContours: null,\n                        nextpeer: null,\n                        prevpeer: null\n                    };\n                },\n                CONTOUR_DIR: {\n                    CW_DIR: 0,\n                    CCW_DIR: 1,\n                    UNKNOWN_DIR: 2\n                },\n                DIR: {\n                    OUTSIDE_EDGE: -32767,\n                    INSIDE_EDGE: -32766\n                },\n                create: function(t, e) {\n                    var n = t.data, i = e.data, a = t.size.x, u = t.size.y, c = r.a.create(t, e);\n                    return {\n                        rasterize: function(t) {\n                            var e, r, s, f, l, d, h, v, p, y, g, x, m = [], _ = 0;\n                            for(x = 0; x < 400; x++)m[x] = 0;\n                            for(m[0] = n[0], p = null, d = 1; d < u - 1; d++)for(f = 0, r = m[0], l = 1; l < a - 1; l++)if (0 === i[g = d * a + l]) if ((e = n[g]) !== r) {\n                                if (0 === f) m[s = _ + 1] = e, r = e, null !== (h = c.contourTracing(d, l, s, e, o.DIR.OUTSIDE_EDGE)) && (_++, f = s, (v = o.createContour2D()).dir = o.CONTOUR_DIR.CW_DIR, v.index = f, v.firstVertex = h, v.nextpeer = p, v.insideContours = null, null !== p && (p.prevpeer = v), p = v);\n                                else if (null !== (h = c.contourTracing(d, l, o.DIR.INSIDE_EDGE, e, f))) {\n                                    for((v = o.createContour2D()).firstVertex = h, v.insideContours = null, v.dir = 0 === t ? o.CONTOUR_DIR.CCW_DIR : o.CONTOUR_DIR.CW_DIR, v.index = t, y = p; null !== y && y.index !== f;)y = y.nextpeer;\n                                    null !== y && (v.nextpeer = y.insideContours, null !== y.insideContours && (y.insideContours.prevpeer = v), y.insideContours = v);\n                                }\n                            } else i[g] = f;\n                            else i[g] === o.DIR.OUTSIDE_EDGE || i[g] === o.DIR.INSIDE_EDGE ? (f = 0, r = i[g] === o.DIR.INSIDE_EDGE ? n[g] : m[0]) : r = m[f = i[g]];\n                            for(y = p; null !== y;)y.index = t, y = y.nextpeer;\n                            return {\n                                cc: p,\n                                count: _\n                            };\n                        },\n                        debug: {\n                            drawContour: function(t, e) {\n                                var n, r, i, a = t.getContext(\"2d\"), u = e;\n                                for(a.strokeStyle = \"red\", a.fillStyle = \"red\", a.lineWidth = 1, n = null !== u ? u.insideContours : null; null !== u;){\n                                    switch(null !== n ? (r = n, n = n.nextpeer) : (r = u, n = null !== (u = u.nextpeer) ? u.insideContours : null), r.dir){\n                                        case o.CONTOUR_DIR.CW_DIR:\n                                            a.strokeStyle = \"red\";\n                                            break;\n                                        case o.CONTOUR_DIR.CCW_DIR:\n                                            a.strokeStyle = \"blue\";\n                                            break;\n                                        case o.CONTOUR_DIR.UNKNOWN_DIR:\n                                            a.strokeStyle = \"green\";\n                                    }\n                                    i = r.firstVertex, a.beginPath(), a.moveTo(i.x, i.y);\n                                    do {\n                                        i = i.next, a.lineTo(i.x, i.y);\n                                    }while (i !== r.firstVertex);\n                                    a.stroke();\n                                }\n                            }\n                        }\n                    };\n                }\n            };\n            e.a = o;\n        },\n        function(t, e, n) {\n            \"use strict\";\n            /* @preserve ASM BEGIN */ /* @preserve ASM END */ e.a = function(t, e, n) {\n                \"use asm\";\n                var r = new t.Uint8Array(n), o = e.size | 0, i = t.Math.imul;\n                function a(t, e) {\n                    t |= 0;\n                    e |= 0;\n                    var n = 0;\n                    var i = 0;\n                    var a = 0;\n                    var u = 0;\n                    var c = 0;\n                    var s = 0;\n                    var f = 0;\n                    var l = 0;\n                    for(n = 1; (n | 0) < (o - 1 | 0); n = n + 1 | 0){\n                        l = l + o | 0;\n                        for(i = 1; (i | 0) < (o - 1 | 0); i = i + 1 | 0){\n                            u = l - o | 0;\n                            c = l + o | 0;\n                            s = i - 1 | 0;\n                            f = i + 1 | 0;\n                            a = (r[t + u + s | 0] | 0) + (r[t + u + f | 0] | 0) + (r[t + l + i | 0] | 0) + (r[t + c + s | 0] | 0) + (r[t + c + f | 0] | 0) | 0;\n                            if ((a | 0) == (5 | 0)) {\n                                r[e + l + i | 0] = 1;\n                            } else {\n                                r[e + l + i | 0] = 0;\n                            }\n                        }\n                    }\n                }\n                function u(t, e, n) {\n                    t |= 0;\n                    e |= 0;\n                    n |= 0;\n                    var a = 0;\n                    a = i(o, o) | 0;\n                    while((a | 0) > 0){\n                        a = a - 1 | 0;\n                        r[n + a | 0] = (r[t + a | 0] | 0) - (r[e + a | 0] | 0) | 0;\n                    }\n                }\n                function c(t, e, n) {\n                    t |= 0;\n                    e |= 0;\n                    n |= 0;\n                    var a = 0;\n                    a = i(o, o) | 0;\n                    while((a | 0) > 0){\n                        a = a - 1 | 0;\n                        r[n + a | 0] = r[t + a | 0] | 0 | (r[e + a | 0] | 0) | 0;\n                    }\n                }\n                function s(t) {\n                    t |= 0;\n                    var e = 0;\n                    var n = 0;\n                    n = i(o, o) | 0;\n                    while((n | 0) > 0){\n                        n = n - 1 | 0;\n                        e = (e | 0) + (r[t + n | 0] | 0) | 0;\n                    }\n                    return e | 0;\n                }\n                function f(t, e) {\n                    t |= 0;\n                    e |= 0;\n                    var n = 0;\n                    n = i(o, o) | 0;\n                    while((n | 0) > 0){\n                        n = n - 1 | 0;\n                        r[t + n | 0] = e;\n                    }\n                }\n                function l(t, e) {\n                    t |= 0;\n                    e |= 0;\n                    var n = 0;\n                    var i = 0;\n                    var a = 0;\n                    var u = 0;\n                    var c = 0;\n                    var s = 0;\n                    var f = 0;\n                    var l = 0;\n                    for(n = 1; (n | 0) < (o - 1 | 0); n = n + 1 | 0){\n                        l = l + o | 0;\n                        for(i = 1; (i | 0) < (o - 1 | 0); i = i + 1 | 0){\n                            u = l - o | 0;\n                            c = l + o | 0;\n                            s = i - 1 | 0;\n                            f = i + 1 | 0;\n                            a = (r[t + u + s | 0] | 0) + (r[t + u + f | 0] | 0) + (r[t + l + i | 0] | 0) + (r[t + c + s | 0] | 0) + (r[t + c + f | 0] | 0) | 0;\n                            if ((a | 0) > (0 | 0)) {\n                                r[e + l + i | 0] = 1;\n                            } else {\n                                r[e + l + i | 0] = 0;\n                            }\n                        }\n                    }\n                }\n                function d(t, e) {\n                    t |= 0;\n                    e |= 0;\n                    var n = 0;\n                    n = i(o, o) | 0;\n                    while((n | 0) > 0){\n                        n = n - 1 | 0;\n                        r[e + n | 0] = r[t + n | 0] | 0;\n                    }\n                }\n                function h(t) {\n                    t |= 0;\n                    var e = 0;\n                    var n = 0;\n                    for(e = 0; (e | 0) < (o - 1 | 0); e = e + 1 | 0){\n                        r[t + e | 0] = 0;\n                        r[t + n | 0] = 0;\n                        n = n + o - 1 | 0;\n                        r[t + n | 0] = 0;\n                        n = n + 1 | 0;\n                    }\n                    for(e = 0; (e | 0) < (o | 0); e = e + 1 | 0){\n                        r[t + n | 0] = 0;\n                        n = n + 1 | 0;\n                    }\n                }\n                function v() {\n                    var t = 0;\n                    var e = 0;\n                    var n = 0;\n                    var r = 0;\n                    var v = 0;\n                    var p = 0;\n                    e = i(o, o) | 0;\n                    n = e + e | 0;\n                    r = n + e | 0;\n                    f(r, 0);\n                    h(t);\n                    do {\n                        a(t, e);\n                        l(e, n);\n                        u(t, n, n);\n                        c(r, n, r);\n                        d(e, t);\n                        v = s(t) | 0;\n                        p = (v | 0) == 0 | 0;\n                    }while (!p);\n                }\n                return {\n                    skeletonize: v\n                };\n            };\n        },\n        ,\n        ,\n        ,\n        ,\n        ,\n        ,\n        function(t, e, n) {\n            t.exports = n(168);\n        },\n        function(t, e, n) {\n            var r = n(75), o = n(47), i = n(105), a = n(107), u = n(15), c = n(55), s = n(53);\n            t.exports = function t(e, n, f, l, d) {\n                e !== n && i(n, function(i, c) {\n                    if (d || (d = new r), u(i)) a(e, n, c, f, t, l, d);\n                    else {\n                        var h = l ? l(s(e, c), i, c + \"\", e, n, d) : void 0;\n                        void 0 === h && (h = i), o(e, c, h);\n                    }\n                }, c);\n            };\n        },\n        function(t, e, n) {\n            var r = n(24), o = n(81), i = n(82), a = n(83), u = n(84), c = n(85);\n            function s(t) {\n                var e = this.__data__ = new r(t);\n                this.size = e.size;\n            }\n            s.prototype.clear = o, s.prototype.delete = i, s.prototype.get = a, s.prototype.has = u, s.prototype.set = c, t.exports = s;\n        },\n        function(t, e) {\n            t.exports = function() {\n                this.__data__ = [], this.size = 0;\n            };\n        },\n        function(t, e, n) {\n            var r = n(25), o = Array.prototype.splice;\n            t.exports = function(t) {\n                var e = this.__data__, n = r(e, t);\n                return !(n < 0) && (n == e.length - 1 ? e.pop() : o.call(e, n, 1), --this.size, !0);\n            };\n        },\n        function(t, e, n) {\n            var r = n(25);\n            t.exports = function(t) {\n                var e = this.__data__, n = r(e, t);\n                return n < 0 ? void 0 : e[n][1];\n            };\n        },\n        function(t, e, n) {\n            var r = n(25);\n            t.exports = function(t) {\n                return r(this.__data__, t) > -1;\n            };\n        },\n        function(t, e, n) {\n            var r = n(25);\n            t.exports = function(t, e) {\n                var n = this.__data__, o = r(n, t);\n                return o < 0 ? (++this.size, n.push([\n                    t,\n                    e\n                ])) : n[o][1] = e, this;\n            };\n        },\n        function(t, e, n) {\n            var r = n(24);\n            t.exports = function() {\n                this.__data__ = new r, this.size = 0;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                var e = this.__data__, n = e.delete(t);\n                return this.size = e.size, n;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                return this.__data__.get(t);\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                return this.__data__.has(t);\n            };\n        },\n        function(t, e, n) {\n            var r = n(24), o = n(43), i = n(46);\n            t.exports = function(t, e) {\n                var n = this.__data__;\n                if (n instanceof r) {\n                    var a = n.__data__;\n                    if (!o || a.length < 199) return a.push([\n                        t,\n                        e\n                    ]), this.size = ++n.size, this;\n                    n = this.__data__ = new i(a);\n                }\n                return n.set(t, e), this.size = n.size, this;\n            };\n        },\n        function(t, e, n) {\n            var r = n(35), o = n(89), i = n(15), a = n(91), u = /^\\[object .+?Constructor\\]$/, c = Function.prototype, s = Object.prototype, f = c.toString, l = s.hasOwnProperty, d = RegExp(\"^\" + f.call(l).replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\");\n            t.exports = function(t) {\n                return !(!i(t) || o(t)) && (r(t) ? d : u).test(a(t));\n            };\n        },\n        function(t, e, n) {\n            var r = n(27), o = Object.prototype, i = o.hasOwnProperty, a = o.toString, u = r ? r.toStringTag : void 0;\n            t.exports = function(t) {\n                var e = i.call(t, u), n = t[u];\n                try {\n                    t[u] = void 0;\n                    var r = !0;\n                } catch (t) {}\n                var o = a.call(t);\n                return r && (e ? t[u] = n : delete t[u]), o;\n            };\n        },\n        function(t, e) {\n            var n = Object.prototype.toString;\n            t.exports = function(t) {\n                return n.call(t);\n            };\n        },\n        function(t, e, n) {\n            var r, o = n(90), i = (r = /[^.]+$/.exec(o && o.keys && o.keys.IE_PROTO || \"\")) ? \"Symbol(src)_1.\" + r : \"\";\n            t.exports = function(t) {\n                return !!i && i in t;\n            };\n        },\n        function(t, e, n) {\n            var r = n(19)[\"__core-js_shared__\"];\n            t.exports = r;\n        },\n        function(t, e) {\n            var n = Function.prototype.toString;\n            t.exports = function(t) {\n                if (null != t) {\n                    try {\n                        return n.call(t);\n                    } catch (t) {}\n                    try {\n                        return t + \"\";\n                    } catch (t) {}\n                }\n                return \"\";\n            };\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                return null == t ? void 0 : t[e];\n            };\n        },\n        function(t, e, n) {\n            var r = n(94), o = n(24), i = n(43);\n            t.exports = function() {\n                this.size = 0, this.__data__ = {\n                    hash: new r,\n                    map: new (i || o),\n                    string: new r\n                };\n            };\n        },\n        function(t, e, n) {\n            var r = n(95), o = n(96), i = n(97), a = n(98), u = n(99);\n            function c(t) {\n                var e = -1, n = null == t ? 0 : t.length;\n                for(this.clear(); ++e < n;){\n                    var r = t[e];\n                    this.set(r[0], r[1]);\n                }\n            }\n            c.prototype.clear = r, c.prototype.delete = o, c.prototype.get = i, c.prototype.has = a, c.prototype.set = u, t.exports = c;\n        },\n        function(t, e, n) {\n            var r = n(28);\n            t.exports = function() {\n                this.__data__ = r ? r(null) : {}, this.size = 0;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                var e = this.has(t) && delete this.__data__[t];\n                return this.size -= e ? 1 : 0, e;\n            };\n        },\n        function(t, e, n) {\n            var r = n(28), o = Object.prototype.hasOwnProperty;\n            t.exports = function(t) {\n                var e = this.__data__;\n                if (r) {\n                    var n = e[t];\n                    return \"__lodash_hash_undefined__\" === n ? void 0 : n;\n                }\n                return o.call(e, t) ? e[t] : void 0;\n            };\n        },\n        function(t, e, n) {\n            var r = n(28), o = Object.prototype.hasOwnProperty;\n            t.exports = function(t) {\n                var e = this.__data__;\n                return r ? void 0 !== e[t] : o.call(e, t);\n            };\n        },\n        function(t, e, n) {\n            var r = n(28);\n            t.exports = function(t, e) {\n                var n = this.__data__;\n                return this.size += this.has(t) ? 0 : 1, n[t] = r && void 0 === e ? \"__lodash_hash_undefined__\" : e, this;\n            };\n        },\n        function(t, e, n) {\n            var r = n(29);\n            t.exports = function(t) {\n                var e = r(this, t).delete(t);\n                return this.size -= e ? 1 : 0, e;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                var e = typeof t;\n                return \"string\" == e || \"number\" == e || \"symbol\" == e || \"boolean\" == e ? \"__proto__\" !== t : null === t;\n            };\n        },\n        function(t, e, n) {\n            var r = n(29);\n            t.exports = function(t) {\n                return r(this, t).get(t);\n            };\n        },\n        function(t, e, n) {\n            var r = n(29);\n            t.exports = function(t) {\n                return r(this, t).has(t);\n            };\n        },\n        function(t, e, n) {\n            var r = n(29);\n            t.exports = function(t, e) {\n                var n = r(this, t), o = n.size;\n                return n.set(t, e), this.size += n.size == o ? 0 : 1, this;\n            };\n        },\n        function(t, e, n) {\n            var r = n(106)();\n            t.exports = r;\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                return function(e, n, r) {\n                    for(var o = -1, i = Object(e), a = r(e), u = a.length; u--;){\n                        var c = a[t ? u : ++o];\n                        if (!1 === n(i[c], c, i)) break;\n                    }\n                    return e;\n                };\n            };\n        },\n        function(t, e, n) {\n            var r = n(47), o = n(108), i = n(109), a = n(112), u = n(113), c = n(30), s = n(16), f = n(117), l = n(51), d = n(35), h = n(15), v = n(119), p = n(52), y = n(53), g = n(123);\n            t.exports = function(t, e, n, x, m, _, b) {\n                var w = y(t, n), O = y(e, n), R = b.get(O);\n                if (R) r(t, n, R);\n                else {\n                    var M = _ ? _(w, O, n + \"\", t, e, b) : void 0, C = void 0 === M;\n                    if (C) {\n                        var E = s(O), A = !E && l(O), S = !E && !A && p(O);\n                        M = O, E || A || S ? s(w) ? M = w : f(w) ? M = a(w) : A ? (C = !1, M = o(O, !0)) : S ? (C = !1, M = i(O, !0)) : M = [] : v(O) || c(O) ? (M = w, c(w) ? M = g(w) : h(w) && !d(w) || (M = u(O))) : C = !1;\n                    }\n                    C && (b.set(O, M), m(M, O, x, _, b), b.delete(O)), r(t, n, M);\n                }\n            };\n        },\n        function(t, e, n) {\n            (function(t) {\n                var r = n(19), o = e && !e.nodeType && e, i = o && \"object\" == typeof t && t && !t.nodeType && t, a = i && i.exports === o ? r.Buffer : void 0, u = a ? a.allocUnsafe : void 0;\n                t.exports = function(t, e) {\n                    if (e) return t.slice();\n                    var n = t.length, r = u ? u(n) : new t.constructor(n);\n                    return t.copy(r), r;\n                };\n            }).call(this, n(37)(t));\n        },\n        function(t, e, n) {\n            var r = n(110);\n            t.exports = function(t, e) {\n                var n = e ? r(t.buffer) : t.buffer;\n                return new t.constructor(n, t.byteOffset, t.length);\n            };\n        },\n        function(t, e, n) {\n            var r = n(111);\n            t.exports = function(t) {\n                var e = new t.constructor(t.byteLength);\n                return new r(e).set(new r(t)), e;\n            };\n        },\n        function(t, e, n) {\n            var r = n(19).Uint8Array;\n            t.exports = r;\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                var n = -1, r = t.length;\n                for(e || (e = Array(r)); ++n < r;)e[n] = t[n];\n                return e;\n            };\n        },\n        function(t, e, n) {\n            var r = n(114), o = n(49), i = n(50);\n            t.exports = function(t) {\n                return \"function\" != typeof t.constructor || i(t) ? {} : r(o(t));\n            };\n        },\n        function(t, e, n) {\n            var r = n(15), o = Object.create, i = function() {\n                function t() {}\n                return function(e) {\n                    if (!r(e)) return {};\n                    if (o) return o(e);\n                    t.prototype = e;\n                    var n = new t;\n                    return t.prototype = void 0, n;\n                };\n            }();\n            t.exports = i;\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                return function(n) {\n                    return t(e(n));\n                };\n            };\n        },\n        function(t, e, n) {\n            var r = n(22), o = n(20);\n            t.exports = function(t) {\n                return o(t) && \"[object Arguments]\" == r(t);\n            };\n        },\n        function(t, e, n) {\n            var r = n(38), o = n(20);\n            t.exports = function(t) {\n                return o(t) && r(t);\n            };\n        },\n        function(t, e) {\n            t.exports = function() {\n                return !1;\n            };\n        },\n        function(t, e, n) {\n            var r = n(22), o = n(49), i = n(20), a = Function.prototype, u = Object.prototype, c = a.toString, s = u.hasOwnProperty, f = c.call(Object);\n            t.exports = function(t) {\n                if (!i(t) || \"[object Object]\" != r(t)) return !1;\n                var e = o(t);\n                if (null === e) return !0;\n                var n = s.call(e, \"constructor\") && e.constructor;\n                return \"function\" == typeof n && n instanceof n && c.call(n) == f;\n            };\n        },\n        function(t, e, n) {\n            var r = n(22), o = n(39), i = n(20), a = {};\n            a[\"[object Float32Array]\"] = a[\"[object Float64Array]\"] = a[\"[object Int8Array]\"] = a[\"[object Int16Array]\"] = a[\"[object Int32Array]\"] = a[\"[object Uint8Array]\"] = a[\"[object Uint8ClampedArray]\"] = a[\"[object Uint16Array]\"] = a[\"[object Uint32Array]\"] = !0, a[\"[object Arguments]\"] = a[\"[object Array]\"] = a[\"[object ArrayBuffer]\"] = a[\"[object Boolean]\"] = a[\"[object DataView]\"] = a[\"[object Date]\"] = a[\"[object Error]\"] = a[\"[object Function]\"] = a[\"[object Map]\"] = a[\"[object Number]\"] = a[\"[object Object]\"] = a[\"[object RegExp]\"] = a[\"[object Set]\"] = a[\"[object String]\"] = a[\"[object WeakMap]\"] = !1, t.exports = function(t) {\n                return i(t) && o(t.length) && !!a[r(t)];\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                return function(e) {\n                    return t(e);\n                };\n            };\n        },\n        function(t, e, n) {\n            (function(t) {\n                var r = n(44), o = e && !e.nodeType && e, i = o && \"object\" == typeof t && t && !t.nodeType && t, a = i && i.exports === o && r.process, u = function() {\n                    try {\n                        var t = i && i.require && i.require(\"util\").types;\n                        return t || a && a.binding && a.binding(\"util\");\n                    } catch (t) {}\n                }();\n                t.exports = u;\n            }).call(this, n(37)(t));\n        },\n        function(t, e, n) {\n            var r = n(124), o = n(55);\n            t.exports = function(t) {\n                return r(t, o(t));\n            };\n        },\n        function(t, e, n) {\n            var r = n(54), o = n(36);\n            t.exports = function(t, e, n, i) {\n                var a = !n;\n                n || (n = {});\n                for(var u = -1, c = e.length; ++u < c;){\n                    var s = e[u], f = i ? i(n[s], t[s], s, n, t) : void 0;\n                    void 0 === f && (f = t[s]), a ? o(n, s, f) : r(n, s, f);\n                }\n                return n;\n            };\n        },\n        function(t, e, n) {\n            var r = n(126), o = n(30), i = n(16), a = n(51), u = n(31), c = n(52), s = Object.prototype.hasOwnProperty;\n            t.exports = function(t, e) {\n                var n = i(t), f = !n && o(t), l = !n && !f && a(t), d = !n && !f && !l && c(t), h = n || f || l || d, v = h ? r(t.length, String) : [], p = v.length;\n                for(var y in t)!e && !s.call(t, y) || h && (\"length\" == y || l && (\"offset\" == y || \"parent\" == y) || d && (\"buffer\" == y || \"byteLength\" == y || \"byteOffset\" == y) || u(y, p)) || v.push(y);\n                return v;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                for(var n = -1, r = Array(t); ++n < t;)r[n] = e(n);\n                return r;\n            };\n        },\n        function(t, e, n) {\n            var r = n(15), o = n(50), i = n(128), a = Object.prototype.hasOwnProperty;\n            t.exports = function(t) {\n                if (!r(t)) return i(t);\n                var e = o(t), n = [];\n                for(var u in t)(\"constructor\" != u || !e && a.call(t, u)) && n.push(u);\n                return n;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                var e = [];\n                if (null != t) for(var n in Object(t))e.push(n);\n                return e;\n            };\n        },\n        function(t, e, n) {\n            var r = n(130), o = n(135);\n            t.exports = function(t) {\n                return r(function(e, n) {\n                    var r = -1, i = n.length, a = i > 1 ? n[i - 1] : void 0, u = i > 2 ? n[2] : void 0;\n                    for(a = t.length > 3 && \"function\" == typeof a ? (i--, a) : void 0, u && o(n[0], n[1], u) && (a = i < 3 ? void 0 : a, i = 1), e = Object(e); ++r < i;){\n                        var c = n[r];\n                        c && t(e, c, r, a);\n                    }\n                    return e;\n                });\n            };\n        },\n        function(t, e, n) {\n            var r = n(56), o = n(57), i = n(58);\n            t.exports = function(t, e) {\n                return i(o(t, e, r), t + \"\");\n            };\n        },\n        function(t, e) {\n            t.exports = function(t, e, n) {\n                switch(n.length){\n                    case 0:\n                        return t.call(e);\n                    case 1:\n                        return t.call(e, n[0]);\n                    case 2:\n                        return t.call(e, n[0], n[1]);\n                    case 3:\n                        return t.call(e, n[0], n[1], n[2]);\n                }\n                return t.apply(e, n);\n            };\n        },\n        function(t, e, n) {\n            var r = n(133), o = n(48), i = n(56), a = o ? function(t, e) {\n                return o(t, \"toString\", {\n                    configurable: !0,\n                    enumerable: !1,\n                    value: r(e),\n                    writable: !0\n                });\n            } : i;\n            t.exports = a;\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                return function() {\n                    return t;\n                };\n            };\n        },\n        function(t, e) {\n            var n = Date.now;\n            t.exports = function(t) {\n                var e = 0, r = 0;\n                return function() {\n                    var o = n(), i = 16 - (o - r);\n                    if (r = o, i > 0) {\n                        if (++e >= 800) return arguments[0];\n                    } else e = 0;\n                    return t.apply(void 0, arguments);\n                };\n            };\n        },\n        function(t, e, n) {\n            var r = n(26), o = n(38), i = n(31), a = n(15);\n            t.exports = function(t, e, n) {\n                if (!a(n)) return !1;\n                var u = typeof e;\n                return !!(\"number\" == u ? o(n) && i(e, n.length) : \"string\" == u && e in n) && r(n[e], t);\n            };\n        },\n        function(t, e) {\n             true && (window.requestAnimationFrame || (window.requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(t) {\n                window.setTimeout(t, 1e3 / 60);\n            })), \"function\" != typeof Math.imul && (Math.imul = function(t, e) {\n                var n = 65535 & t, r = 65535 & e;\n                return n * r + ((t >>> 16 & 65535) * r + n * (e >>> 16 & 65535) << 16 >>> 0) | 0;\n            }), \"function\" != typeof Object.assign && (Object.assign = function(t) {\n                \"use strict\";\n                if (null === t) throw new TypeError(\"Cannot convert undefined or null to object\");\n                for(var e = Object(t), n = 1; n < arguments.length; n++){\n                    var r = arguments[n];\n                    if (null !== r) for(var o in r)Object.prototype.hasOwnProperty.call(r, o) && (e[o] = r[o]);\n                }\n                return e;\n            });\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                if (Array.isArray(t)) return t;\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                var n = null == t ? null : \"undefined\" != typeof Symbol && t[Symbol.iterator] || t[\"@@iterator\"];\n                if (null != n) {\n                    var r, o, i, a, u = [], c = !0, s = !1;\n                    try {\n                        if (i = (n = n.call(t)).next, 0 === e) {\n                            if (Object(n) !== n) return;\n                            c = !1;\n                        } else for(; !(c = (r = i.call(n)).done) && (u.push(r.value), u.length !== e); c = !0);\n                    } catch (t) {\n                        s = !0, o = t;\n                    } finally{\n                        try {\n                            if (!c && null != n.return && (a = n.return(), Object(a) !== a)) return;\n                        } finally{\n                            if (s) throw o;\n                        }\n                    }\n                    return u;\n                }\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            t.exports = function() {\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(13).default;\n            t.exports = function(t, e) {\n                if (\"object\" !== r(t) || null === t) return t;\n                var n = t[Symbol.toPrimitive];\n                if (void 0 !== n) {\n                    var o = n.call(t, e || \"default\");\n                    if (\"object\" !== r(o)) return o;\n                    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                }\n                return (\"string\" === e ? String : Number)(t);\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(13).default;\n            function o() {\n                \"use strict\";\n                /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ t.exports = o = function() {\n                    return n;\n                }, t.exports.__esModule = !0, t.exports.default = t.exports;\n                var e, n = {}, i = Object.prototype, a = i.hasOwnProperty, u = Object.defineProperty || function(t, e, n) {\n                    t[e] = n.value;\n                }, c = \"function\" == typeof Symbol ? Symbol : {}, s = c.iterator || \"@@iterator\", f = c.asyncIterator || \"@@asyncIterator\", l = c.toStringTag || \"@@toStringTag\";\n                function d(t, e, n) {\n                    return Object.defineProperty(t, e, {\n                        value: n,\n                        enumerable: !0,\n                        configurable: !0,\n                        writable: !0\n                    }), t[e];\n                }\n                try {\n                    d({}, \"\");\n                } catch (e) {\n                    d = function(t, e, n) {\n                        return t[e] = n;\n                    };\n                }\n                function h(t, e, n, r) {\n                    var o = e && e.prototype instanceof m ? e : m, i = Object.create(o.prototype), a = new T(r || []);\n                    return u(i, \"_invoke\", {\n                        value: A(t, n, a)\n                    }), i;\n                }\n                function v(t, e, n) {\n                    try {\n                        return {\n                            type: \"normal\",\n                            arg: t.call(e, n)\n                        };\n                    } catch (t) {\n                        return {\n                            type: \"throw\",\n                            arg: t\n                        };\n                    }\n                }\n                n.wrap = h;\n                var p = \"suspendedStart\", y = \"executing\", g = \"completed\", x = {};\n                function m() {}\n                function _() {}\n                function b() {}\n                var w = {};\n                d(w, s, function() {\n                    return this;\n                });\n                var O = Object.getPrototypeOf, R = O && O(O(D([])));\n                R && R !== i && a.call(R, s) && (w = R);\n                var M = b.prototype = m.prototype = Object.create(w);\n                function C(t) {\n                    [\n                        \"next\",\n                        \"throw\",\n                        \"return\"\n                    ].forEach(function(e) {\n                        d(t, e, function(t) {\n                            return this._invoke(e, t);\n                        });\n                    });\n                }\n                function E(t, e) {\n                    function n(o, i, u, c) {\n                        var s = v(t[o], t, i);\n                        if (\"throw\" !== s.type) {\n                            var f = s.arg, l = f.value;\n                            return l && \"object\" == r(l) && a.call(l, \"__await\") ? e.resolve(l.__await).then(function(t) {\n                                n(\"next\", t, u, c);\n                            }, function(t) {\n                                n(\"throw\", t, u, c);\n                            }) : e.resolve(l).then(function(t) {\n                                f.value = t, u(f);\n                            }, function(t) {\n                                return n(\"throw\", t, u, c);\n                            });\n                        }\n                        c(s.arg);\n                    }\n                    var o;\n                    u(this, \"_invoke\", {\n                        value: function(t, r) {\n                            function i() {\n                                return new e(function(e, o) {\n                                    n(t, r, e, o);\n                                });\n                            }\n                            return o = o ? o.then(i, i) : i();\n                        }\n                    });\n                }\n                function A(t, n, r) {\n                    var o = p;\n                    return function(i, a) {\n                        if (o === y) throw new Error(\"Generator is already running\");\n                        if (o === g) {\n                            if (\"throw\" === i) throw a;\n                            return {\n                                value: e,\n                                done: !0\n                            };\n                        }\n                        for(r.method = i, r.arg = a;;){\n                            var u = r.delegate;\n                            if (u) {\n                                var c = S(u, r);\n                                if (c) {\n                                    if (c === x) continue;\n                                    return c;\n                                }\n                            }\n                            if (\"next\" === r.method) r.sent = r._sent = r.arg;\n                            else if (\"throw\" === r.method) {\n                                if (o === p) throw o = g, r.arg;\n                                r.dispatchException(r.arg);\n                            } else \"return\" === r.method && r.abrupt(\"return\", r.arg);\n                            o = y;\n                            var s = v(t, n, r);\n                            if (\"normal\" === s.type) {\n                                if (o = r.done ? g : \"suspendedYield\", s.arg === x) continue;\n                                return {\n                                    value: s.arg,\n                                    done: r.done\n                                };\n                            }\n                            \"throw\" === s.type && (o = g, r.method = \"throw\", r.arg = s.arg);\n                        }\n                    };\n                }\n                function S(t, n) {\n                    var r = n.method, o = t.iterator[r];\n                    if (o === e) return n.delegate = null, \"throw\" === r && t.iterator.return && (n.method = \"return\", n.arg = e, S(t, n), \"throw\" === n.method) || \"return\" !== r && (n.method = \"throw\", n.arg = new TypeError(\"The iterator does not provide a '\" + r + \"' method\")), x;\n                    var i = v(o, t.iterator, n.arg);\n                    if (\"throw\" === i.type) return n.method = \"throw\", n.arg = i.arg, n.delegate = null, x;\n                    var a = i.arg;\n                    return a ? a.done ? (n[t.resultName] = a.value, n.next = t.nextLoc, \"return\" !== n.method && (n.method = \"next\", n.arg = e), n.delegate = null, x) : a : (n.method = \"throw\", n.arg = new TypeError(\"iterator result is not an object\"), n.delegate = null, x);\n                }\n                function k(t) {\n                    var e = {\n                        tryLoc: t[0]\n                    };\n                    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n                }\n                function P(t) {\n                    var e = t.completion || {};\n                    e.type = \"normal\", delete e.arg, t.completion = e;\n                }\n                function T(t) {\n                    this.tryEntries = [\n                        {\n                            tryLoc: \"root\"\n                        }\n                    ], t.forEach(k, this), this.reset(!0);\n                }\n                function D(t) {\n                    if (t || \"\" === t) {\n                        var n = t[s];\n                        if (n) return n.call(t);\n                        if (\"function\" == typeof t.next) return t;\n                        if (!isNaN(t.length)) {\n                            var o = -1, i = function n() {\n                                for(; ++o < t.length;)if (a.call(t, o)) return n.value = t[o], n.done = !1, n;\n                                return n.value = e, n.done = !0, n;\n                            };\n                            return i.next = i;\n                        }\n                    }\n                    throw new TypeError(r(t) + \" is not iterable\");\n                }\n                return _.prototype = b, u(M, \"constructor\", {\n                    value: b,\n                    configurable: !0\n                }), u(b, \"constructor\", {\n                    value: _,\n                    configurable: !0\n                }), _.displayName = d(b, l, \"GeneratorFunction\"), n.isGeneratorFunction = function(t) {\n                    var e = \"function\" == typeof t && t.constructor;\n                    return !!e && (e === _ || \"GeneratorFunction\" === (e.displayName || e.name));\n                }, n.mark = function(t) {\n                    return Object.setPrototypeOf ? Object.setPrototypeOf(t, b) : (t.__proto__ = b, d(t, l, \"GeneratorFunction\")), t.prototype = Object.create(M), t;\n                }, n.awrap = function(t) {\n                    return {\n                        __await: t\n                    };\n                }, C(E.prototype), d(E.prototype, f, function() {\n                    return this;\n                }), n.AsyncIterator = E, n.async = function(t, e, r, o, i) {\n                    void 0 === i && (i = Promise);\n                    var a = new E(h(t, e, r, o), i);\n                    return n.isGeneratorFunction(e) ? a : a.next().then(function(t) {\n                        return t.done ? t.value : a.next();\n                    });\n                }, C(M), d(M, l, \"Generator\"), d(M, s, function() {\n                    return this;\n                }), d(M, \"toString\", function() {\n                    return \"[object Generator]\";\n                }), n.keys = function(t) {\n                    var e = Object(t), n = [];\n                    for(var r in e)n.push(r);\n                    return n.reverse(), function t() {\n                        for(; n.length;){\n                            var r = n.pop();\n                            if (r in e) return t.value = r, t.done = !1, t;\n                        }\n                        return t.done = !0, t;\n                    };\n                }, n.values = D, T.prototype = {\n                    constructor: T,\n                    reset: function(t) {\n                        if (this.prev = 0, this.next = 0, this.sent = this._sent = e, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = e, this.tryEntries.forEach(P), !t) for(var n in this)\"t\" === n.charAt(0) && a.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = e);\n                    },\n                    stop: function() {\n                        this.done = !0;\n                        var t = this.tryEntries[0].completion;\n                        if (\"throw\" === t.type) throw t.arg;\n                        return this.rval;\n                    },\n                    dispatchException: function(t) {\n                        if (this.done) throw t;\n                        var n = this;\n                        function r(r, o) {\n                            return u.type = \"throw\", u.arg = t, n.next = r, o && (n.method = \"next\", n.arg = e), !!o;\n                        }\n                        for(var o = this.tryEntries.length - 1; o >= 0; --o){\n                            var i = this.tryEntries[o], u = i.completion;\n                            if (\"root\" === i.tryLoc) return r(\"end\");\n                            if (i.tryLoc <= this.prev) {\n                                var c = a.call(i, \"catchLoc\"), s = a.call(i, \"finallyLoc\");\n                                if (c && s) {\n                                    if (this.prev < i.catchLoc) return r(i.catchLoc, !0);\n                                    if (this.prev < i.finallyLoc) return r(i.finallyLoc);\n                                } else if (c) {\n                                    if (this.prev < i.catchLoc) return r(i.catchLoc, !0);\n                                } else {\n                                    if (!s) throw new Error(\"try statement without catch or finally\");\n                                    if (this.prev < i.finallyLoc) return r(i.finallyLoc);\n                                }\n                            }\n                        }\n                    },\n                    abrupt: function(t, e) {\n                        for(var n = this.tryEntries.length - 1; n >= 0; --n){\n                            var r = this.tryEntries[n];\n                            if (r.tryLoc <= this.prev && a.call(r, \"finallyLoc\") && this.prev < r.finallyLoc) {\n                                var o = r;\n                                break;\n                            }\n                        }\n                        o && (\"break\" === t || \"continue\" === t) && o.tryLoc <= e && e <= o.finallyLoc && (o = null);\n                        var i = o ? o.completion : {};\n                        return i.type = t, i.arg = e, o ? (this.method = \"next\", this.next = o.finallyLoc, x) : this.complete(i);\n                    },\n                    complete: function(t, e) {\n                        if (\"throw\" === t.type) throw t.arg;\n                        return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), x;\n                    },\n                    finish: function(t) {\n                        for(var e = this.tryEntries.length - 1; e >= 0; --e){\n                            var n = this.tryEntries[e];\n                            if (n.finallyLoc === t) return this.complete(n.completion, n.afterLoc), P(n), x;\n                        }\n                    },\n                    catch: function(t) {\n                        for(var e = this.tryEntries.length - 1; e >= 0; --e){\n                            var n = this.tryEntries[e];\n                            if (n.tryLoc === t) {\n                                var r = n.completion;\n                                if (\"throw\" === r.type) {\n                                    var o = r.arg;\n                                    P(n);\n                                }\n                                return o;\n                            }\n                        }\n                        throw new Error(\"illegal catch attempt\");\n                    },\n                    delegateYield: function(t, n, r) {\n                        return this.delegate = {\n                            iterator: D(t),\n                            resultName: n,\n                            nextLoc: r\n                        }, \"next\" === this.method && (this.arg = e), x;\n                    }\n                }, n;\n            }\n            t.exports = o, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(2);\n            t.exports = function(t, e) {\n                for(; !Object.prototype.hasOwnProperty.call(t, e) && null !== (t = r(t)););\n                return t;\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(60);\n            t.exports = function(t) {\n                if (Array.isArray(t)) return r(t);\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                if (\"undefined\" != typeof Symbol && null != t[Symbol.iterator] || null != t[\"@@iterator\"]) return Array.from(t);\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            t.exports = function() {\n                throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(147), o = n(157);\n            t.exports = function(t, e) {\n                return r(t, e, function(e, n) {\n                    return o(t, n);\n                });\n            };\n        },\n        function(t, e, n) {\n            var r = n(148), o = n(156), i = n(32);\n            t.exports = function(t, e, n) {\n                for(var a = -1, u = e.length, c = {}; ++a < u;){\n                    var s = e[a], f = r(t, s);\n                    n(f, s) && o(c, i(s, t), f);\n                }\n                return c;\n            };\n        },\n        function(t, e, n) {\n            var r = n(32), o = n(42);\n            t.exports = function(t, e) {\n                for(var n = 0, i = (e = r(e, t)).length; null != t && n < i;)t = t[o(e[n++])];\n                return n && n == i ? t : void 0;\n            };\n        },\n        function(t, e, n) {\n            var r = n(16), o = n(41), i = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/, a = /^\\w*$/;\n            t.exports = function(t, e) {\n                if (r(t)) return !1;\n                var n = typeof t;\n                return !(\"number\" != n && \"symbol\" != n && \"boolean\" != n && null != t && !o(t)) || a.test(t) || !i.test(t) || null != e && t in Object(e);\n            };\n        },\n        function(t, e, n) {\n            var r = n(151), o = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, i = /\\\\(\\\\)?/g, a = r(function(t) {\n                var e = [];\n                return 46 === t.charCodeAt(0) && e.push(\"\"), t.replace(o, function(t, n, r, o) {\n                    e.push(r ? o.replace(i, \"$1\") : n || t);\n                }), e;\n            });\n            t.exports = a;\n        },\n        function(t, e, n) {\n            var r = n(152);\n            t.exports = function(t) {\n                var e = r(t, function(t) {\n                    return 500 === n.size && n.clear(), t;\n                }), n = e.cache;\n                return e;\n            };\n        },\n        function(t, e, n) {\n            var r = n(46);\n            function o(t, e) {\n                if (\"function\" != typeof t || null != e && \"function\" != typeof e) throw new TypeError(\"Expected a function\");\n                var n = function() {\n                    var r = arguments, o = e ? e.apply(this, r) : r[0], i = n.cache;\n                    if (i.has(o)) return i.get(o);\n                    var a = t.apply(this, r);\n                    return n.cache = i.set(o, a) || i, a;\n                };\n                return n.cache = new (o.Cache || r), n;\n            }\n            o.Cache = r, t.exports = o;\n        },\n        function(t, e, n) {\n            var r = n(154);\n            t.exports = function(t) {\n                return null == t ? \"\" : r(t);\n            };\n        },\n        function(t, e, n) {\n            var r = n(27), o = n(155), i = n(16), a = n(41), u = r ? r.prototype : void 0, c = u ? u.toString : void 0;\n            t.exports = function t(e) {\n                if (\"string\" == typeof e) return e;\n                if (i(e)) return o(e, t) + \"\";\n                if (a(e)) return c ? c.call(e) : \"\";\n                var n = e + \"\";\n                return \"0\" == n && 1 / e == -1 / 0 ? \"-0\" : n;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                for(var n = -1, r = null == t ? 0 : t.length, o = Array(r); ++n < r;)o[n] = e(t[n], n, t);\n                return o;\n            };\n        },\n        function(t, e, n) {\n            var r = n(54), o = n(32), i = n(31), a = n(15), u = n(42);\n            t.exports = function(t, e, n, c) {\n                if (!a(t)) return t;\n                for(var s = -1, f = (e = o(e, t)).length, l = f - 1, d = t; null != d && ++s < f;){\n                    var h = u(e[s]), v = n;\n                    if (\"__proto__\" === h || \"constructor\" === h || \"prototype\" === h) return t;\n                    if (s != l) {\n                        var p = d[h];\n                        void 0 === (v = c ? c(p, h, d) : void 0) && (v = a(p) ? p : i(e[s + 1]) ? [] : {});\n                    }\n                    r(d, h, v), d = d[h];\n                }\n                return t;\n            };\n        },\n        function(t, e, n) {\n            var r = n(158), o = n(159);\n            t.exports = function(t, e) {\n                return null != t && o(t, e, r);\n            };\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                return null != t && e in Object(t);\n            };\n        },\n        function(t, e, n) {\n            var r = n(32), o = n(30), i = n(16), a = n(31), u = n(39), c = n(42);\n            t.exports = function(t, e, n) {\n                for(var s = -1, f = (e = r(e, t)).length, l = !1; ++s < f;){\n                    var d = c(e[s]);\n                    if (!(l = null != t && n(t, d))) break;\n                    t = t[d];\n                }\n                return l || ++s != f ? l : !!(f = null == t ? 0 : t.length) && u(f) && a(d, f) && (i(t) || o(t));\n            };\n        },\n        function(t, e, n) {\n            var r = n(161), o = n(57), i = n(58);\n            t.exports = function(t) {\n                return i(o(t, void 0, r), t + \"\");\n            };\n        },\n        function(t, e, n) {\n            var r = n(162);\n            t.exports = function(t) {\n                return (null == t ? 0 : t.length) ? r(t, 1) : [];\n            };\n        },\n        function(t, e, n) {\n            var r = n(163), o = n(164);\n            t.exports = function t(e, n, i, a, u) {\n                var c = -1, s = e.length;\n                for(i || (i = o), u || (u = []); ++c < s;){\n                    var f = e[c];\n                    n > 0 && i(f) ? n > 1 ? t(f, n - 1, i, a, u) : r(u, f) : a || (u[u.length] = f);\n                }\n                return u;\n            };\n        },\n        function(t, e) {\n            t.exports = function(t, e) {\n                for(var n = -1, r = e.length, o = t.length; ++n < r;)t[o + n] = e[n];\n                return t;\n            };\n        },\n        function(t, e, n) {\n            var r = n(27), o = n(30), i = n(16), a = r ? r.isConcatSpreadable : void 0;\n            t.exports = function(t) {\n                return i(t) || o(t) || !!(a && t && t[a]);\n            };\n        },\n        function(t, e) {\n            t.exports = function(t) {\n                try {\n                    return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n                } catch (e) {\n                    return \"function\" == typeof t;\n                }\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            var r = n(40), o = n(167);\n            function i(e, n, a) {\n                return o() ? (t.exports = i = Reflect.construct.bind(), t.exports.__esModule = !0, t.exports.default = t.exports) : (t.exports = i = function(t, e, n) {\n                    var o = [\n                        null\n                    ];\n                    o.push.apply(o, e);\n                    var i = new (Function.bind.apply(t, o));\n                    return n && r(i, n.prototype), i;\n                }, t.exports.__esModule = !0, t.exports.default = t.exports), i.apply(null, arguments);\n            }\n            t.exports = i, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e) {\n            t.exports = function() {\n                if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                if (Reflect.construct.sham) return !1;\n                if (\"function\" == typeof Proxy) return !0;\n                try {\n                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                } catch (t) {\n                    return !1;\n                }\n            }, t.exports.__esModule = !0, t.exports.default = t.exports;\n        },\n        function(t, e, n) {\n            \"use strict\";\n            n.r(e), n.d(e, \"BarcodeDecoder\", function() {\n                return Lt;\n            }), n.d(e, \"Readers\", function() {\n                return r;\n            }), n.d(e, \"CameraAccess\", function() {\n                return re;\n            }), n.d(e, \"ImageDebug\", function() {\n                return h.a;\n            }), n.d(e, \"ImageWrapper\", function() {\n                return c.a;\n            }), n.d(e, \"ResultCollector\", function() {\n                return oe;\n            });\n            var r = {};\n            n.r(r), n.d(r, \"BarcodeReader\", function() {\n                return k;\n            }), n.d(r, \"TwoOfFiveReader\", function() {\n                return z;\n            }), n.d(r, \"NewCodabarReader\", function() {\n                return B;\n            }), n.d(r, \"Code128Reader\", function() {\n                return q;\n            }), n.d(r, \"Code32Reader\", function() {\n                return tt;\n            }), n.d(r, \"Code39Reader\", function() {\n                return Z;\n            }), n.d(r, \"Code39VINReader\", function() {\n                return ot;\n            }), n.d(r, \"Code93Reader\", function() {\n                return ct;\n            }), n.d(r, \"EAN2Reader\", function() {\n                return mt;\n            }), n.d(r, \"EAN5Reader\", function() {\n                return wt;\n            }), n.d(r, \"EAN8Reader\", function() {\n                return Rt;\n            }), n.d(r, \"EANReader\", function() {\n                return gt;\n            }), n.d(r, \"I2of5Reader\", function() {\n                return Ct;\n            }), n.d(r, \"UPCEReader\", function() {\n                return St;\n            }), n.d(r, \"UPCReader\", function() {\n                return Pt;\n            });\n            var o = n(13), i = n.n(o), a = n(18), u = n.n(a), c = (n(136), n(11)), s = n(12), f = n.n(s), l = n(8), d = n.n(l), h = n(17), v = n(3), p = n.n(v), y = n(4), g = n.n(y), x = n(1), m = n.n(x), _ = n(7), b = n.n(_), w = n(6), O = n.n(w), R = n(2), M = n.n(R), C = n(0), E = n.n(C), A = n(9), S = function(t) {\n                return t[t.Forward = 1] = \"Forward\", t[t.Reverse = -1] = \"Reverse\", t;\n            }({}), k = function() {\n                function t(e, n) {\n                    p()(this, t), E()(this, \"_row\", []), E()(this, \"config\", {}), E()(this, \"supplements\", []), E()(this, \"SINGLE_CODE_ERROR\", 0), E()(this, \"FORMAT\", \"unknown\"), E()(this, \"CONFIG_KEYS\", {}), this._row = [], this.config = e || {}, n && (this.supplements = n);\n                }\n                return g()(t, [\n                    {\n                        key: \"_nextUnset\",\n                        value: function(t) {\n                            for(var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = e; n < t.length; n++)if (!t[n]) return n;\n                            return t.length;\n                        }\n                    },\n                    {\n                        key: \"_matchPattern\",\n                        value: function(t, e) {\n                            for(var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.SINGLE_CODE_ERROR || 1, r = 0, o = 0, i = 0, a = 0, u = 0, c = 0, s = 0, f = 0; f < t.length; f++)i += t[f], a += e[f];\n                            if (i < a) return Number.MAX_VALUE;\n                            n *= u = i / a;\n                            for(var l = 0; l < t.length; l++){\n                                if (c = t[l], s = e[l] * u, (o = Math.abs(c - s) / s) > n) return Number.MAX_VALUE;\n                                r += o;\n                            }\n                            return r / a;\n                        }\n                    },\n                    {\n                        key: \"_nextSet\",\n                        value: function(t) {\n                            for(var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n = e; n < t.length; n++)if (t[n]) return n;\n                            return t.length;\n                        }\n                    },\n                    {\n                        key: \"_correctBars\",\n                        value: function(t, e, n) {\n                            for(var r = n.length, o = 0; r--;)(o = t[n[r]] * (1 - (1 - e) / 2)) > 1 && (t[n[r]] = o);\n                        }\n                    },\n                    {\n                        key: \"decodePattern\",\n                        value: function(t) {\n                            this._row = t;\n                            var e = this.decode();\n                            return null === e ? (this._row.reverse(), (e = this.decode()) && (e.direction = S.Reverse, e.start = this._row.length - e.start, e.end = this._row.length - e.end)) : e.direction = S.Forward, e && (e.format = this.FORMAT), e;\n                        }\n                    },\n                    {\n                        key: \"_matchRange\",\n                        value: function(t, e, n) {\n                            var r;\n                            for(r = t = t < 0 ? 0 : t; r < e; r++)if (this._row[r] !== n) return !1;\n                            return !0;\n                        }\n                    },\n                    {\n                        key: \"_fillCounters\",\n                        value: function() {\n                            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._nextUnset(this._row), e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._row.length, n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], r = [], o = 0;\n                            r[o] = 0;\n                            for(var i = t; i < e; i++)this._row[i] ^ (n ? 1 : 0) ? r[o]++ : (r[++o] = 1, n = !n);\n                            return r;\n                        }\n                    },\n                    {\n                        key: \"_toCounters\",\n                        value: function(t, e) {\n                            var n = e.length, r = this._row.length, o = !this._row[t], i = 0;\n                            A.a.init(e, 0);\n                            for(var a = t; a < r; a++)if (this._row[a] ^ (o ? 1 : 0)) e[i]++;\n                            else {\n                                if (++i === n) break;\n                                e[i] = 1, o = !o;\n                            }\n                            return e;\n                        }\n                    },\n                    {\n                        key: \"decodeImage\",\n                        value: function(t) {\n                            return null;\n                        }\n                    }\n                ], [\n                    {\n                        key: \"Exception\",\n                        get: function() {\n                            return {\n                                StartNotFoundException: \"Start-Info was not found!\",\n                                CodeNotFoundException: \"Code could not be found!\",\n                                PatternNotFoundException: \"Pattern could not be found!\"\n                            };\n                        }\n                    }\n                ]), t;\n            }();\n            function P(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var T = [\n                3,\n                1,\n                3,\n                1,\n                1,\n                1\n            ], D = [\n                3,\n                1,\n                1,\n                1,\n                3\n            ], j = [\n                [\n                    1,\n                    1,\n                    3,\n                    3,\n                    1\n                ],\n                [\n                    3,\n                    1,\n                    1,\n                    1,\n                    3\n                ],\n                [\n                    1,\n                    3,\n                    1,\n                    1,\n                    3\n                ],\n                [\n                    3,\n                    3,\n                    1,\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1,\n                    3,\n                    1,\n                    3\n                ],\n                [\n                    3,\n                    1,\n                    3,\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    3,\n                    3,\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1,\n                    1,\n                    3,\n                    3\n                ],\n                [\n                    3,\n                    1,\n                    1,\n                    3,\n                    1\n                ],\n                [\n                    1,\n                    3,\n                    1,\n                    3,\n                    1\n                ]\n            ], I = T.reduce(function(t, e) {\n                return t + e;\n            }, 0), z = function(t) {\n                b()(n, t);\n                var e = P(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"barSpaceRatio\", [\n                        1,\n                        1\n                    ]), E()(m()(t), \"FORMAT\", \"2of5\"), E()(m()(t), \"SINGLE_CODE_ERROR\", .78), E()(m()(t), \"AVG_CODE_ERROR\", .3), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"_findPattern\",\n                        value: function(t, e) {\n                            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], o = [], i = 0, a = {\n                                error: Number.MAX_VALUE,\n                                code: -1,\n                                start: 0,\n                                end: 0\n                            }, u = 0, c = 0, s = this.AVG_CODE_ERROR;\n                            e || (e = this._nextSet(this._row));\n                            for(var f = 0; f < t.length; f++)o[f] = 0;\n                            for(var l = e; l < this._row.length; l++)if (this._row[l] ^ (n ? 1 : 0)) o[i]++;\n                            else {\n                                if (i === o.length - 1) {\n                                    u = 0;\n                                    for(var d = 0; d < o.length; d++)u += o[d];\n                                    if ((c = this._matchPattern(o, t)) < s) return a.error = c, a.start = l - u, a.end = l, a;\n                                    if (!r) return null;\n                                    for(var h = 0; h < o.length - 2; h++)o[h] = o[h + 2];\n                                    o[o.length - 2] = 0, o[o.length - 1] = 0, i--;\n                                } else i++;\n                                o[i] = 1, n = !n;\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_findStart\",\n                        value: function() {\n                            for(var t = null, e = this._nextSet(this._row), n = 1, r = 0; !t;){\n                                if (!(t = this._findPattern(T, e, !1, !0))) return null;\n                                if (n = Math.floor((t.end - t.start) / I), (r = t.start - 5 * n) >= 0 && this._matchRange(r, t.start, 0)) return t;\n                                e = t.end, t = null;\n                            }\n                            return t;\n                        }\n                    },\n                    {\n                        key: \"_verifyTrailingWhitespace\",\n                        value: function(t) {\n                            var e = t.end + (t.end - t.start) / 2;\n                            return e < this._row.length && this._matchRange(t.end, e, 0) ? t : null;\n                        }\n                    },\n                    {\n                        key: \"_findEnd\",\n                        value: function() {\n                            this._row.reverse();\n                            var t = this._nextSet(this._row), e = this._findPattern(D, t, !1, !0);\n                            if (this._row.reverse(), null === e) return null;\n                            var n = e.start;\n                            return e.start = this._row.length - e.end, e.end = this._row.length - n, null !== e ? this._verifyTrailingWhitespace(e) : null;\n                        }\n                    },\n                    {\n                        key: \"_verifyCounterLength\",\n                        value: function(t) {\n                            return t.length % 10 == 0;\n                        }\n                    },\n                    {\n                        key: \"_decodeCode\",\n                        value: function(t) {\n                            for(var e = this.AVG_CODE_ERROR, n = {\n                                error: Number.MAX_VALUE,\n                                code: -1,\n                                start: 0,\n                                end: 0\n                            }, r = 0; r < j.length; r++){\n                                var o = this._matchPattern(t, j[r]);\n                                o < n.error && (n.code = r, n.error = o);\n                            }\n                            return n.error < e ? n : null;\n                        }\n                    },\n                    {\n                        key: \"_decodePayload\",\n                        value: function(t, e, n) {\n                            for(var r = 0, o = t.length, i = [\n                                0,\n                                0,\n                                0,\n                                0,\n                                0\n                            ], a = null; r < o;){\n                                for(var u = 0; u < 5; u++)i[u] = t[r] * this.barSpaceRatio[0], r += 2;\n                                if (!(a = this._decodeCode(i))) return null;\n                                e.push(\"\".concat(a.code)), n.push(a);\n                            }\n                            return a;\n                        }\n                    },\n                    {\n                        key: \"decode\",\n                        value: function(t, e) {\n                            var n = this._findStart();\n                            if (!n) return null;\n                            var r = this._findEnd();\n                            if (!r) return null;\n                            var o = this._fillCounters(n.end, r.start, !1);\n                            if (!this._verifyCounterLength(o)) return null;\n                            var i = [];\n                            i.push(n);\n                            var a = [];\n                            return this._decodePayload(o, a, i) ? a.length < 5 ? null : (i.push(r), {\n                                code: a.join(\"\"),\n                                start: n.start,\n                                end: r.end,\n                                startInfo: n,\n                                decodedCodes: i,\n                                format: this.FORMAT\n                            }) : null;\n                        }\n                    }\n                ]), n;\n            }(k);\n            function U(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var L = [\n                48,\n                49,\n                50,\n                51,\n                52,\n                53,\n                54,\n                55,\n                56,\n                57,\n                45,\n                36,\n                58,\n                47,\n                46,\n                43,\n                65,\n                66,\n                67,\n                68\n            ], N = [\n                3,\n                6,\n                9,\n                96,\n                18,\n                66,\n                33,\n                36,\n                48,\n                72,\n                12,\n                24,\n                69,\n                81,\n                84,\n                21,\n                26,\n                41,\n                11,\n                14\n            ], F = [\n                26,\n                41,\n                11,\n                14\n            ], B = function(t) {\n                b()(n, t);\n                var e = U(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"_counters\", []), E()(m()(t), \"FORMAT\", \"codabar\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"_computeAlternatingThreshold\",\n                        value: function(t, e) {\n                            for(var n = Number.MAX_VALUE, r = 0, o = 0, i = t; i < e; i += 2)(o = this._counters[i]) > r && (r = o), o < n && (n = o);\n                            return (n + r) / 2 | 0;\n                        }\n                    },\n                    {\n                        key: \"_toPattern\",\n                        value: function(t) {\n                            var e = t + 7;\n                            if (e > this._counters.length) return -1;\n                            for(var n = this._computeAlternatingThreshold(t, e), r = this._computeAlternatingThreshold(t + 1, e), o = 64, i = 0, a = 0, u = 0; u < 7; u++)i = 0 == (1 & u) ? n : r, this._counters[t + u] > i && (a |= o), o >>= 1;\n                            return a;\n                        }\n                    },\n                    {\n                        key: \"_isStartEnd\",\n                        value: function(t) {\n                            for(var e = 0; e < F.length; e++)if (F[e] === t) return !0;\n                            return !1;\n                        }\n                    },\n                    {\n                        key: \"_sumCounters\",\n                        value: function(t, e) {\n                            for(var n = 0, r = t; r < e; r++)n += this._counters[r];\n                            return n;\n                        }\n                    },\n                    {\n                        key: \"_findStart\",\n                        value: function() {\n                            for(var t = this._nextUnset(this._row), e = 1; e < this._counters.length; e++){\n                                var n = this._toPattern(e);\n                                if (-1 !== n && this._isStartEnd(n)) return {\n                                    start: t += this._sumCounters(0, e),\n                                    end: t + this._sumCounters(e, e + 8),\n                                    startCounter: e,\n                                    endCounter: e + 8\n                                };\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_patternToChar\",\n                        value: function(t) {\n                            for(var e = 0; e < N.length; e++)if (N[e] === t) return String.fromCharCode(L[e]);\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_calculatePatternLength\",\n                        value: function(t) {\n                            for(var e = 0, n = t; n < t + 7; n++)e += this._counters[n];\n                            return e;\n                        }\n                    },\n                    {\n                        key: \"_verifyWhitespace\",\n                        value: function(t, e) {\n                            return (t - 1 <= 0 || this._counters[t - 1] >= this._calculatePatternLength(t) / 2) && (e + 8 >= this._counters.length || this._counters[e + 7] >= this._calculatePatternLength(e) / 2);\n                        }\n                    },\n                    {\n                        key: \"_charToPattern\",\n                        value: function(t) {\n                            for(var e = t.charCodeAt(0), n = 0; n < L.length; n++)if (L[n] === e) return N[n];\n                            return 0;\n                        }\n                    },\n                    {\n                        key: \"_thresholdResultPattern\",\n                        value: function(t, e) {\n                            for(var n, r = {\n                                space: {\n                                    narrow: {\n                                        size: 0,\n                                        counts: 0,\n                                        min: 0,\n                                        max: Number.MAX_VALUE\n                                    },\n                                    wide: {\n                                        size: 0,\n                                        counts: 0,\n                                        min: 0,\n                                        max: Number.MAX_VALUE\n                                    }\n                                },\n                                bar: {\n                                    narrow: {\n                                        size: 0,\n                                        counts: 0,\n                                        min: 0,\n                                        max: Number.MAX_VALUE\n                                    },\n                                    wide: {\n                                        size: 0,\n                                        counts: 0,\n                                        min: 0,\n                                        max: Number.MAX_VALUE\n                                    }\n                                }\n                            }, o = e, i = 0; i < t.length; i++){\n                                n = this._charToPattern(t[i]);\n                                for(var a = 6; a >= 0; a--){\n                                    var u = 2 == (1 & a) ? r.bar : r.space, c = 1 == (1 & n) ? u.wide : u.narrow;\n                                    c.size += this._counters[o + a], c.counts++, n >>= 1;\n                                }\n                                o += 8;\n                            }\n                            return [\n                                \"space\",\n                                \"bar\"\n                            ].forEach(function(t) {\n                                var e = r[t];\n                                e.wide.min = Math.floor((e.narrow.size / e.narrow.counts + e.wide.size / e.wide.counts) / 2), e.narrow.max = Math.ceil(e.wide.min), e.wide.max = Math.ceil((2 * e.wide.size + 1.5) / e.wide.counts);\n                            }), r;\n                        }\n                    },\n                    {\n                        key: \"_validateResult\",\n                        value: function(t, e) {\n                            for(var n, r = this._thresholdResultPattern(t, e), o = e, i = 0; i < t.length; i++){\n                                n = this._charToPattern(t[i]);\n                                for(var a = 6; a >= 0; a--){\n                                    var u = 0 == (1 & a) ? r.bar : r.space, c = 1 == (1 & n) ? u.wide : u.narrow, s = this._counters[o + a];\n                                    if (s < c.min || s > c.max) return !1;\n                                    n >>= 1;\n                                }\n                                o += 8;\n                            }\n                            return !0;\n                        }\n                    },\n                    {\n                        key: \"decode\",\n                        value: function(t, e) {\n                            if (this._counters = this._fillCounters(), !(e = this._findStart())) return null;\n                            var n, r = e.startCounter, o = [];\n                            do {\n                                if ((n = this._toPattern(r)) < 0) return null;\n                                var i = this._patternToChar(n);\n                                if (null === i) return null;\n                                if (o.push(i), r += 8, o.length > 1 && this._isStartEnd(n)) break;\n                            }while (r < this._counters.length);\n                            if (o.length - 2 < 4 || !this._isStartEnd(n)) return null;\n                            if (!this._verifyWhitespace(e.startCounter, r - 8)) return null;\n                            if (!this._validateResult(o, e.startCounter)) return null;\n                            r = r > this._counters.length ? this._counters.length : r;\n                            var a = e.start + this._sumCounters(e.startCounter, r - 8);\n                            return {\n                                code: o.join(\"\"),\n                                start: e.start,\n                                end: a,\n                                startInfo: e,\n                                decodedCodes: o,\n                                format: this.FORMAT\n                            };\n                        }\n                    }\n                ]), n;\n            }(k);\n            function W(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var q = function(t) {\n                b()(n, t);\n                var e = W(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"CODE_SHIFT\", 98), E()(m()(t), \"CODE_C\", 99), E()(m()(t), \"CODE_B\", 100), E()(m()(t), \"CODE_A\", 101), E()(m()(t), \"START_CODE_A\", 103), E()(m()(t), \"START_CODE_B\", 104), E()(m()(t), \"START_CODE_C\", 105), E()(m()(t), \"STOP_CODE\", 106), E()(m()(t), \"CODE_PATTERN\", [\n                        [\n                            2,\n                            1,\n                            2,\n                            2,\n                            2,\n                            2\n                        ],\n                        [\n                            2,\n                            2,\n                            2,\n                            1,\n                            2,\n                            2\n                        ],\n                        [\n                            2,\n                            2,\n                            2,\n                            2,\n                            2,\n                            1\n                        ],\n                        [\n                            1,\n                            2,\n                            1,\n                            2,\n                            2,\n                            3\n                        ],\n                        [\n                            1,\n                            2,\n                            1,\n                            3,\n                            2,\n                            2\n                        ],\n                        [\n                            1,\n                            3,\n                            1,\n                            2,\n                            2,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            2,\n                            2,\n                            1,\n                            3\n                        ],\n                        [\n                            1,\n                            2,\n                            2,\n                            3,\n                            1,\n                            2\n                        ],\n                        [\n                            1,\n                            3,\n                            2,\n                            2,\n                            1,\n                            2\n                        ],\n                        [\n                            2,\n                            2,\n                            1,\n                            2,\n                            1,\n                            3\n                        ],\n                        [\n                            2,\n                            2,\n                            1,\n                            3,\n                            1,\n                            2\n                        ],\n                        [\n                            2,\n                            3,\n                            1,\n                            2,\n                            1,\n                            2\n                        ],\n                        [\n                            1,\n                            1,\n                            2,\n                            2,\n                            3,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            2,\n                            1,\n                            3,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            2,\n                            2,\n                            3,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            3,\n                            2,\n                            2,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            3,\n                            1,\n                            2,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            3,\n                            2,\n                            2,\n                            1\n                        ],\n                        [\n                            2,\n                            2,\n                            3,\n                            2,\n                            1,\n                            1\n                        ],\n                        [\n                            2,\n                            2,\n                            1,\n                            1,\n                            3,\n                            2\n                        ],\n                        [\n                            2,\n                            2,\n                            1,\n                            2,\n                            3,\n                            1\n                        ],\n                        [\n                            2,\n                            1,\n                            3,\n                            2,\n                            1,\n                            2\n                        ],\n                        [\n                            2,\n                            2,\n                            3,\n                            1,\n                            1,\n                            2\n                        ],\n                        [\n                            3,\n                            1,\n                            2,\n                            1,\n                            3,\n                            1\n                        ],\n                        [\n                            3,\n                            1,\n                            1,\n                            2,\n                            2,\n                            2\n                        ],\n                        [\n                            3,\n                            2,\n                            1,\n                            1,\n                            2,\n                            2\n                        ],\n                        [\n                            3,\n                            2,\n                            1,\n                            2,\n                            2,\n                            1\n                        ],\n                        [\n                            3,\n                            1,\n                            2,\n                            2,\n                            1,\n                            2\n                        ],\n                        [\n                            3,\n                            2,\n                            2,\n                            1,\n                            1,\n                            2\n                        ],\n                        [\n                            3,\n                            2,\n                            2,\n                            2,\n                            1,\n                            1\n                        ],\n                        [\n                            2,\n                            1,\n                            2,\n                            1,\n                            2,\n                            3\n                        ],\n                        [\n                            2,\n                            1,\n                            2,\n                            3,\n                            2,\n                            1\n                        ],\n                        [\n                            2,\n                            3,\n                            2,\n                            1,\n                            2,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            1,\n                            3,\n                            2,\n                            3\n                        ],\n                        [\n                            1,\n                            3,\n                            1,\n                            1,\n                            2,\n                            3\n                        ],\n                        [\n                            1,\n                            3,\n                            1,\n                            3,\n                            2,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            2,\n                            3,\n                            1,\n                            3\n                        ],\n                        [\n                            1,\n                            3,\n                            2,\n                            1,\n                            1,\n                            3\n                        ],\n                        [\n                            1,\n                            3,\n                            2,\n                            3,\n                            1,\n                            1\n                        ],\n                        [\n                            2,\n                            1,\n                            1,\n                            3,\n                            1,\n                            3\n                        ],\n                        [\n                            2,\n                            3,\n                            1,\n                            1,\n                            1,\n                            3\n                        ],\n                        [\n                            2,\n                            3,\n                            1,\n                            3,\n                            1,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            2,\n                            1,\n                            3,\n                            3\n                        ],\n                        [\n                            1,\n                            1,\n                            2,\n                            3,\n                            3,\n                            1\n                        ],\n                        [\n                            1,\n                            3,\n                            2,\n                            1,\n                            3,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            3,\n                            1,\n                            2,\n                            3\n                        ],\n                        [\n                            1,\n                            1,\n                            3,\n                            3,\n                            2,\n                            1\n                        ],\n                        [\n                            1,\n                            3,\n                            3,\n                            1,\n                            2,\n                            1\n                        ],\n                        [\n                            3,\n                            1,\n                            3,\n                            1,\n                            2,\n                            1\n                        ],\n                        [\n                            2,\n                            1,\n                            1,\n                            3,\n                            3,\n                            1\n                        ],\n                        [\n                            2,\n                            3,\n                            1,\n                            1,\n                            3,\n                            1\n                        ],\n                        [\n                            2,\n                            1,\n                            3,\n                            1,\n                            1,\n                            3\n                        ],\n                        [\n                            2,\n                            1,\n                            3,\n                            3,\n                            1,\n                            1\n                        ],\n                        [\n                            2,\n                            1,\n                            3,\n                            1,\n                            3,\n                            1\n                        ],\n                        [\n                            3,\n                            1,\n                            1,\n                            1,\n                            2,\n                            3\n                        ],\n                        [\n                            3,\n                            1,\n                            1,\n                            3,\n                            2,\n                            1\n                        ],\n                        [\n                            3,\n                            3,\n                            1,\n                            1,\n                            2,\n                            1\n                        ],\n                        [\n                            3,\n                            1,\n                            2,\n                            1,\n                            1,\n                            3\n                        ],\n                        [\n                            3,\n                            1,\n                            2,\n                            3,\n                            1,\n                            1\n                        ],\n                        [\n                            3,\n                            3,\n                            2,\n                            1,\n                            1,\n                            1\n                        ],\n                        [\n                            3,\n                            1,\n                            4,\n                            1,\n                            1,\n                            1\n                        ],\n                        [\n                            2,\n                            2,\n                            1,\n                            4,\n                            1,\n                            1\n                        ],\n                        [\n                            4,\n                            3,\n                            1,\n                            1,\n                            1,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            1,\n                            2,\n                            2,\n                            4\n                        ],\n                        [\n                            1,\n                            1,\n                            1,\n                            4,\n                            2,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            1,\n                            1,\n                            2,\n                            4\n                        ],\n                        [\n                            1,\n                            2,\n                            1,\n                            4,\n                            2,\n                            1\n                        ],\n                        [\n                            1,\n                            4,\n                            1,\n                            1,\n                            2,\n                            2\n                        ],\n                        [\n                            1,\n                            4,\n                            1,\n                            2,\n                            2,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            2,\n                            2,\n                            1,\n                            4\n                        ],\n                        [\n                            1,\n                            1,\n                            2,\n                            4,\n                            1,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            2,\n                            1,\n                            1,\n                            4\n                        ],\n                        [\n                            1,\n                            2,\n                            2,\n                            4,\n                            1,\n                            1\n                        ],\n                        [\n                            1,\n                            4,\n                            2,\n                            1,\n                            1,\n                            2\n                        ],\n                        [\n                            1,\n                            4,\n                            2,\n                            2,\n                            1,\n                            1\n                        ],\n                        [\n                            2,\n                            4,\n                            1,\n                            2,\n                            1,\n                            1\n                        ],\n                        [\n                            2,\n                            2,\n                            1,\n                            1,\n                            1,\n                            4\n                        ],\n                        [\n                            4,\n                            1,\n                            3,\n                            1,\n                            1,\n                            1\n                        ],\n                        [\n                            2,\n                            4,\n                            1,\n                            1,\n                            1,\n                            2\n                        ],\n                        [\n                            1,\n                            3,\n                            4,\n                            1,\n                            1,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            1,\n                            2,\n                            4,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            1,\n                            1,\n                            4,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            1,\n                            2,\n                            4,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            4,\n                            2,\n                            1,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            4,\n                            1,\n                            1,\n                            2\n                        ],\n                        [\n                            1,\n                            2,\n                            4,\n                            2,\n                            1,\n                            1\n                        ],\n                        [\n                            4,\n                            1,\n                            1,\n                            2,\n                            1,\n                            2\n                        ],\n                        [\n                            4,\n                            2,\n                            1,\n                            1,\n                            1,\n                            2\n                        ],\n                        [\n                            4,\n                            2,\n                            1,\n                            2,\n                            1,\n                            1\n                        ],\n                        [\n                            2,\n                            1,\n                            2,\n                            1,\n                            4,\n                            1\n                        ],\n                        [\n                            2,\n                            1,\n                            4,\n                            1,\n                            2,\n                            1\n                        ],\n                        [\n                            4,\n                            1,\n                            2,\n                            1,\n                            2,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            1,\n                            1,\n                            4,\n                            3\n                        ],\n                        [\n                            1,\n                            1,\n                            1,\n                            3,\n                            4,\n                            1\n                        ],\n                        [\n                            1,\n                            3,\n                            1,\n                            1,\n                            4,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            4,\n                            1,\n                            1,\n                            3\n                        ],\n                        [\n                            1,\n                            1,\n                            4,\n                            3,\n                            1,\n                            1\n                        ],\n                        [\n                            4,\n                            1,\n                            1,\n                            1,\n                            1,\n                            3\n                        ],\n                        [\n                            4,\n                            1,\n                            1,\n                            3,\n                            1,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            3,\n                            1,\n                            4,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            4,\n                            1,\n                            3,\n                            1\n                        ],\n                        [\n                            3,\n                            1,\n                            1,\n                            1,\n                            4,\n                            1\n                        ],\n                        [\n                            4,\n                            1,\n                            1,\n                            1,\n                            3,\n                            1\n                        ],\n                        [\n                            2,\n                            1,\n                            1,\n                            4,\n                            1,\n                            2\n                        ],\n                        [\n                            2,\n                            1,\n                            1,\n                            2,\n                            1,\n                            4\n                        ],\n                        [\n                            2,\n                            1,\n                            1,\n                            2,\n                            3,\n                            2\n                        ],\n                        [\n                            2,\n                            3,\n                            3,\n                            1,\n                            1,\n                            1,\n                            2\n                        ]\n                    ]), E()(m()(t), \"SINGLE_CODE_ERROR\", .64), E()(m()(t), \"AVG_CODE_ERROR\", .3), E()(m()(t), \"FORMAT\", \"code_128\"), E()(m()(t), \"MODULE_INDICES\", {\n                        bar: [\n                            0,\n                            2,\n                            4\n                        ],\n                        space: [\n                            1,\n                            3,\n                            5\n                        ]\n                    }), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"_decodeCode\",\n                        value: function(t, e) {\n                            for(var n = {\n                                error: Number.MAX_VALUE,\n                                code: -1,\n                                start: t,\n                                end: t,\n                                correction: {\n                                    bar: 1,\n                                    space: 1\n                                }\n                            }, r = [\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0\n                            ], o = t, i = !this._row[o], a = 0, u = o; u < this._row.length; u++)if (this._row[u] ^ (i ? 1 : 0)) r[a]++;\n                            else {\n                                if (a === r.length - 1) {\n                                    e && this._correct(r, e);\n                                    for(var c = 0; c < this.CODE_PATTERN.length; c++){\n                                        var s = this._matchPattern(r, this.CODE_PATTERN[c]);\n                                        s < n.error && (n.code = c, n.error = s);\n                                    }\n                                    return n.end = u, -1 === n.code || n.error > this.AVG_CODE_ERROR ? null : (this.CODE_PATTERN[n.code] && (n.correction.bar = this.calculateCorrection(this.CODE_PATTERN[n.code], r, this.MODULE_INDICES.bar), n.correction.space = this.calculateCorrection(this.CODE_PATTERN[n.code], r, this.MODULE_INDICES.space)), n);\n                                }\n                                r[++a] = 1, i = !i;\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_correct\",\n                        value: function(t, e) {\n                            this._correctBars(t, e.bar, this.MODULE_INDICES.bar), this._correctBars(t, e.space, this.MODULE_INDICES.space);\n                        }\n                    },\n                    {\n                        key: \"_findStart\",\n                        value: function() {\n                            for(var t = [\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0\n                            ], e = this._nextSet(this._row), n = {\n                                error: Number.MAX_VALUE,\n                                code: -1,\n                                start: 0,\n                                end: 0,\n                                correction: {\n                                    bar: 1,\n                                    space: 1\n                                }\n                            }, r = !1, o = 0, i = e; i < this._row.length; i++)if (this._row[i] ^ (r ? 1 : 0)) t[o]++;\n                            else {\n                                if (o === t.length - 1) {\n                                    for(var a = t.reduce(function(t, e) {\n                                        return t + e;\n                                    }, 0), u = this.START_CODE_A; u <= this.START_CODE_C; u++){\n                                        var c = this._matchPattern(t, this.CODE_PATTERN[u]);\n                                        c < n.error && (n.code = u, n.error = c);\n                                    }\n                                    if (n.error < this.AVG_CODE_ERROR) return n.start = i - a, n.end = i, n.correction.bar = this.calculateCorrection(this.CODE_PATTERN[n.code], t, this.MODULE_INDICES.bar), n.correction.space = this.calculateCorrection(this.CODE_PATTERN[n.code], t, this.MODULE_INDICES.space), n;\n                                    for(var s = 0; s < 4; s++)t[s] = t[s + 2];\n                                    t[4] = 0, t[5] = 0, o--;\n                                } else o++;\n                                t[o] = 1, r = !r;\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"decode\",\n                        value: function(t, e) {\n                            var n = this, r = this._findStart();\n                            if (null === r) return null;\n                            var o = {\n                                code: r.code,\n                                start: r.start,\n                                end: r.end,\n                                correction: {\n                                    bar: r.correction.bar,\n                                    space: r.correction.space\n                                }\n                            }, i = [];\n                            i.push(o);\n                            for(var a = o.code, u = function(t) {\n                                switch(t){\n                                    case n.START_CODE_A:\n                                        return n.CODE_A;\n                                    case n.START_CODE_B:\n                                        return n.CODE_B;\n                                    case n.START_CODE_C:\n                                        return n.CODE_C;\n                                    default:\n                                        return null;\n                                }\n                            }(o.code), c = !1, s = !1, f = s, l = !0, d = 0, h = [], v = []; !c;){\n                                if (f = s, s = !1, null !== (o = this._decodeCode(o.end, o.correction))) switch(o.code !== this.STOP_CODE && (l = !0), o.code !== this.STOP_CODE && (h.push(o.code), a += ++d * o.code), i.push(o), u){\n                                    case this.CODE_A:\n                                        if (o.code < 64) v.push(String.fromCharCode(32 + o.code));\n                                        else if (o.code < 96) v.push(String.fromCharCode(o.code - 64));\n                                        else switch(o.code !== this.STOP_CODE && (l = !1), o.code){\n                                            case this.CODE_SHIFT:\n                                                s = !0, u = this.CODE_B;\n                                                break;\n                                            case this.CODE_B:\n                                                u = this.CODE_B;\n                                                break;\n                                            case this.CODE_C:\n                                                u = this.CODE_C;\n                                                break;\n                                            case this.STOP_CODE:\n                                                c = !0;\n                                        }\n                                        break;\n                                    case this.CODE_B:\n                                        if (o.code < 96) v.push(String.fromCharCode(32 + o.code));\n                                        else switch(o.code !== this.STOP_CODE && (l = !1), o.code){\n                                            case this.CODE_SHIFT:\n                                                s = !0, u = this.CODE_A;\n                                                break;\n                                            case this.CODE_A:\n                                                u = this.CODE_A;\n                                                break;\n                                            case this.CODE_C:\n                                                u = this.CODE_C;\n                                                break;\n                                            case this.STOP_CODE:\n                                                c = !0;\n                                        }\n                                        break;\n                                    case this.CODE_C:\n                                        if (o.code < 100) v.push(o.code < 10 ? \"0\" + o.code : o.code);\n                                        else switch(o.code !== this.STOP_CODE && (l = !1), o.code){\n                                            case this.CODE_A:\n                                                u = this.CODE_A;\n                                                break;\n                                            case this.CODE_B:\n                                                u = this.CODE_B;\n                                                break;\n                                            case this.STOP_CODE:\n                                                c = !0;\n                                        }\n                                }\n                                else c = !0;\n                                f && (u = u === this.CODE_A ? this.CODE_B : this.CODE_A);\n                            }\n                            return null === o ? null : (o.end = this._nextUnset(this._row, o.end), this._verifyTrailingWhitespace(o) ? (a -= d * h[h.length - 1]) % 103 !== h[h.length - 1] ? null : v.length ? (l && v.splice(v.length - 1, 1), {\n                                code: v.join(\"\"),\n                                start: r.start,\n                                end: o.end,\n                                codeset: u,\n                                startInfo: r,\n                                decodedCodes: i,\n                                endInfo: o,\n                                format: this.FORMAT\n                            }) : null : null);\n                        }\n                    },\n                    {\n                        key: \"_verifyTrailingWhitespace\",\n                        value: function(t) {\n                            var e;\n                            return (e = t.end + (t.end - t.start) / 2) < this._row.length && this._matchRange(t.end, e, 0) ? t : null;\n                        }\n                    },\n                    {\n                        key: \"calculateCorrection\",\n                        value: function(t, e, n) {\n                            for(var r = n.length, o = 0, i = 0; r--;)i += t[n[r]], o += e[n[r]];\n                            return i / o;\n                        }\n                    }\n                ]), n;\n            }(k), V = n(14), G = n.n(V), H = n(33), X = n.n(H);\n            function Q(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var Y = new Uint16Array(X()(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. *$/+%\").map(function(t) {\n                return t.charCodeAt(0);\n            })), $ = new Uint16Array([\n                52,\n                289,\n                97,\n                352,\n                49,\n                304,\n                112,\n                37,\n                292,\n                100,\n                265,\n                73,\n                328,\n                25,\n                280,\n                88,\n                13,\n                268,\n                76,\n                28,\n                259,\n                67,\n                322,\n                19,\n                274,\n                82,\n                7,\n                262,\n                70,\n                22,\n                385,\n                193,\n                448,\n                145,\n                400,\n                208,\n                133,\n                388,\n                196,\n                148,\n                168,\n                162,\n                138,\n                42\n            ]), Z = function(t) {\n                b()(n, t);\n                var e = Q(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"FORMAT\", \"code_39\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"_findStart\",\n                        value: function() {\n                            for(var t = this._nextSet(this._row), e = t, n = new Uint16Array([\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0\n                            ]), r = 0, o = !1, i = t; i < this._row.length; i++)if (this._row[i] ^ (o ? 1 : 0)) n[r]++;\n                            else {\n                                if (r === n.length - 1) {\n                                    if (148 === this._toPattern(n)) {\n                                        var a = Math.floor(Math.max(0, e - (i - e) / 4));\n                                        if (this._matchRange(a, e, 0)) return {\n                                            start: e,\n                                            end: i\n                                        };\n                                    }\n                                    e += n[0] + n[1];\n                                    for(var u = 0; u < 7; u++)n[u] = n[u + 2];\n                                    n[7] = 0, n[8] = 0, r--;\n                                } else r++;\n                                n[r] = 1, o = !o;\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_toPattern\",\n                        value: function(t) {\n                            for(var e = t.length, n = 0, r = e, o = 0; r > 3;){\n                                n = this._findNextWidth(t, n), r = 0;\n                                for(var i = 0, a = 0; a < e; a++)t[a] > n && (i |= 1 << e - 1 - a, r++, o += t[a]);\n                                if (3 === r) {\n                                    for(var u = 0; u < e && r > 0; u++)if (t[u] > n && (r--, 2 * t[u] >= o)) return -1;\n                                    return i;\n                                }\n                            }\n                            return -1;\n                        }\n                    },\n                    {\n                        key: \"_findNextWidth\",\n                        value: function(t, e) {\n                            for(var n = Number.MAX_VALUE, r = 0; r < t.length; r++)t[r] < n && t[r] > e && (n = t[r]);\n                            return n;\n                        }\n                    },\n                    {\n                        key: \"_patternToChar\",\n                        value: function(t) {\n                            for(var e = 0; e < $.length; e++)if ($[e] === t) return String.fromCharCode(Y[e]);\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_verifyTrailingWhitespace\",\n                        value: function(t, e, n) {\n                            var r = A.a.sum(n);\n                            return 3 * (e - t - r) >= r;\n                        }\n                    },\n                    {\n                        key: \"decode\",\n                        value: function() {\n                            var t = new Uint16Array([\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0\n                            ]), e = [], n = this._findStart();\n                            if (!n) return null;\n                            var r, o, i = this._nextSet(this._row, n.end);\n                            do {\n                                t = this._toCounters(i, t);\n                                var a = this._toPattern(t);\n                                if (a < 0) return null;\n                                if (null === (r = this._patternToChar(a))) return null;\n                                e.push(r), o = i, i += A.a.sum(t), i = this._nextSet(this._row, i);\n                            }while (\"*\" !== r);\n                            return e.pop(), e.length && this._verifyTrailingWhitespace(o, i, t) ? {\n                                code: e.join(\"\"),\n                                start: n.start,\n                                end: i,\n                                startInfo: n,\n                                decodedCodes: e,\n                                format: this.FORMAT\n                            } : null;\n                        }\n                    }\n                ]), n;\n            }(k);\n            function K(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var J = /[AEIO]/g, tt = function(t) {\n                b()(n, t);\n                var e = K(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"FORMAT\", \"code_32_reader\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"_decodeCode32\",\n                        value: function(t) {\n                            if (/[^0-9BCDFGHJKLMNPQRSTUVWXYZ]/.test(t)) return null;\n                            for(var e = 0, n = 0; n < t.length; n++)e = 32 * e + \"0123456789BCDFGHJKLMNPQRSTUVWXYZ\".indexOf(t[n]);\n                            var r = \"\".concat(e);\n                            return r.length < 9 && (r = (\"000000000\" + r).slice(-9)), \"A\" + r;\n                        }\n                    },\n                    {\n                        key: \"_checkChecksum\",\n                        value: function(t) {\n                            return !!t;\n                        }\n                    },\n                    {\n                        key: \"decode\",\n                        value: function() {\n                            var t = G()(M()(n.prototype), \"decode\", this).call(this);\n                            if (!t) return null;\n                            var e = t.code;\n                            if (!e) return null;\n                            if (e = e.replace(J, \"\"), !this._checkChecksum(e)) return null;\n                            var r = this._decodeCode32(e);\n                            return r ? (t.code = r, t) : null;\n                        }\n                    }\n                ]), n;\n            }(Z);\n            function et(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var nt = /[IOQ]/g, rt = /[A-Z0-9]{17}/, ot = function(t) {\n                b()(n, t);\n                var e = et(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"FORMAT\", \"code_39_vin\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"_checkChecksum\",\n                        value: function(t) {\n                            return !!t;\n                        }\n                    },\n                    {\n                        key: \"decode\",\n                        value: function() {\n                            var t = G()(M()(n.prototype), \"decode\", this).call(this);\n                            if (!t) return null;\n                            var e = t.code;\n                            return e && (e = e.replace(nt, \"\")).match(rt) && this._checkChecksum(e) ? (t.code = e, t) : null;\n                        }\n                    }\n                ]), n;\n            }(Z);\n            function it(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var at = new Uint16Array(X()(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%abcd*\").map(function(t) {\n                return t.charCodeAt(0);\n            })), ut = new Uint16Array([\n                276,\n                328,\n                324,\n                322,\n                296,\n                292,\n                290,\n                336,\n                274,\n                266,\n                424,\n                420,\n                418,\n                404,\n                402,\n                394,\n                360,\n                356,\n                354,\n                308,\n                282,\n                344,\n                332,\n                326,\n                300,\n                278,\n                436,\n                434,\n                428,\n                422,\n                406,\n                410,\n                364,\n                358,\n                310,\n                314,\n                302,\n                468,\n                466,\n                458,\n                366,\n                374,\n                430,\n                294,\n                474,\n                470,\n                306,\n                350\n            ]), ct = function(t) {\n                b()(n, t);\n                var e = it(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"FORMAT\", \"code_93\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"_patternToChar\",\n                        value: function(t) {\n                            for(var e = 0; e < ut.length; e++)if (ut[e] === t) return String.fromCharCode(at[e]);\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_toPattern\",\n                        value: function(t) {\n                            for(var e = t.length, n = t.reduce(function(t, e) {\n                                return t + e;\n                            }, 0), r = 0, o = 0; o < e; o++){\n                                var i = Math.round(9 * t[o] / n);\n                                if (i < 1 || i > 4) return -1;\n                                if (0 == (1 & o)) for(var a = 0; a < i; a++)r = r << 1 | 1;\n                                else r <<= i;\n                            }\n                            return r;\n                        }\n                    },\n                    {\n                        key: \"_findStart\",\n                        value: function() {\n                            for(var t = this._nextSet(this._row), e = t, n = new Uint16Array([\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0\n                            ]), r = 0, o = !1, i = t; i < this._row.length; i++)if (this._row[i] ^ (o ? 1 : 0)) n[r]++;\n                            else {\n                                if (r === n.length - 1) {\n                                    if (350 === this._toPattern(n)) {\n                                        var a = Math.floor(Math.max(0, e - (i - e) / 4));\n                                        if (this._matchRange(a, e, 0)) return {\n                                            start: e,\n                                            end: i\n                                        };\n                                    }\n                                    e += n[0] + n[1];\n                                    for(var u = 0; u < 4; u++)n[u] = n[u + 2];\n                                    n[4] = 0, n[5] = 0, r--;\n                                } else r++;\n                                n[r] = 1, o = !o;\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_verifyEnd\",\n                        value: function(t, e) {\n                            return !(t === e || !this._row[e]);\n                        }\n                    },\n                    {\n                        key: \"_decodeExtended\",\n                        value: function(t) {\n                            for(var e = t.length, n = [], r = 0; r < e; r++){\n                                var o = t[r];\n                                if (o >= \"a\" && o <= \"d\") {\n                                    if (r > e - 2) return null;\n                                    var i = t[++r], a = i.charCodeAt(0), u = void 0;\n                                    switch(o){\n                                        case \"a\":\n                                            if (!(i >= \"A\" && i <= \"Z\")) return null;\n                                            u = String.fromCharCode(a - 64);\n                                            break;\n                                        case \"b\":\n                                            if (i >= \"A\" && i <= \"E\") u = String.fromCharCode(a - 38);\n                                            else if (i >= \"F\" && i <= \"J\") u = String.fromCharCode(a - 11);\n                                            else if (i >= \"K\" && i <= \"O\") u = String.fromCharCode(a + 16);\n                                            else if (i >= \"P\" && i <= \"S\") u = String.fromCharCode(a + 43);\n                                            else {\n                                                if (!(i >= \"T\" && i <= \"Z\")) return null;\n                                                u = String.fromCharCode(127);\n                                            }\n                                            break;\n                                        case \"c\":\n                                            if (i >= \"A\" && i <= \"O\") u = String.fromCharCode(a - 32);\n                                            else {\n                                                if (\"Z\" !== i) return null;\n                                                u = \":\";\n                                            }\n                                            break;\n                                        case \"d\":\n                                            if (!(i >= \"A\" && i <= \"Z\")) return null;\n                                            u = String.fromCharCode(a + 32);\n                                            break;\n                                        default:\n                                            return console.warn(\"* code_93_reader _decodeExtended hit default case, this may be an error\", u), null;\n                                    }\n                                    n.push(u);\n                                } else n.push(o);\n                            }\n                            return n;\n                        }\n                    },\n                    {\n                        key: \"_matchCheckChar\",\n                        value: function(t, e, n) {\n                            var r = t.slice(0, e), o = r.length, i = r.reduce(function(t, e, r) {\n                                return t + ((-1 * r + (o - 1)) % n + 1) * at.indexOf(e.charCodeAt(0));\n                            }, 0);\n                            return at[i % 47] === t[e].charCodeAt(0);\n                        }\n                    },\n                    {\n                        key: \"_verifyChecksums\",\n                        value: function(t) {\n                            return this._matchCheckChar(t, t.length - 2, 20) && this._matchCheckChar(t, t.length - 1, 15);\n                        }\n                    },\n                    {\n                        key: \"decode\",\n                        value: function(t, e) {\n                            if (!(e = this._findStart())) return null;\n                            var n, r, o = new Uint16Array([\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                0\n                            ]), i = [], a = this._nextSet(this._row, e.end);\n                            do {\n                                o = this._toCounters(a, o);\n                                var u = this._toPattern(o);\n                                if (u < 0) return null;\n                                if (null === (r = this._patternToChar(u))) return null;\n                                i.push(r), n = a, a += A.a.sum(o), a = this._nextSet(this._row, a);\n                            }while (\"*\" !== r);\n                            return i.pop(), i.length && this._verifyEnd(n, a) && this._verifyChecksums(i) ? (i = i.slice(0, i.length - 2), null === (i = this._decodeExtended(i)) ? null : {\n                                code: i.join(\"\"),\n                                start: e.start,\n                                end: a,\n                                startInfo: e,\n                                decodedCodes: i,\n                                format: this.FORMAT\n                            }) : null;\n                        }\n                    }\n                ]), n;\n            }(k);\n            function st(t, e) {\n                var n = Object.keys(t);\n                if (Object.getOwnPropertySymbols) {\n                    var r = Object.getOwnPropertySymbols(t);\n                    e && (r = r.filter(function(e) {\n                        return Object.getOwnPropertyDescriptor(t, e).enumerable;\n                    })), n.push.apply(n, r);\n                }\n                return n;\n            }\n            function ft(t) {\n                for(var e = 1; e < arguments.length; e++){\n                    var n = null != arguments[e] ? arguments[e] : {};\n                    e % 2 ? st(Object(n), !0).forEach(function(e) {\n                        E()(t, e, n[e]);\n                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : st(Object(n)).forEach(function(e) {\n                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));\n                    });\n                }\n                return t;\n            }\n            function lt(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var dt = [\n                1,\n                1,\n                1\n            ], ht = [\n                1,\n                1,\n                1,\n                1,\n                1\n            ], vt = [\n                1,\n                1,\n                2\n            ], pt = [\n                [\n                    3,\n                    2,\n                    1,\n                    1\n                ],\n                [\n                    2,\n                    2,\n                    2,\n                    1\n                ],\n                [\n                    2,\n                    1,\n                    2,\n                    2\n                ],\n                [\n                    1,\n                    4,\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    1,\n                    3,\n                    2\n                ],\n                [\n                    1,\n                    2,\n                    3,\n                    1\n                ],\n                [\n                    1,\n                    1,\n                    1,\n                    4\n                ],\n                [\n                    1,\n                    3,\n                    1,\n                    2\n                ],\n                [\n                    1,\n                    2,\n                    1,\n                    3\n                ],\n                [\n                    3,\n                    1,\n                    1,\n                    2\n                ],\n                [\n                    1,\n                    1,\n                    2,\n                    3\n                ],\n                [\n                    1,\n                    2,\n                    2,\n                    2\n                ],\n                [\n                    2,\n                    2,\n                    1,\n                    2\n                ],\n                [\n                    1,\n                    1,\n                    4,\n                    1\n                ],\n                [\n                    2,\n                    3,\n                    1,\n                    1\n                ],\n                [\n                    1,\n                    3,\n                    2,\n                    1\n                ],\n                [\n                    4,\n                    1,\n                    1,\n                    1\n                ],\n                [\n                    2,\n                    1,\n                    3,\n                    1\n                ],\n                [\n                    3,\n                    1,\n                    2,\n                    1\n                ],\n                [\n                    2,\n                    1,\n                    1,\n                    3\n                ]\n            ], yt = [\n                0,\n                11,\n                13,\n                14,\n                19,\n                25,\n                28,\n                21,\n                22,\n                26\n            ], gt = function(t) {\n                b()(n, t);\n                var e = lt(n);\n                function n(t, r) {\n                    var o;\n                    return p()(this, n), o = e.call(this, u()({\n                        supplements: []\n                    }, t), r), E()(m()(o), \"FORMAT\", \"ean_13\"), E()(m()(o), \"SINGLE_CODE_ERROR\", .7), E()(m()(o), \"STOP_PATTERN\", [\n                        1,\n                        1,\n                        1\n                    ]), o;\n                }\n                return g()(n, [\n                    {\n                        key: \"_findPattern\",\n                        value: function(t, e, n, r) {\n                            var o = new Array(t.length).fill(0), i = {\n                                error: Number.MAX_VALUE,\n                                start: 0,\n                                end: 0\n                            }, a = 0;\n                            e || (e = this._nextSet(this._row));\n                            for(var u = !1, c = e; c < this._row.length; c++)if (this._row[c] ^ (n ? 1 : 0)) o[a] += 1;\n                            else {\n                                if (a === o.length - 1) {\n                                    var s = this._matchPattern(o, t);\n                                    if (s < .48 && i.error && s < i.error) return u = !0, i.error = s, i.start = c - o.reduce(function(t, e) {\n                                        return t + e;\n                                    }, 0), i.end = c, i;\n                                    if (r) {\n                                        for(var f = 0; f < o.length - 2; f++)o[f] = o[f + 2];\n                                        o[o.length - 2] = 0, o[o.length - 1] = 0, a--;\n                                    }\n                                } else a++;\n                                o[a] = 1, n = !n;\n                            }\n                            return u ? i : null;\n                        }\n                    },\n                    {\n                        key: \"_decodeCode\",\n                        value: function(t, e) {\n                            var n = [\n                                0,\n                                0,\n                                0,\n                                0\n                            ], r = t, o = {\n                                error: Number.MAX_VALUE,\n                                code: -1,\n                                start: t,\n                                end: t\n                            }, i = !this._row[r], a = 0;\n                            e || (e = pt.length);\n                            for(var u = r; u < this._row.length; u++)if (this._row[u] ^ (i ? 1 : 0)) n[a]++;\n                            else {\n                                if (a === n.length - 1) {\n                                    for(var c = 0; c < e; c++){\n                                        var s = this._matchPattern(n, pt[c]);\n                                        o.end = u, s < o.error && (o.code = c, o.error = s);\n                                    }\n                                    return o.error > .48 ? null : o;\n                                }\n                                n[++a] = 1, i = !i;\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_findStart\",\n                        value: function() {\n                            for(var t = this._nextSet(this._row), e = null; !e;){\n                                if (!(e = this._findPattern(dt, t, !1, !0))) return null;\n                                var n = e.start - (e.end - e.start);\n                                if (n >= 0 && this._matchRange(n, e.start, 0)) return e;\n                                t = e.end, e = null;\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_calculateFirstDigit\",\n                        value: function(t) {\n                            for(var e = 0; e < yt.length; e++)if (t === yt[e]) return e;\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_decodePayload\",\n                        value: function(t, e, n) {\n                            for(var r = ft({}, t), o = 0, i = 0; i < 6; i++){\n                                if (!(r = this._decodeCode(r.end))) return null;\n                                r.code >= 10 ? (r.code -= 10, o |= 1 << 5 - i) : o |= 0 << 5 - i, e.push(r.code), n.push(r);\n                            }\n                            var a = this._calculateFirstDigit(o);\n                            if (null === a) return null;\n                            e.unshift(a);\n                            var u = this._findPattern(ht, r.end, !0, !1);\n                            if (null === u || !u.end) return null;\n                            n.push(u);\n                            for(var c = 0; c < 6; c++){\n                                if (!(u = this._decodeCode(u.end, 10))) return null;\n                                n.push(u), e.push(u.code);\n                            }\n                            return u;\n                        }\n                    },\n                    {\n                        key: \"_verifyTrailingWhitespace\",\n                        value: function(t) {\n                            var e = t.end + (t.end - t.start);\n                            return e < this._row.length && this._matchRange(t.end, e, 0) ? t : null;\n                        }\n                    },\n                    {\n                        key: \"_findEnd\",\n                        value: function(t, e) {\n                            var n = this._findPattern(this.STOP_PATTERN, t, e, !1);\n                            return null !== n ? this._verifyTrailingWhitespace(n) : null;\n                        }\n                    },\n                    {\n                        key: \"_checksum\",\n                        value: function(t) {\n                            for(var e = 0, n = t.length - 2; n >= 0; n -= 2)e += t[n];\n                            e *= 3;\n                            for(var r = t.length - 1; r >= 0; r -= 2)e += t[r];\n                            return e % 10 == 0;\n                        }\n                    },\n                    {\n                        key: \"_decodeExtensions\",\n                        value: function(t) {\n                            var e = this._nextSet(this._row, t), n = this._findPattern(vt, e, !1, !1);\n                            if (null === n) return null;\n                            for(var r = 0; r < this.supplements.length; r++)try {\n                                var o = this.supplements[r].decode(this._row, n.end);\n                                if (null !== o) return {\n                                    code: o.code,\n                                    start: e,\n                                    startInfo: n,\n                                    end: o.end,\n                                    decodedCodes: o.decodedCodes,\n                                    format: this.supplements[r].FORMAT\n                                };\n                            } catch (t) {\n                                console.error(\"* decodeExtensions error in \", this.supplements[r], \": \", t);\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"decode\",\n                        value: function(t, e) {\n                            var n = new Array, r = new Array, o = {}, i = this._findStart();\n                            if (!i) return null;\n                            var a = {\n                                start: i.start,\n                                end: i.end\n                            };\n                            if (r.push(a), !(a = this._decodePayload(a, n, r))) return null;\n                            if (!(a = this._findEnd(a.end, !1))) return null;\n                            if (r.push(a), !this._checksum(n)) return null;\n                            if (this.supplements.length > 0) {\n                                var u = this._decodeExtensions(a.end);\n                                if (!u) return null;\n                                if (!u.decodedCodes) return null;\n                                var c = u.decodedCodes[u.decodedCodes.length - 1], s = {\n                                    start: c.start + ((c.end - c.start) / 2 | 0),\n                                    end: c.end\n                                };\n                                if (!this._verifyTrailingWhitespace(s)) return null;\n                                o = {\n                                    supplement: u,\n                                    code: n.join(\"\") + u.code\n                                };\n                            }\n                            return ft(ft({\n                                code: n.join(\"\"),\n                                start: i.start,\n                                end: a.end,\n                                startInfo: i,\n                                decodedCodes: r\n                            }, o), {}, {\n                                format: this.FORMAT\n                            });\n                        }\n                    }\n                ]), n;\n            }(k);\n            function xt(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var mt = function(t) {\n                b()(n, t);\n                var e = xt(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"FORMAT\", \"ean_2\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"decode\",\n                        value: function(t, e) {\n                            t && (this._row = t);\n                            var n = 0, r = e, o = this._row.length, i = [], a = [], u = null;\n                            if (void 0 === r) return null;\n                            for(var c = 0; c < 2 && r < o; c++){\n                                if (!(u = this._decodeCode(r))) return null;\n                                a.push(u), i.push(u.code % 10), u.code >= 10 && (n |= 1 << 1 - c), 1 !== c && (r = this._nextSet(this._row, u.end), r = this._nextUnset(this._row, r));\n                            }\n                            if (2 !== i.length || parseInt(i.join(\"\")) % 4 !== n) return null;\n                            var s = this._findStart();\n                            return {\n                                code: i.join(\"\"),\n                                decodedCodes: a,\n                                end: u.end,\n                                format: this.FORMAT,\n                                startInfo: s,\n                                start: s.start\n                            };\n                        }\n                    }\n                ]), n;\n            }(gt);\n            function _t(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var bt = [\n                24,\n                20,\n                18,\n                17,\n                12,\n                6,\n                3,\n                10,\n                9,\n                5\n            ];\n            var wt = function(t) {\n                b()(n, t);\n                var e = _t(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"FORMAT\", \"ean_5\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"decode\",\n                        value: function(t, e) {\n                            if (void 0 === e) return null;\n                            t && (this._row = t);\n                            for(var n = 0, r = e, o = this._row.length, i = null, a = [], u = [], c = 0; c < 5 && r < o; c++){\n                                if (!(i = this._decodeCode(r))) return null;\n                                u.push(i), a.push(i.code % 10), i.code >= 10 && (n |= 1 << 4 - c), 4 !== c && (r = this._nextSet(this._row, i.end), r = this._nextUnset(this._row, r));\n                            }\n                            if (5 !== a.length) return null;\n                            if (function(t) {\n                                for(var e = t.length, n = 0, r = e - 2; r >= 0; r -= 2)n += t[r];\n                                n *= 3;\n                                for(var o = e - 1; o >= 0; o -= 2)n += t[o];\n                                return (n *= 3) % 10;\n                            }(a) !== function(t) {\n                                for(var e = 0; e < 10; e++)if (t === bt[e]) return e;\n                                return null;\n                            }(n)) return null;\n                            var s = this._findStart();\n                            return {\n                                code: a.join(\"\"),\n                                decodedCodes: u,\n                                end: i.end,\n                                format: this.FORMAT,\n                                startInfo: s,\n                                start: s.start\n                            };\n                        }\n                    }\n                ]), n;\n            }(gt);\n            function Ot(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var Rt = function(t) {\n                b()(n, t);\n                var e = Ot(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"FORMAT\", \"ean_8\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"_decodePayload\",\n                        value: function(t, e, n) {\n                            for(var r = t, o = 0; o < 4; o++){\n                                if (!(r = this._decodeCode(r.end, 10))) return null;\n                                e.push(r.code), n.push(r);\n                            }\n                            if (null === (r = this._findPattern(ht, r.end, !0, !1))) return null;\n                            n.push(r);\n                            for(var i = 0; i < 4; i++){\n                                if (!(r = this._decodeCode(r.end, 10))) return null;\n                                n.push(r), e.push(r.code);\n                            }\n                            return r;\n                        }\n                    }\n                ]), n;\n            }(gt);\n            function Mt(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var Ct = function(t) {\n                b()(n, t);\n                var e = Mt(n);\n                function n(t) {\n                    var r;\n                    return p()(this, n), r = e.call(this, u()({\n                        normalizeBarSpaceWidth: !1\n                    }, t)), E()(m()(r), \"barSpaceRatio\", [\n                        1,\n                        1\n                    ]), E()(m()(r), \"SINGLE_CODE_ERROR\", .78), E()(m()(r), \"AVG_CODE_ERROR\", .38), E()(m()(r), \"START_PATTERN\", [\n                        1,\n                        1,\n                        1,\n                        1\n                    ]), E()(m()(r), \"STOP_PATTERN\", [\n                        1,\n                        1,\n                        3\n                    ]), E()(m()(r), \"CODE_PATTERN\", [\n                        [\n                            1,\n                            1,\n                            3,\n                            3,\n                            1\n                        ],\n                        [\n                            3,\n                            1,\n                            1,\n                            1,\n                            3\n                        ],\n                        [\n                            1,\n                            3,\n                            1,\n                            1,\n                            3\n                        ],\n                        [\n                            3,\n                            3,\n                            1,\n                            1,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            3,\n                            1,\n                            3\n                        ],\n                        [\n                            3,\n                            1,\n                            3,\n                            1,\n                            1\n                        ],\n                        [\n                            1,\n                            3,\n                            3,\n                            1,\n                            1\n                        ],\n                        [\n                            1,\n                            1,\n                            1,\n                            3,\n                            3\n                        ],\n                        [\n                            3,\n                            1,\n                            1,\n                            3,\n                            1\n                        ],\n                        [\n                            1,\n                            3,\n                            1,\n                            3,\n                            1\n                        ]\n                    ]), E()(m()(r), \"MAX_CORRECTION_FACTOR\", 5), E()(m()(r), \"FORMAT\", \"i2of5\"), t.normalizeBarSpaceWidth && (r.SINGLE_CODE_ERROR = .38, r.AVG_CODE_ERROR = .09), r.config = t, O()(r, m()(r));\n                }\n                return g()(n, [\n                    {\n                        key: \"_matchPattern\",\n                        value: function(t, e) {\n                            if (this.config.normalizeBarSpaceWidth) {\n                                for(var r = [\n                                    0,\n                                    0\n                                ], o = [\n                                    0,\n                                    0\n                                ], i = [\n                                    0,\n                                    0\n                                ], a = this.MAX_CORRECTION_FACTOR, u = 1 / a, c = 0; c < t.length; c++)r[c % 2] += t[c], o[c % 2] += e[c];\n                                i[0] = o[0] / r[0], i[1] = o[1] / r[1], i[0] = Math.max(Math.min(i[0], a), u), i[1] = Math.max(Math.min(i[1], a), u), this.barSpaceRatio = i;\n                                for(var s = 0; s < t.length; s++)t[s] *= this.barSpaceRatio[s % 2];\n                            }\n                            return G()(M()(n.prototype), \"_matchPattern\", this).call(this, t, e);\n                        }\n                    },\n                    {\n                        key: \"_findPattern\",\n                        value: function(t, e) {\n                            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], r = arguments.length > 3 && void 0 !== arguments[3] && arguments[3], o = new Array(t.length).fill(0), i = 0, a = {\n                                error: Number.MAX_VALUE,\n                                start: 0,\n                                end: 0\n                            }, u = this.AVG_CODE_ERROR;\n                            n = n || !1, r = r || !1, e || (e = this._nextSet(this._row));\n                            for(var c = e; c < this._row.length; c++)if (this._row[c] ^ (n ? 1 : 0)) o[i]++;\n                            else {\n                                if (i === o.length - 1) {\n                                    var s = o.reduce(function(t, e) {\n                                        return t + e;\n                                    }, 0), f = this._matchPattern(o, t);\n                                    if (f < u) return a.error = f, a.start = c - s, a.end = c, a;\n                                    if (!r) return null;\n                                    for(var l = 0; l < o.length - 2; l++)o[l] = o[l + 2];\n                                    o[o.length - 2] = 0, o[o.length - 1] = 0, i--;\n                                } else i++;\n                                o[i] = 1, n = !n;\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_findStart\",\n                        value: function() {\n                            for(var t = 0, e = this._nextSet(this._row), n = null, r = 1; !n;){\n                                if (!(n = this._findPattern(this.START_PATTERN, e, !1, !0))) return null;\n                                if (r = Math.floor((n.end - n.start) / 4), (t = n.start - 10 * r) >= 0 && this._matchRange(t, n.start, 0)) return n;\n                                e = n.end, n = null;\n                            }\n                            return null;\n                        }\n                    },\n                    {\n                        key: \"_verifyTrailingWhitespace\",\n                        value: function(t) {\n                            var e = t.end + (t.end - t.start) / 2;\n                            return e < this._row.length && this._matchRange(t.end, e, 0) ? t : null;\n                        }\n                    },\n                    {\n                        key: \"_findEnd\",\n                        value: function() {\n                            this._row.reverse();\n                            var t = this._findPattern(this.STOP_PATTERN);\n                            if (this._row.reverse(), null === t) return null;\n                            var e = t.start;\n                            return t.start = this._row.length - t.end, t.end = this._row.length - e, null !== t ? this._verifyTrailingWhitespace(t) : null;\n                        }\n                    },\n                    {\n                        key: \"_decodePair\",\n                        value: function(t) {\n                            for(var e = [], n = 0; n < t.length; n++){\n                                var r = this._decodeCode(t[n]);\n                                if (!r) return null;\n                                e.push(r);\n                            }\n                            return e;\n                        }\n                    },\n                    {\n                        key: \"_decodeCode\",\n                        value: function(t) {\n                            for(var e = this.AVG_CODE_ERROR, n = {\n                                error: Number.MAX_VALUE,\n                                code: -1,\n                                start: 0,\n                                end: 0\n                            }, r = 0; r < this.CODE_PATTERN.length; r++){\n                                var o = this._matchPattern(t, this.CODE_PATTERN[r]);\n                                o < n.error && (n.code = r, n.error = o);\n                            }\n                            return n.error < e ? n : null;\n                        }\n                    },\n                    {\n                        key: \"_decodePayload\",\n                        value: function(t, e, n) {\n                            for(var r = 0, o = t.length, i = [\n                                [\n                                    0,\n                                    0,\n                                    0,\n                                    0,\n                                    0\n                                ],\n                                [\n                                    0,\n                                    0,\n                                    0,\n                                    0,\n                                    0\n                                ]\n                            ], a = null; r < o;){\n                                for(var u = 0; u < 5; u++)i[0][u] = t[r] * this.barSpaceRatio[0], i[1][u] = t[r + 1] * this.barSpaceRatio[1], r += 2;\n                                if (!(a = this._decodePair(i))) return null;\n                                for(var c = 0; c < a.length; c++)e.push(a[c].code + \"\"), n.push(a[c]);\n                            }\n                            return a;\n                        }\n                    },\n                    {\n                        key: \"_verifyCounterLength\",\n                        value: function(t) {\n                            return t.length % 10 == 0;\n                        }\n                    },\n                    {\n                        key: \"decode\",\n                        value: function(t, e) {\n                            var n = new Array, r = new Array, o = this._findStart();\n                            if (!o) return null;\n                            r.push(o);\n                            var i = this._findEnd();\n                            if (!i) return null;\n                            var a = this._fillCounters(o.end, i.start, !1);\n                            return this._verifyCounterLength(a) && this._decodePayload(a, n, r) ? n.length % 2 != 0 || n.length < 6 ? null : (r.push(i), {\n                                code: n.join(\"\"),\n                                start: o.start,\n                                end: i.end,\n                                startInfo: o,\n                                decodedCodes: r,\n                                format: this.FORMAT\n                            }) : null;\n                        }\n                    }\n                ]), n;\n            }(k);\n            function Et(t, e) {\n                var n = Object.keys(t);\n                if (Object.getOwnPropertySymbols) {\n                    var r = Object.getOwnPropertySymbols(t);\n                    e && (r = r.filter(function(e) {\n                        return Object.getOwnPropertyDescriptor(t, e).enumerable;\n                    })), n.push.apply(n, r);\n                }\n                return n;\n            }\n            function At(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var St = function(t) {\n                b()(n, t);\n                var e = At(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"CODE_FREQUENCY\", [\n                        [\n                            56,\n                            52,\n                            50,\n                            49,\n                            44,\n                            38,\n                            35,\n                            42,\n                            41,\n                            37\n                        ],\n                        [\n                            7,\n                            11,\n                            13,\n                            14,\n                            19,\n                            25,\n                            28,\n                            21,\n                            22,\n                            26\n                        ]\n                    ]), E()(m()(t), \"STOP_PATTERN\", [\n                        1 / 6 * 7,\n                        1 / 6 * 7,\n                        1 / 6 * 7,\n                        1 / 6 * 7,\n                        1 / 6 * 7,\n                        1 / 6 * 7\n                    ]), E()(m()(t), \"FORMAT\", \"upc_e\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"_decodePayload\",\n                        value: function(t, e, n) {\n                            for(var r = function(t) {\n                                for(var e = 1; e < arguments.length; e++){\n                                    var n = null != arguments[e] ? arguments[e] : {};\n                                    e % 2 ? Et(Object(n), !0).forEach(function(e) {\n                                        E()(t, e, n[e]);\n                                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Et(Object(n)).forEach(function(e) {\n                                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));\n                                    });\n                                }\n                                return t;\n                            }({}, t), o = 0, i = 0; i < 6; i++){\n                                if (!(r = this._decodeCode(r.end))) return null;\n                                r.code >= 10 && (r.code = r.code - 10, o |= 1 << 5 - i), e.push(r.code), n.push(r);\n                            }\n                            return this._determineParity(o, e) ? r : null;\n                        }\n                    },\n                    {\n                        key: \"_determineParity\",\n                        value: function(t, e) {\n                            for(var n = 0; n < this.CODE_FREQUENCY.length; n++)for(var r = 0; r < this.CODE_FREQUENCY[n].length; r++)if (t === this.CODE_FREQUENCY[n][r]) return e.unshift(n), e.push(r), !0;\n                            return !1;\n                        }\n                    },\n                    {\n                        key: \"_convertToUPCA\",\n                        value: function(t) {\n                            var e = [\n                                t[0]\n                            ], n = t[t.length - 2];\n                            return (e = n <= 2 ? e.concat(t.slice(1, 3)).concat([\n                                n,\n                                0,\n                                0,\n                                0,\n                                0\n                            ]).concat(t.slice(3, 6)) : 3 === n ? e.concat(t.slice(1, 4)).concat([\n                                0,\n                                0,\n                                0,\n                                0,\n                                0\n                            ]).concat(t.slice(4, 6)) : 4 === n ? e.concat(t.slice(1, 5)).concat([\n                                0,\n                                0,\n                                0,\n                                0,\n                                0,\n                                t[5]\n                            ]) : e.concat(t.slice(1, 6)).concat([\n                                0,\n                                0,\n                                0,\n                                0,\n                                n\n                            ])).push(t[t.length - 1]), e;\n                        }\n                    },\n                    {\n                        key: \"_checksum\",\n                        value: function(t) {\n                            return G()(M()(n.prototype), \"_checksum\", this).call(this, this._convertToUPCA(t));\n                        }\n                    },\n                    {\n                        key: \"_findEnd\",\n                        value: function(t, e) {\n                            return G()(M()(n.prototype), \"_findEnd\", this).call(this, t, !0);\n                        }\n                    },\n                    {\n                        key: \"_verifyTrailingWhitespace\",\n                        value: function(t) {\n                            var e = t.end + (t.end - t.start) / 2;\n                            return e < this._row.length && this._matchRange(t.end, e, 0) ? t : null;\n                        }\n                    }\n                ]), n;\n            }(gt);\n            function kt(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var Pt = function(t) {\n                b()(n, t);\n                var e = kt(n);\n                function n() {\n                    var t;\n                    p()(this, n);\n                    for(var r = arguments.length, o = new Array(r), i = 0; i < r; i++)o[i] = arguments[i];\n                    return t = e.call.apply(e, [\n                        this\n                    ].concat(o)), E()(m()(t), \"FORMAT\", \"upc_a\"), t;\n                }\n                return g()(n, [\n                    {\n                        key: \"decode\",\n                        value: function(t, e) {\n                            var n = gt.prototype.decode.call(this);\n                            return n && n.code && 13 === n.code.length && \"0\" === n.code.charAt(0) ? (n.code = n.code.substring(1), n) : null;\n                        }\n                    }\n                ]), n;\n            }(gt), Tt = {}, Dt = {\n                UP: 1,\n                DOWN: -1\n            };\n            Tt.getBarcodeLine = function(t, e, n) {\n                var r, o, i, a, u, c = 0 | e.x, s = 0 | e.y, f = 0 | n.x, l = 0 | n.y, d = Math.abs(l - s) > Math.abs(f - c), h = [], v = t.data, p = t.size.x, y = 255, g = 0;\n                function x(t, e) {\n                    u = v[e * p + t], y = u < y ? u : y, g = u > g ? u : g, h.push(u);\n                }\n                d && (i = c, c = s, s = i, i = f, f = l, l = i), c > f && (i = c, c = f, f = i, i = s, s = l, l = i);\n                var m = f - c, _ = Math.abs(l - s);\n                r = m / 2 | 0, o = s;\n                var b = s < l ? 1 : -1;\n                for(a = c; a < f; a++)d ? x(o, a) : x(a, o), (r -= _) < 0 && (o += b, r += m);\n                return {\n                    line: h,\n                    min: y,\n                    max: g\n                };\n            }, Tt.toBinaryLine = function(t) {\n                var e, n, r, o, i, a, u = t.min, c = t.max, s = t.line, f = u + (c - u) / 2, l = [], d = (c - u) / 12, h = -d;\n                for(r = s[0] > f ? Dt.UP : Dt.DOWN, l.push({\n                    pos: 0,\n                    val: s[0]\n                }), i = 0; i < s.length - 2; i++)r !== (o = (e = s[i + 1] - s[i]) + (n = s[i + 2] - s[i + 1]) < h && s[i + 1] < 1.5 * f ? Dt.DOWN : e + n > d && s[i + 1] > .5 * f ? Dt.UP : r) && (l.push({\n                    pos: i,\n                    val: s[i]\n                }), r = o);\n                for(l.push({\n                    pos: s.length,\n                    val: s[s.length - 1]\n                }), a = l[0].pos; a < l[1].pos; a++)s[a] = s[a] > f ? 0 : 1;\n                for(i = 1; i < l.length - 1; i++)for(d = l[i + 1].val > l[i].val ? l[i].val + (l[i + 1].val - l[i].val) / 3 * 2 | 0 : l[i + 1].val + (l[i].val - l[i + 1].val) / 3 | 0, a = l[i].pos; a < l[i + 1].pos; a++)s[a] = s[a] > d ? 0 : 1;\n                return {\n                    line: s,\n                    threshold: d\n                };\n            }, Tt.debug = {\n                printFrequency: function(t, e) {\n                    var n, r = e.getContext(\"2d\");\n                    for(e.width = t.length, e.height = 256, r.beginPath(), r.strokeStyle = \"blue\", n = 0; n < t.length; n++)r.moveTo(n, 255), r.lineTo(n, 255 - t[n]);\n                    r.stroke(), r.closePath();\n                },\n                printPattern: function(t, e) {\n                    var n, r = e.getContext(\"2d\");\n                    for(e.width = t.length, r.fillColor = \"black\", n = 0; n < t.length; n++)1 === t[n] && r.fillRect(n, 0, 1, 100);\n                }\n            };\n            var jt = Tt;\n            function It(t, e) {\n                var n = \"undefined\" != typeof Symbol && t[Symbol.iterator] || t[\"@@iterator\"];\n                if (!n) {\n                    if (Array.isArray(t) || (n = function(t, e) {\n                        if (!t) return;\n                        if (\"string\" == typeof t) return zt(t, e);\n                        var n = Object.prototype.toString.call(t).slice(8, -1);\n                        \"Object\" === n && t.constructor && (n = t.constructor.name);\n                        if (\"Map\" === n || \"Set\" === n) return Array.from(t);\n                        if (\"Arguments\" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return zt(t, e);\n                    }(t)) || e && t && \"number\" == typeof t.length) {\n                        n && (t = n);\n                        var r = 0, o = function() {};\n                        return {\n                            s: o,\n                            n: function() {\n                                return r >= t.length ? {\n                                    done: !0\n                                } : {\n                                    done: !1,\n                                    value: t[r++]\n                                };\n                            },\n                            e: function(t) {\n                                throw t;\n                            },\n                            f: o\n                        };\n                    }\n                    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n                }\n                var i, a = !0, u = !1;\n                return {\n                    s: function() {\n                        n = n.call(t);\n                    },\n                    n: function() {\n                        var t = n.next();\n                        return a = t.done, t;\n                    },\n                    e: function(t) {\n                        u = !0, i = t;\n                    },\n                    f: function() {\n                        try {\n                            a || null == n.return || n.return();\n                        } finally{\n                            if (u) throw i;\n                        }\n                    }\n                };\n            }\n            function zt(t, e) {\n                (null == e || e > t.length) && (e = t.length);\n                for(var n = 0, r = new Array(e); n < e; n++)r[n] = t[n];\n                return r;\n            }\n            var Ut = {\n                code_128_reader: q,\n                ean_reader: gt,\n                ean_5_reader: wt,\n                ean_2_reader: mt,\n                ean_8_reader: Rt,\n                code_39_reader: Z,\n                code_39_vin_reader: ot,\n                codabar_reader: B,\n                upc_reader: Pt,\n                upc_e_reader: St,\n                i2of5_reader: Ct,\n                \"2of5_reader\": z,\n                code_93_reader: ct,\n                code_32_reader: tt\n            }, Lt = {\n                registerReader: function(t, e) {\n                    Ut[t] = e;\n                },\n                create: function(t, e) {\n                    var n = {\n                        frequency: null,\n                        pattern: null,\n                        overlay: null\n                    }, r = [];\n                    function o() {\n                        t.readers.forEach(function(t) {\n                            var e, n = {}, o = [];\n                            \"object\" === i()(t) ? (e = t.format, n = t.config) : \"string\" == typeof t && (e = t), n.supplements && (o = n.supplements.map(function(t) {\n                                return new Ut[t];\n                            }));\n                            try {\n                                var a = new Ut[e](n, o);\n                                r.push(a);\n                            } catch (t) {\n                                throw console.error(\"* Error constructing reader \", e, t), t;\n                            }\n                        });\n                    }\n                    function a(t) {\n                        var n, o = null, i = jt.getBarcodeLine(e, t[0], t[1]);\n                        for(jt.toBinaryLine(i), n = 0; n < r.length && null === o; n++)o = r[n].decodePattern(i.line);\n                        return null === o ? null : {\n                            codeResult: o,\n                            barcodeLine: i\n                        };\n                    }\n                    function u(t) {\n                        return c.apply(this, arguments);\n                    }\n                    function c() {\n                        return (c = f()(d.a.mark(function t(e) {\n                            var n, o, i, a;\n                            return d.a.wrap(function(t) {\n                                for(;;)switch(t.prev = t.next){\n                                    case 0:\n                                        n = null, o = It(r), t.prev = 2, o.s();\n                                    case 4:\n                                        if ((i = o.n()).done) {\n                                            t.next = 14;\n                                            break;\n                                        }\n                                        if (!(a = i.value).decodeImage) {\n                                            t.next = 12;\n                                            break;\n                                        }\n                                        return t.next = 9, a.decodeImage(e);\n                                    case 9:\n                                        if (!(n = t.sent)) {\n                                            t.next = 12;\n                                            break;\n                                        }\n                                        return t.abrupt(\"break\", 14);\n                                    case 12:\n                                        t.next = 4;\n                                        break;\n                                    case 14:\n                                        t.next = 19;\n                                        break;\n                                    case 16:\n                                        t.prev = 16, t.t0 = t.catch(2), o.e(t.t0);\n                                    case 19:\n                                        return t.prev = 19, o.f(), t.finish(19);\n                                    case 22:\n                                        return t.abrupt(\"return\", n);\n                                    case 23:\n                                    case \"end\":\n                                        return t.stop();\n                                }\n                            }, t, null, [\n                                [\n                                    2,\n                                    16,\n                                    19,\n                                    22\n                                ]\n                            ]);\n                        }))).apply(this, arguments);\n                    }\n                    function s(t) {\n                        var r, o;\n                        n.overlay;\n                        var i = function(t) {\n                            return Math.sqrt(Math.pow(Math.abs(t[1].y - t[0].y), 2) + Math.pow(Math.abs(t[1].x - t[0].x), 2));\n                        }(r = function(t) {\n                            return [\n                                {\n                                    x: (t[1][0] - t[0][0]) / 2 + t[0][0],\n                                    y: (t[1][1] - t[0][1]) / 2 + t[0][1]\n                                },\n                                {\n                                    x: (t[3][0] - t[2][0]) / 2 + t[2][0],\n                                    y: (t[3][1] - t[2][1]) / 2 + t[2][1]\n                                }\n                            ];\n                        }(t)), u = Math.atan2(r[1].y - r[0].y, r[1].x - r[0].x);\n                        return null === (r = function(t, n, r) {\n                            function o(e) {\n                                var r = e * Math.sin(n), o = e * Math.cos(n);\n                                t[0].y -= r, t[0].x -= o, t[1].y += r, t[1].x += o;\n                            }\n                            for(o(r); r > 1 && (!e.inImageWithBorder(t[0]) || !e.inImageWithBorder(t[1]));)o(-(r -= Math.ceil(r / 2)));\n                            return t;\n                        }(r, u, Math.floor(.1 * i))) ? null : (null === (o = a(r)) && (o = function(t, e, n) {\n                            var r, o, i, u = Math.sqrt(Math.pow(t[1][0] - t[0][0], 2) + Math.pow(t[1][1] - t[0][1], 2)), c = null, s = Math.sin(n), f = Math.cos(n);\n                            for(r = 1; r < 16 && null === c; r++)i = {\n                                y: (o = u / 16 * r * (r % 2 == 0 ? -1 : 1)) * s,\n                                x: o * f\n                            }, e[0].y += i.x, e[0].x -= i.y, e[1].y += i.x, e[1].x -= i.y, c = a(e);\n                            return c;\n                        }(t, r, u)), null === o ? null : {\n                            codeResult: o.codeResult,\n                            line: r,\n                            angle: u,\n                            pattern: o.barcodeLine.line,\n                            threshold: o.barcodeLine.threshold\n                        });\n                    }\n                    return o(), {\n                        decodeFromBoundingBox: function(t) {\n                            return s(t);\n                        },\n                        decodeFromBoundingBoxes: function(e) {\n                            var n, r, o = [], i = t.multiple;\n                            for(n = 0; n < e.length; n++){\n                                var a = e[n];\n                                if ((r = s(a) || {}).box = a, i) o.push(r);\n                                else if (r.codeResult) return r;\n                            }\n                            return {\n                                barcodes: o\n                            };\n                        },\n                        decodeFromImage: function(t) {\n                            return f()(d.a.mark(function e() {\n                                var n;\n                                return d.a.wrap(function(e) {\n                                    for(;;)switch(e.prev = e.next){\n                                        case 0:\n                                            return e.next = 2, u(t);\n                                        case 2:\n                                            return n = e.sent, e.abrupt(\"return\", n);\n                                        case 4:\n                                        case \"end\":\n                                            return e.stop();\n                                    }\n                                }, e);\n                            }))();\n                        },\n                        registerReader: function(t, e) {\n                            if (Ut[t]) throw new Error(\"cannot register existing reader\", t);\n                            Ut[t] = e;\n                        },\n                        setReaders: function(e) {\n                            t.readers = e, r.length = 0, o();\n                        }\n                    };\n                }\n            }, Nt = function() {\n                var t = {};\n                function e(e) {\n                    return t[e] || (t[e] = {\n                        subscribers: []\n                    }), t[e];\n                }\n                function n(t, e) {\n                    t.async ? setTimeout(function() {\n                        t.callback(e);\n                    }, 4) : t.callback(e);\n                }\n                function r(t, n, r) {\n                    var o;\n                    if (\"function\" == typeof n) o = {\n                        callback: n,\n                        async: r\n                    };\n                    else if (!(o = n).callback) throw new Error(\"Callback was not specified on options\");\n                    e(t).subscribers.push(o);\n                }\n                return {\n                    subscribe: function(t, e, n) {\n                        return r(t, e, n);\n                    },\n                    publish: function(t, r) {\n                        var o = e(t), i = o.subscribers;\n                        i.filter(function(t) {\n                            return !!t.once;\n                        }).forEach(function(t) {\n                            n(t, r);\n                        }), o.subscribers = i.filter(function(t) {\n                            return !t.once;\n                        }), o.subscribers.forEach(function(t) {\n                            n(t, r);\n                        });\n                    },\n                    once: function(t, e) {\n                        var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n                        r(t, {\n                            callback: e,\n                            async: n,\n                            once: !0\n                        });\n                    },\n                    unsubscribe: function(n, r) {\n                        if (n) {\n                            var o = e(n);\n                            o.subscribers = o && r ? o.subscribers.filter(function(t) {\n                                return t.callback !== r;\n                            }) : [];\n                        } else t = {};\n                    }\n                };\n            }(), Ft = n(63), Bt = n.n(Ft), Wt = n(64);\n            function qt(t) {\n                var e = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (t) {\n                        return !1;\n                    }\n                }();\n                return function() {\n                    var n, r = M()(t);\n                    if (e) {\n                        var o = M()(this).constructor;\n                        n = Reflect.construct(r, arguments, o);\n                    } else n = r.apply(this, arguments);\n                    return O()(this, n);\n                };\n            }\n            var Vt, Gt = function(t) {\n                b()(n, t);\n                var e = qt(n);\n                function n(t, r) {\n                    var o;\n                    return p()(this, n), o = e.call(this, t), E()(m()(o), \"code\", void 0), o.code = r, Object.setPrototypeOf(m()(o), n.prototype), o;\n                }\n                return g()(n);\n            }(n.n(Wt)()(Error)), Ht = \"This may mean that the user has declined camera access, or the browser does not support media APIs. If you are running in iOS, you must use Safari.\";\n            function Xt() {\n                try {\n                    return navigator.mediaDevices.enumerateDevices();\n                } catch (e) {\n                    var t = new Gt(\"enumerateDevices is not defined. \".concat(Ht), -1);\n                    return Promise.reject(t);\n                }\n            }\n            function Qt(t) {\n                try {\n                    return navigator.mediaDevices.getUserMedia(t);\n                } catch (t) {\n                    var e = new Gt(\"getUserMedia is not defined. \".concat(Ht), -1);\n                    return Promise.reject(e);\n                }\n            }\n            function Yt(t) {\n                return new Promise(function(e, n) {\n                    var r = 10;\n                    !function o() {\n                        r > 0 ? t.videoWidth > 10 && t.videoHeight > 10 ? e() : window.setTimeout(o, 500) : n(new Gt(\"Unable to play video stream. Is webcam working?\", -1)), r--;\n                    }();\n                });\n            }\n            function $t(t, e) {\n                return Zt.apply(this, arguments);\n            }\n            function Zt() {\n                return (Zt = f()(d.a.mark(function t(e, n) {\n                    var r;\n                    return d.a.wrap(function(t) {\n                        for(;;)switch(t.prev = t.next){\n                            case 0:\n                                return t.next = 2, Qt(n);\n                            case 2:\n                                if (r = t.sent, Vt = r, !e) {\n                                    t.next = 11;\n                                    break;\n                                }\n                                return e.setAttribute(\"autoplay\", \"true\"), e.setAttribute(\"muted\", \"true\"), e.setAttribute(\"playsinline\", \"true\"), e.srcObject = r, e.addEventListener(\"loadedmetadata\", function() {\n                                    e.play().catch(function(t) {\n                                        console.warn(\"* Error while trying to play video stream:\", t);\n                                    });\n                                }), t.abrupt(\"return\", Yt(e));\n                            case 11:\n                                return t.abrupt(\"return\", Promise.resolve());\n                            case 12:\n                            case \"end\":\n                                return t.stop();\n                        }\n                    }, t);\n                }))).apply(this, arguments);\n            }\n            function Kt(t) {\n                var e = Bt()(t, [\n                    \"width\",\n                    \"height\",\n                    \"facingMode\",\n                    \"aspectRatio\",\n                    \"deviceId\"\n                ]);\n                return void 0 !== t.minAspectRatio && t.minAspectRatio > 0 && (e.aspectRatio = t.minAspectRatio, console.log(\"WARNING: Constraint 'minAspectRatio' is deprecated; Use 'aspectRatio' instead\")), void 0 !== t.facing && (e.facingMode = t.facing, console.log(\"WARNING: Constraint 'facing' is deprecated. Use 'facingMode' instead'\")), e;\n            }\n            function Jt() {\n                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, e = Kt(t);\n                return e && e.deviceId && e.facingMode && delete e.facingMode, Promise.resolve({\n                    audio: !1,\n                    video: e\n                });\n            }\n            function te() {\n                return (te = f()(d.a.mark(function t() {\n                    var e;\n                    return d.a.wrap(function(t) {\n                        for(;;)switch(t.prev = t.next){\n                            case 0:\n                                return t.next = 2, Xt();\n                            case 2:\n                                return e = t.sent, t.abrupt(\"return\", e.filter(function(t) {\n                                    return \"videoinput\" === t.kind;\n                                }));\n                            case 4:\n                            case \"end\":\n                                return t.stop();\n                        }\n                    }, t);\n                }))).apply(this, arguments);\n            }\n            function ee() {\n                if (!Vt) return null;\n                var t = Vt.getVideoTracks();\n                return t && null != t && t.length ? t[0] : null;\n            }\n            var ne = {\n                requestedVideoElement: null,\n                request: function(t, e) {\n                    return f()(d.a.mark(function n() {\n                        var r;\n                        return d.a.wrap(function(n) {\n                            for(;;)switch(n.prev = n.next){\n                                case 0:\n                                    return ne.requestedVideoElement = t, n.next = 3, Jt(e);\n                                case 3:\n                                    return r = n.sent, n.abrupt(\"return\", $t(t, r));\n                                case 5:\n                                case \"end\":\n                                    return n.stop();\n                            }\n                        }, n);\n                    }))();\n                },\n                release: function() {\n                    var t = Vt && Vt.getVideoTracks();\n                    return null !== ne.requestedVideoElement && ne.requestedVideoElement.pause(), new Promise(function(e) {\n                        setTimeout(function() {\n                            t && t.length && t.forEach(function(t) {\n                                return t.stop();\n                            }), Vt = null, ne.requestedVideoElement = null, e();\n                        }, 0);\n                    });\n                },\n                enumerateVideoDevices: function() {\n                    return te.apply(this, arguments);\n                },\n                getActiveStreamLabel: function() {\n                    var t = ee();\n                    return t ? t.label : \"\";\n                },\n                getActiveTrack: ee,\n                disableTorch: function() {\n                    return f()(d.a.mark(function t() {\n                        var e;\n                        return d.a.wrap(function(t) {\n                            for(;;)switch(t.prev = t.next){\n                                case 0:\n                                    if (!(e = ee())) {\n                                        t.next = 11;\n                                        break;\n                                    }\n                                    return t.prev = 2, t.next = 5, e.applyConstraints({\n                                        advanced: [\n                                            {\n                                                torch: !1\n                                            }\n                                        ]\n                                    });\n                                case 5:\n                                    t.next = 11;\n                                    break;\n                                case 7:\n                                    throw t.prev = 7, t.t0 = t.catch(2), t.t0 instanceof OverconstrainedError && console.warn(\"quagga2/CameraAccess: Torch not supported on this device\"), t.t0;\n                                case 11:\n                                case \"end\":\n                                    return t.stop();\n                            }\n                        }, t, null, [\n                            [\n                                2,\n                                7\n                            ]\n                        ]);\n                    }))();\n                },\n                enableTorch: function() {\n                    return f()(d.a.mark(function t() {\n                        var e;\n                        return d.a.wrap(function(t) {\n                            for(;;)switch(t.prev = t.next){\n                                case 0:\n                                    if (!(e = ee())) {\n                                        t.next = 11;\n                                        break;\n                                    }\n                                    return t.prev = 2, t.next = 5, e.applyConstraints({\n                                        advanced: [\n                                            {\n                                                torch: !0\n                                            }\n                                        ]\n                                    });\n                                case 5:\n                                    t.next = 11;\n                                    break;\n                                case 7:\n                                    throw t.prev = 7, t.t0 = t.catch(2), t.t0 instanceof OverconstrainedError && console.warn(\"quagga2/CameraAccess: Torch not supported on this device\"), t.t0;\n                                case 11:\n                                case \"end\":\n                                    return t.stop();\n                            }\n                        }, t, null, [\n                            [\n                                2,\n                                7\n                            ]\n                        ]);\n                    }))();\n                }\n            }, re = ne;\n            var oe = {\n                create: function(t) {\n                    var e, n = document.createElement(\"canvas\"), r = n.getContext(\"2d\", {\n                        willReadFrequently: !!t.willReadFrequently\n                    }), o = [], i = null !== (e = t.capacity) && void 0 !== e ? e : 20, a = !0 === t.capture;\n                    function u(e) {\n                        return !!i && e && !function(t, e) {\n                            return e && e.some(function(e) {\n                                return Object.keys(e).every(function(n) {\n                                    return e[n] === t[n];\n                                });\n                            });\n                        }(e, t.blacklist) && function(t, e) {\n                            return \"function\" != typeof e || e(t);\n                        }(e, t.filter);\n                    }\n                    return {\n                        addResult: function(t, e, c) {\n                            var s = {};\n                            u(c) && (i--, s.codeResult = c, a && (n.width = e.x, n.height = e.y, h.a.drawImage(t, e, r), s.frame = n.toDataURL()), o.push(s));\n                        },\n                        getResults: function() {\n                            return o;\n                        }\n                    };\n                }\n            }, ie = {\n                inputStream: {\n                    name: \"Live\",\n                    type: \"LiveStream\",\n                    constraints: {\n                        width: 640,\n                        height: 480,\n                        facingMode: \"environment\"\n                    },\n                    area: {\n                        top: \"0%\",\n                        right: \"0%\",\n                        left: \"0%\",\n                        bottom: \"0%\"\n                    },\n                    singleChannel: !1\n                },\n                locate: !0,\n                numOfWorkers: 4,\n                decoder: {\n                    readers: [\n                        \"code_128_reader\"\n                    ]\n                },\n                locator: {\n                    halfSample: !0,\n                    patchSize: \"medium\"\n                }\n            }, ae = n(5), ue = n(10), ce = Math.PI / 180;\n            var se = {\n                create: function(t, e) {\n                    var n, r = {}, o = t.getConfig(), i = (Object(ue.h)(t.getRealWidth(), t.getRealHeight()), t.getCanvasSize()), a = Object(ue.h)(t.getWidth(), t.getHeight()), u = t.getTopRight(), c = u.x, s = u.y, f = null, l = null, d = o.willReadFrequently;\n                    return (n = e || document.createElement(\"canvas\")).width = i.x, n.height = i.y, console.warn(\"*** frame_grabber_browser: willReadFrequently=\", d, \"canvas=\", n), f = n.getContext(\"2d\", {\n                        willReadFrequently: !!d\n                    }), l = new Uint8Array(a.x * a.y), r.attachData = function(t) {\n                        l = t;\n                    }, r.getData = function() {\n                        return l;\n                    }, r.grab = function() {\n                        var e, r = o.halfSample, u = t.getFrame(), d = u, h = 0;\n                        if (d) {\n                            if (function(t, e) {\n                                t.width !== e.x && (t.width = e.x), t.height !== e.y && (t.height = e.y);\n                            }(n, i), \"ImageStream\" === o.type && (d = u.img, u.tags && u.tags.orientation)) switch(u.tags.orientation){\n                                case 6:\n                                    h = 90 * ce;\n                                    break;\n                                case 8:\n                                    h = -90 * ce;\n                            }\n                            return 0 !== h ? (f.translate(i.x / 2, i.y / 2), f.rotate(h), f.drawImage(d, -i.y / 2, -i.x / 2, i.y, i.x), f.rotate(-h), f.translate(-i.x / 2, -i.y / 2)) : f.drawImage(d, 0, 0, i.x, i.y), e = f.getImageData(c, s, a.x, a.y).data, r ? Object(ue.e)(e, a, l) : Object(ue.c)(e, l, o), !0;\n                        }\n                        return !1;\n                    }, r.getSize = function() {\n                        return a;\n                    }, r;\n                }\n            }, fe = se, le = {\n                274: \"orientation\"\n            }, de = Object.keys(le).map(function(t) {\n                return le[t];\n            });\n            function he(t) {\n                return new Promise(function(e) {\n                    var n = new FileReader;\n                    n.onload = function(t) {\n                        return e(t.target.result);\n                    }, n.readAsArrayBuffer(t);\n                });\n            }\n            function ve(t) {\n                return new Promise(function(e, n) {\n                    var r = new XMLHttpRequest;\n                    r.open(\"GET\", t, !0), r.responseType = \"blob\", r.onreadystatechange = function() {\n                        r.readyState !== XMLHttpRequest.DONE || 200 !== r.status && 0 !== r.status || e(this.response);\n                    }, r.onerror = n, r.send();\n                });\n            }\n            function pe(t) {\n                var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : de, n = new DataView(t), r = t.byteLength, o = e.reduce(function(t, e) {\n                    var n = Object.keys(le).filter(function(t) {\n                        return le[t] === e;\n                    })[0];\n                    return n && (t[n] = e), t;\n                }, {}), i = 2;\n                if (255 !== n.getUint8(0) || 216 !== n.getUint8(1)) return !1;\n                for(; i < r;){\n                    if (255 !== n.getUint8(i)) return !1;\n                    if (225 === n.getUint8(i + 1)) return ye(n, i + 4, o);\n                    i += 2 + n.getUint16(i + 2);\n                }\n                return !1;\n            }\n            function ye(t, e, n) {\n                if (\"Exif\" !== function(t, e, n) {\n                    for(var r = \"\", o = e; o < e + n; o++)r += String.fromCharCode(t.getUint8(o));\n                    return r;\n                }(t, e, 4)) return !1;\n                var r, o = e + 6;\n                if (18761 === t.getUint16(o)) r = !1;\n                else {\n                    if (19789 !== t.getUint16(o)) return !1;\n                    r = !0;\n                }\n                if (42 !== t.getUint16(o + 2, !r)) return !1;\n                var i = t.getUint32(o + 4, !r);\n                return !(i < 8) && function(t, e, n, r, o) {\n                    for(var i = t.getUint16(n, !o), a = {}, u = 0; u < i; u++){\n                        var c = n + 12 * u + 2, s = r[t.getUint16(c, !o)];\n                        s && (a[s] = ge(t, c, e, n, o));\n                    }\n                    return a;\n                }(t, o, o + i, n, r);\n            }\n            function ge(t, e, n, r, o) {\n                var i = t.getUint16(e + 2, !o), a = t.getUint32(e + 4, !o);\n                switch(i){\n                    case 3:\n                        if (1 === a) return t.getUint16(e + 8, !o);\n                }\n                return null;\n            }\n            var xe = {};\n            function me(t, e) {\n                t.onload = function() {\n                    e.loaded(this);\n                };\n            }\n            xe.load = function(t, e, n, r, o) {\n                var i, a, u, c = new Array(r), s = new Array(c.length);\n                if (!1 === o) c[0] = t;\n                else for(i = 0; i < c.length; i++)u = n + i, c[i] = \"\".concat(t, \"image-\").concat(\"00\".concat(u).slice(-3), \".jpg\");\n                for(s.notLoaded = [], s.addImage = function(t) {\n                    s.notLoaded.push(t);\n                }, s.loaded = function(n) {\n                    for(var r = s.notLoaded, i = 0; i < r.length; i++)if (r[i] === n) {\n                        r.splice(i, 1);\n                        for(var a = 0; a < c.length; a++){\n                            var u = c[a].substr(c[a].lastIndexOf(\"/\"));\n                            if (-1 !== n.src.lastIndexOf(u)) {\n                                s[a] = {\n                                    img: n\n                                };\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                    0 === r.length && (!1 === o ? (function(t) {\n                        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : de;\n                        return /^blob:/i.test(t) ? ve(t).then(he).then(function(t) {\n                            return pe(t, e);\n                        }) : Promise.resolve(null);\n                    })(t, [\n                        \"orientation\"\n                    ]).then(function(t) {\n                        s[0].tags = t, e(s);\n                    }).catch(function(t) {\n                        console.log(t), e(s);\n                    }) : e(s));\n                }, i = 0; i < c.length; i++)a = new Image, s.addImage(a), me(a, s), a.src = c[i];\n            };\n            var _e = xe, be = {\n                createVideoStream: function(t) {\n                    console.warn(\"**** InputStreamBrowser createVideoStream\");\n                    var e, n, r = null, o = [\n                        \"canrecord\",\n                        \"ended\"\n                    ], i = {}, a = {\n                        x: 0,\n                        y: 0,\n                        type: \"Point\"\n                    }, u = {\n                        x: 0,\n                        y: 0,\n                        type: \"XYSize\"\n                    };\n                    var c = {\n                        getRealWidth: function() {\n                            return t.videoWidth;\n                        },\n                        getRealHeight: function() {\n                            return t.videoHeight;\n                        },\n                        getWidth: function() {\n                            return e;\n                        },\n                        getHeight: function() {\n                            return n;\n                        },\n                        setWidth: function(t) {\n                            e = t;\n                        },\n                        setHeight: function(t) {\n                            n = t;\n                        },\n                        setInputStream: function(t) {\n                            r = t, this.setAttribute(\"src\", void 0 !== t.src ? t.src : \"\");\n                        },\n                        ended: function() {\n                            return t.ended;\n                        },\n                        getConfig: function() {\n                            return r;\n                        },\n                        setAttribute: function(e, n) {\n                            t && t.setAttribute(e, n);\n                        },\n                        pause: function() {\n                            t.pause();\n                        },\n                        play: function() {\n                            t.play();\n                        },\n                        setCurrentTime: function(t) {\n                            var e;\n                            \"LiveStream\" !== (null === (e = r) || void 0 === e ? void 0 : e.type) && this.setAttribute(\"currentTime\", t.toString());\n                        },\n                        addEventListener: function(e, n, r) {\n                            -1 !== o.indexOf(e) ? (i[e] || (i[e] = []), i[e].push(n)) : t.addEventListener(e, n, r);\n                        },\n                        clearEventHandlers: function() {\n                            o.forEach(function(e) {\n                                var n = i[e];\n                                n && n.length > 0 && n.forEach(function(n) {\n                                    t.removeEventListener(e, n);\n                                });\n                            });\n                        },\n                        trigger: function(o, a) {\n                            var s, f, l, d, h, v = i[o];\n                            if (\"canrecord\" === o && (d = t.videoWidth, h = t.videoHeight, e = null !== (f = r) && void 0 !== f && f.size ? d / h > 1 ? r.size : Math.floor(d / h * r.size) : d, n = null !== (l = r) && void 0 !== l && l.size ? d / h > 1 ? Math.floor(h / d * r.size) : r.size : h, u.x = e, u.y = n), v && v.length > 0) for(s = 0; s < v.length; s++)v[s].apply(c, a);\n                        },\n                        setTopRight: function(t) {\n                            a.x = t.x, a.y = t.y;\n                        },\n                        getTopRight: function() {\n                            return a;\n                        },\n                        setCanvasSize: function(t) {\n                            u.x = t.x, u.y = t.y;\n                        },\n                        getCanvasSize: function() {\n                            return u;\n                        },\n                        getFrame: function() {\n                            return t;\n                        }\n                    };\n                    return c;\n                },\n                createLiveStream: function(t) {\n                    console.warn(\"**** InputStreamBrowser createLiveStream\"), t && t.setAttribute(\"autoplay\", \"true\");\n                    var e = be.createVideoStream(t);\n                    return e.ended = function() {\n                        return !1;\n                    }, e;\n                },\n                createImageStream: function() {\n                    var t, e, n = null, r = 0, o = 0, i = 0, a = !0, u = !1, c = null, s = 0, f = null, l = !1, d = [\n                        \"canrecord\",\n                        \"ended\"\n                    ], h = {}, v = {\n                        x: 0,\n                        y: 0,\n                        type: \"Point\"\n                    }, p = {\n                        x: 0,\n                        y: 0,\n                        type: \"XYSize\"\n                    };\n                    function y(t, e) {\n                        var n, r = h[t];\n                        if (r && r.length > 0) for(n = 0; n < r.length; n++)r[n].apply(g, e);\n                    }\n                    var g = {\n                        trigger: y,\n                        getWidth: function() {\n                            return t;\n                        },\n                        getHeight: function() {\n                            return e;\n                        },\n                        setWidth: function(e) {\n                            t = e;\n                        },\n                        setHeight: function(t) {\n                            e = t;\n                        },\n                        getRealWidth: function() {\n                            return r;\n                        },\n                        getRealHeight: function() {\n                            return o;\n                        },\n                        setInputStream: function(a) {\n                            var l;\n                            n = a, !1 === a.sequence ? (f = a.src, s = 1) : (f = a.src, s = a.length), u = !1, _e.load(f, function(a) {\n                                var s, f;\n                                if (c = a, a[0].tags && a[0].tags.orientation) switch(a[0].tags.orientation){\n                                    case 6:\n                                    case 8:\n                                        r = a[0].img.height, o = a[0].img.width;\n                                        break;\n                                    default:\n                                        r = a[0].img.width, o = a[0].img.height;\n                                }\n                                else r = a[0].img.width, o = a[0].img.height;\n                                t = null !== (s = n) && void 0 !== s && s.size ? r / o > 1 ? n.size : Math.floor(r / o * n.size) : r, e = null !== (f = n) && void 0 !== f && f.size ? r / o > 1 ? Math.floor(o / r * n.size) : n.size : o, p.x = t, p.y = e, u = !0, i = 0, setTimeout(function() {\n                                    y(\"canrecord\", []);\n                                }, 0);\n                            }, 1, s, null === (l = n) || void 0 === l ? void 0 : l.sequence);\n                        },\n                        ended: function() {\n                            return l;\n                        },\n                        setAttribute: function() {},\n                        getConfig: function() {\n                            return n;\n                        },\n                        pause: function() {\n                            a = !0;\n                        },\n                        play: function() {\n                            a = !1;\n                        },\n                        setCurrentTime: function(t) {\n                            i = t;\n                        },\n                        addEventListener: function(t, e) {\n                            -1 !== d.indexOf(t) && (h[t] || (h[t] = []), h[t].push(e));\n                        },\n                        clearEventHandlers: function() {\n                            Object.keys(h).forEach(function(t) {\n                                return delete h[t];\n                            });\n                        },\n                        setTopRight: function(t) {\n                            v.x = t.x, v.y = t.y;\n                        },\n                        getTopRight: function() {\n                            return v;\n                        },\n                        setCanvasSize: function(t) {\n                            p.x = t.x, p.y = t.y;\n                        },\n                        getCanvasSize: function() {\n                            return p;\n                        },\n                        getFrame: function() {\n                            var t, e;\n                            if (!u) return null;\n                            a || (t = null === (e = c) || void 0 === e ? void 0 : e[i], i < s - 1 ? i++ : setTimeout(function() {\n                                l = !0, y(\"ended\", []);\n                            }, 0));\n                            return t;\n                        }\n                    };\n                    return g;\n                }\n            }, we = be, Oe = n(23), Re = g()(function t() {\n                p()(this, t), E()(this, \"config\", void 0), E()(this, \"inputStream\", void 0), E()(this, \"framegrabber\", void 0), E()(this, \"inputImageWrapper\", void 0), E()(this, \"stopped\", !1), E()(this, \"boxSize\", void 0), E()(this, \"resultCollector\", void 0), E()(this, \"decoder\", void 0), E()(this, \"workerPool\", []), E()(this, \"onUIThread\", !0), E()(this, \"canvasContainer\", new Ce);\n            }), Me = g()(function t() {\n                p()(this, t), E()(this, \"image\", void 0), E()(this, \"overlay\", void 0);\n            }), Ce = g()(function t() {\n                p()(this, t), E()(this, \"ctx\", void 0), E()(this, \"dom\", void 0), this.ctx = new Me, this.dom = new Me;\n            });\n            function Ee(t) {\n                if (\"undefined\" == typeof document) return null;\n                if (t instanceof HTMLElement && t.nodeName && 1 === t.nodeType) return t;\n                var e = \"string\" == typeof t ? t : \"#interactive.viewport\";\n                return document.querySelector(e);\n            }\n            function Ae(t, e, n) {\n                var r = function(t, e) {\n                    var n = document.querySelector(t);\n                    return n || ((n = document.createElement(\"canvas\")).className = e), n;\n                }(t, e);\n                console.warn(\"* initCanvas getCanvasAndContext\");\n                var o = r.getContext(\"2d\", {\n                    willReadFrequently: n.willReadFrequently\n                });\n                return {\n                    canvas: r,\n                    context: o\n                };\n            }\n            function Se(t) {\n                var e, n, r, o, i, a, u = Ee(null == t || null === (e = t.config) || void 0 === e || null === (n = e.inputStream) || void 0 === n ? void 0 : n.target), c = null == t || null === (r = t.config) || void 0 === r || null === (o = r.inputStream) || void 0 === o ? void 0 : o.type;\n                if (!c) return null;\n                var s = function(t, e) {\n                    var n = e.willReadFrequently;\n                    if (\"undefined\" != typeof document) {\n                        var r = Ae(\"canvas.imgBuffer\", \"imgBuffer\", {\n                            willReadFrequently: n\n                        }), o = Ae(\"canvas.drawingBuffer\", \"drawingBuffer\", {\n                            willReadFrequently: n\n                        });\n                        return r.canvas.width = o.canvas.width = t.x, r.canvas.height = o.canvas.height = t.y, {\n                            dom: {\n                                image: r.canvas,\n                                overlay: o.canvas\n                            },\n                            ctx: {\n                                image: r.context,\n                                overlay: o.context\n                            }\n                        };\n                    }\n                    return null;\n                }(t.inputStream.getCanvasSize(), {\n                    willReadFrequently: !(null == t || null === (i = t.config) || void 0 === i || null === (a = i.inputStream) || void 0 === a || !a.willReadFrequently)\n                });\n                if (!s) return {\n                    dom: {\n                        image: null,\n                        overlay: null\n                    },\n                    ctx: {\n                        image: null,\n                        overlay: null\n                    }\n                };\n                var f = s.dom;\n                return \"undefined\" != typeof document && u && (\"ImageStream\" !== c || u.contains(f.image) || u.appendChild(f.image), u.contains(f.overlay) || u.appendChild(f.overlay)), s;\n            }\n            function ke(t, e) {\n                var n = Object.keys(t);\n                if (Object.getOwnPropertySymbols) {\n                    var r = Object.getOwnPropertySymbols(t);\n                    e && (r = r.filter(function(e) {\n                        return Object.getOwnPropertyDescriptor(t, e).enumerable;\n                    })), n.push.apply(n, r);\n                }\n                return n;\n            }\n            function Pe(t) {\n                for(var e = 1; e < arguments.length; e++){\n                    var n = null != arguments[e] ? arguments[e] : {};\n                    e % 2 ? ke(Object(n), !0).forEach(function(e) {\n                        E()(t, e, n[e]);\n                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : ke(Object(n)).forEach(function(e) {\n                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e));\n                    });\n                }\n                return t;\n            }\n            ae.a.setMatrixArrayType(Array);\n            var Te = [];\n            function De(t) {\n                return Pe(Pe({}, t), {}, {\n                    inputStream: Pe(Pe({}, t.inputStream), {}, {\n                        target: null\n                    })\n                });\n            }\n            function je(t) {\n                if (t) {\n                    var e = t().default;\n                    if (!e) return void self.postMessage({\n                        event: \"error\",\n                        message: \"Quagga could not be created\"\n                    });\n                }\n                var n;\n                function r(t) {\n                    self.postMessage({\n                        event: \"processed\",\n                        imageData: n.data,\n                        result: t\n                    }, [\n                        n.data.buffer\n                    ]);\n                }\n                function o() {\n                    self.postMessage({\n                        event: \"initialized\",\n                        imageData: n.data\n                    }, [\n                        n.data.buffer\n                    ]);\n                }\n                self.onmessage = function(t) {\n                    if (\"init\" === t.data.cmd) {\n                        var i = t.data.config;\n                        i.numOfWorkers = 0, n = new e.ImageWrapper({\n                            x: t.data.size.x,\n                            y: t.data.size.y\n                        }, new Uint8Array(t.data.imageData)), e.init(i, o, n), e.onProcessed(r);\n                    } else \"process\" === t.data.cmd ? (n.data = new Uint8Array(t.data.imageData), e.start()) : \"setReaders\" === t.data.cmd ? e.setReaders(t.data.readers) : \"registerReader\" === t.data.cmd && e.registerReader(t.data.name, t.data.reader);\n                };\n            }\n            function Ie(t, e, n) {\n                var r, o, i = (\"undefined\" != typeof __factorySource__ && (o = __factorySource__), r = new Blob([\n                    \"(\" + je.toString() + \")(\" + o + \");\"\n                ], {\n                    type: \"text/javascript\"\n                }), window.URL.createObjectURL(r)), a = {\n                    worker: new Worker(i),\n                    imageData: new Uint8Array(e.getWidth() * e.getHeight()),\n                    busy: !0\n                };\n                a.worker.onmessage = function(t) {\n                    \"initialized\" === t.data.event ? (URL.revokeObjectURL(i), a.busy = !1, a.imageData = new Uint8Array(t.data.imageData), n(a)) : \"processed\" === t.data.event ? (a.imageData = new Uint8Array(t.data.imageData), a.busy = !1, \"undefined\" != typeof publishResult && publishResult(t.data.result, a.imageData)) : t.data.event;\n                }, a.worker.postMessage({\n                    cmd: \"init\",\n                    size: {\n                        x: e.getWidth(),\n                        y: e.getHeight()\n                    },\n                    imageData: a.imageData,\n                    config: De(t)\n                }, [\n                    a.imageData.buffer\n                ]);\n            }\n            function ze(t, e, n, r) {\n                var o = t - Te.length;\n                if (0 === o && r) r();\n                else if (o < 0) {\n                    Te.slice(o).forEach(function(t) {\n                        t.worker.terminate();\n                    }), Te = Te.slice(0, o), r && r();\n                } else {\n                    var i = function(e) {\n                        Te.push(e), Te.length >= t && r && r();\n                    };\n                    if (e) for(var a = 0; a < o; a++)Ie(e, n, i);\n                }\n            }\n            function Ue(t, e, n) {\n                for(var r = t.length; r--;)t[r][0] += e, t[r][1] += n;\n            }\n            ae.a.setMatrixArrayType(Array);\n            var Le = function() {\n                function t() {\n                    var e = this;\n                    p()(this, t), E()(this, \"context\", new Re), E()(this, \"canRecord\", function(t) {\n                        var n;\n                        e.context.config && (Oe.a.checkImageConstraints(e.context.inputStream, null === (n = e.context.config) || void 0 === n ? void 0 : n.locator), e.initCanvas(), e.context.framegrabber = fe.create(e.context.inputStream, e.context.canvasContainer.dom.image), void 0 === e.context.config.numOfWorkers && (e.context.config.numOfWorkers = 0), ze(e.context.config.numOfWorkers, e.context.config, e.context.inputStream, function() {\n                            var n;\n                            0 === (null === (n = e.context.config) || void 0 === n ? void 0 : n.numOfWorkers) && e.initializeData(), e.ready(t);\n                        }));\n                    }), E()(this, \"update\", function() {\n                        if (e.context.onUIThread) {\n                            var t, n = (o = e.context.framegrabber, Te.length ? !!(i = Te.filter(function(t) {\n                                return !t.busy;\n                            })[0]) && (o.attachData(i.imageData), o.grab() && (i.busy = !0, i.worker.postMessage({\n                                cmd: \"process\",\n                                imageData: i.imageData\n                            }, [\n                                i.imageData.buffer\n                            ])), !0) : null);\n                            if (!n) e.context.framegrabber.attachData(null === (t = e.context.inputImageWrapper) || void 0 === t ? void 0 : t.data), e.context.framegrabber.grab() && (n || e.locateAndDecode());\n                        } else {\n                            var r;\n                            e.context.framegrabber.attachData(null === (r = e.context.inputImageWrapper) || void 0 === r ? void 0 : r.data), e.context.framegrabber.grab(), e.locateAndDecode();\n                        }\n                        var o, i;\n                    });\n                }\n                var e, n;\n                return g()(t, [\n                    {\n                        key: \"initBuffers\",\n                        value: function(t) {\n                            if (this.context.config) {\n                                var e = function(t, e, n) {\n                                    var r = e || new c.a({\n                                        x: t.getWidth(),\n                                        y: t.getHeight(),\n                                        type: \"XYSize\"\n                                    }), o = [\n                                        ae.c.clone([\n                                            0,\n                                            0\n                                        ]),\n                                        ae.c.clone([\n                                            0,\n                                            r.size.y\n                                        ]),\n                                        ae.c.clone([\n                                            r.size.x,\n                                            r.size.y\n                                        ]),\n                                        ae.c.clone([\n                                            r.size.x,\n                                            0\n                                        ])\n                                    ];\n                                    return Oe.a.init(r, n), {\n                                        inputImageWrapper: r,\n                                        boxSize: o\n                                    };\n                                }(this.context.inputStream, t, this.context.config.locator), n = e.inputImageWrapper, r = e.boxSize;\n                                this.context.inputImageWrapper = n, this.context.boxSize = r;\n                            }\n                        }\n                    },\n                    {\n                        key: \"initializeData\",\n                        value: function(t) {\n                            this.context.config && (this.initBuffers(t), this.context.decoder = Lt.create(this.context.config.decoder, this.context.inputImageWrapper));\n                        }\n                    },\n                    {\n                        key: \"getViewPort\",\n                        value: function() {\n                            return this.context.config && this.context.config.inputStream ? Ee(this.context.config.inputStream.target) : null;\n                        }\n                    },\n                    {\n                        key: \"ready\",\n                        value: function(t) {\n                            this.context.inputStream.play(), t();\n                        }\n                    },\n                    {\n                        key: \"initCanvas\",\n                        value: function() {\n                            var t = Se(this.context);\n                            if (t) {\n                                var e = t.ctx, n = t.dom;\n                                this.context.canvasContainer.dom.image = n.image, this.context.canvasContainer.dom.overlay = n.overlay, this.context.canvasContainer.ctx.image = e.image, this.context.canvasContainer.ctx.overlay = e.overlay;\n                            }\n                        }\n                    },\n                    {\n                        key: \"initInputStream\",\n                        value: function(t) {\n                            if (this.context.config && this.context.config.inputStream) {\n                                var e = this.context.config.inputStream, n = e.type, r = e.constraints, o = function() {\n                                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"LiveStream\", e = arguments.length > 1 ? arguments[1] : void 0, n = arguments.length > 2 ? arguments[2] : void 0;\n                                    switch(t){\n                                        case \"VideoStream\":\n                                            var r = document.createElement(\"video\");\n                                            return {\n                                                video: r,\n                                                inputStream: n.createVideoStream(r)\n                                            };\n                                        case \"ImageStream\":\n                                            return {\n                                                inputStream: n.createImageStream()\n                                            };\n                                        case \"LiveStream\":\n                                            var o = null;\n                                            return e && ((o = e.querySelector(\"video\")) || (o = document.createElement(\"video\"), e.appendChild(o))), {\n                                                video: o,\n                                                inputStream: n.createLiveStream(o)\n                                            };\n                                        default:\n                                            return console.error(\"* setupInputStream invalid type \".concat(t)), {\n                                                video: null,\n                                                inputStream: null\n                                            };\n                                    }\n                                }(n, this.getViewPort(), we), i = o.video, a = o.inputStream;\n                                \"LiveStream\" === n && i && re.request(i, r).then(function() {\n                                    return a.trigger(\"canrecord\");\n                                }).catch(function(e) {\n                                    return t(e);\n                                }), a && (a.setAttribute(\"preload\", \"auto\"), a.setInputStream(this.context.config.inputStream), a.addEventListener(\"canrecord\", this.canRecord.bind(void 0, t))), this.context.inputStream = a;\n                            }\n                        }\n                    },\n                    {\n                        key: \"getBoundingBoxes\",\n                        value: function() {\n                            var t;\n                            return null !== (t = this.context.config) && void 0 !== t && t.locate ? Oe.a.locate() : [\n                                [\n                                    ae.c.clone(this.context.boxSize[0]),\n                                    ae.c.clone(this.context.boxSize[1]),\n                                    ae.c.clone(this.context.boxSize[2]),\n                                    ae.c.clone(this.context.boxSize[3])\n                                ]\n                            ];\n                        }\n                    },\n                    {\n                        key: \"transformResult\",\n                        value: function(t) {\n                            var e = this, n = this.context.inputStream.getTopRight(), r = n.x, o = n.y;\n                            if ((0 !== r || 0 !== o) && (t.barcodes && t.barcodes.forEach(function(t) {\n                                return e.transformResult(t);\n                            }), t.line && 2 === t.line.length && function(t, e, n) {\n                                t[0].x += e, t[0].y += n, t[1].x += e, t[1].y += n;\n                            }(t.line, r, o), t.box && Ue(t.box, r, o), t.boxes && t.boxes.length > 0)) for(var i = 0; i < t.boxes.length; i++)Ue(t.boxes[i], r, o);\n                        }\n                    },\n                    {\n                        key: \"addResult\",\n                        value: function(t, e) {\n                            var n = this;\n                            e && this.context.resultCollector && (t.barcodes ? t.barcodes.filter(function(t) {\n                                return t.codeResult;\n                            }).forEach(function(t) {\n                                return n.addResult(t, e);\n                            }) : t.codeResult && this.context.resultCollector.addResult(e, this.context.inputStream.getCanvasSize(), t.codeResult));\n                        }\n                    },\n                    {\n                        key: \"hasCodeResult\",\n                        value: function(t) {\n                            return !(!t || !(t.barcodes ? t.barcodes.some(function(t) {\n                                return t.codeResult;\n                            }) : t.codeResult));\n                        }\n                    },\n                    {\n                        key: \"publishResult\",\n                        value: function() {\n                            var t, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, n = arguments.length > 1 ? arguments[1] : void 0, r = e;\n                            e && this.context.onUIThread && (this.transformResult(e), this.addResult(e, n), r = (null == e || null === (t = e.barcodes) || void 0 === t ? void 0 : t.length) > 0 ? e.barcodes : e);\n                            Nt.publish(\"processed\", r), this.hasCodeResult(e) && Nt.publish(\"detected\", r);\n                        }\n                    },\n                    {\n                        key: \"locateAndDecode\",\n                        value: (n = f()(d.a.mark(function t() {\n                            var e, n, r, o, i;\n                            return d.a.wrap(function(t) {\n                                for(;;)switch(t.prev = t.next){\n                                    case 0:\n                                        if (!(e = this.getBoundingBoxes())) {\n                                            t.next = 12;\n                                            break;\n                                        }\n                                        return t.next = 4, this.context.decoder.decodeFromBoundingBoxes(e);\n                                    case 4:\n                                        if (t.t0 = t.sent, t.t0) {\n                                            t.next = 7;\n                                            break;\n                                        }\n                                        t.t0 = {};\n                                    case 7:\n                                        (r = t.t0).boxes = e, this.publishResult(r, null === (n = this.context.inputImageWrapper) || void 0 === n ? void 0 : n.data), t.next = 16;\n                                        break;\n                                    case 12:\n                                        return t.next = 14, this.context.decoder.decodeFromImage(this.context.inputImageWrapper);\n                                    case 14:\n                                        (o = t.sent) ? this.publishResult(o, null === (i = this.context.inputImageWrapper) || void 0 === i ? void 0 : i.data) : this.publishResult();\n                                    case 16:\n                                    case \"end\":\n                                        return t.stop();\n                                }\n                            }, t, this);\n                        })), function() {\n                            return n.apply(this, arguments);\n                        })\n                    },\n                    {\n                        key: \"startContinuousUpdate\",\n                        value: function() {\n                            var t, e = this, n = null, r = 1e3 / ((null === (t = this.context.config) || void 0 === t ? void 0 : t.frequency) || 60);\n                            this.context.stopped = !1;\n                            var o = this.context;\n                            !function t(i) {\n                                n = n || i, o.stopped || (i >= n && (n += r, e.update()), window.requestAnimationFrame(t));\n                            }(performance.now());\n                        }\n                    },\n                    {\n                        key: \"start\",\n                        value: function() {\n                            var t, e;\n                            this.context.onUIThread && \"LiveStream\" === (null === (t = this.context.config) || void 0 === t || null === (e = t.inputStream) || void 0 === e ? void 0 : e.type) ? this.startContinuousUpdate() : this.update();\n                        }\n                    },\n                    {\n                        key: \"stop\",\n                        value: (e = f()(d.a.mark(function t() {\n                            var e;\n                            return d.a.wrap(function(t) {\n                                for(;;)switch(t.prev = t.next){\n                                    case 0:\n                                        if (this.context.stopped = !0, ze(0), null === (e = this.context.config) || void 0 === e || !e.inputStream || \"LiveStream\" !== this.context.config.inputStream.type) {\n                                            t.next = 6;\n                                            break;\n                                        }\n                                        return t.next = 5, re.release();\n                                    case 5:\n                                        this.context.inputStream.clearEventHandlers();\n                                    case 6:\n                                    case \"end\":\n                                        return t.stop();\n                                }\n                            }, t, this);\n                        })), function() {\n                            return e.apply(this, arguments);\n                        })\n                    },\n                    {\n                        key: \"setReaders\",\n                        value: function(t) {\n                            this.context.decoder && this.context.decoder.setReaders(t), function(t) {\n                                Te.forEach(function(e) {\n                                    return e.worker.postMessage({\n                                        cmd: \"setReaders\",\n                                        readers: t\n                                    });\n                                });\n                            }(t);\n                        }\n                    },\n                    {\n                        key: \"registerReader\",\n                        value: function(t, e) {\n                            Lt.registerReader(t, e), this.context.decoder && this.context.decoder.registerReader(t, e), function(t, e) {\n                                Te.forEach(function(n) {\n                                    return n.worker.postMessage({\n                                        cmd: \"registerReader\",\n                                        name: t,\n                                        reader: e\n                                    });\n                                });\n                            }(t, e);\n                        }\n                    }\n                ]), t;\n            }(), Ne = new Le, Fe = Ne.context, Be = {\n                init: function(t, e, n) {\n                    var r, o = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : Ne;\n                    return e || (r = new Promise(function(t, n) {\n                        e = function(e) {\n                            e ? n(e) : t();\n                        };\n                    })), o.context.config = u()({}, ie, t), o.context.config.numOfWorkers > 0 && (o.context.config.numOfWorkers = 0), n ? (o.context.onUIThread = !1, o.initializeData(n), e && e()) : o.initInputStream(e), r;\n                },\n                start: function() {\n                    return Ne.start();\n                },\n                stop: function() {\n                    return Ne.stop();\n                },\n                pause: function() {\n                    Fe.stopped = !0;\n                },\n                onDetected: function(t) {\n                    t && (\"function\" == typeof t || \"object\" === i()(t) && t.callback) ? Nt.subscribe(\"detected\", t) : console.trace(\"* warning: Quagga.onDetected called with invalid callback, ignoring\");\n                },\n                offDetected: function(t) {\n                    Nt.unsubscribe(\"detected\", t);\n                },\n                onProcessed: function(t) {\n                    t && (\"function\" == typeof t || \"object\" === i()(t) && t.callback) ? Nt.subscribe(\"processed\", t) : console.trace(\"* warning: Quagga.onProcessed called with invalid callback, ignoring\");\n                },\n                offProcessed: function(t) {\n                    Nt.unsubscribe(\"processed\", t);\n                },\n                setReaders: function(t) {\n                    t ? Ne.setReaders(t) : console.trace(\"* warning: Quagga.setReaders called with no readers, ignoring\");\n                },\n                registerReader: function(t, e) {\n                    t ? e ? Ne.registerReader(t, e) : console.trace(\"* warning: Quagga.registerReader called with no reader, ignoring\") : console.trace(\"* warning: Quagga.registerReader called with no name, ignoring\");\n                },\n                registerResultCollector: function(t) {\n                    t && \"function\" == typeof t.addResult && (Fe.resultCollector = t);\n                },\n                get canvas () {\n                    return Fe.canvasContainer;\n                },\n                decodeSingle: function(t, e) {\n                    var n = this, r = new Le;\n                    return (t = u()({\n                        inputStream: {\n                            type: \"ImageStream\",\n                            sequence: !1,\n                            size: 800,\n                            src: t.src\n                        },\n                        numOfWorkers: 1,\n                        locator: {\n                            halfSample: !1\n                        }\n                    }, t)).numOfWorkers > 0 && (t.numOfWorkers = 0), t.numOfWorkers > 0 && (\"undefined\" == typeof Blob || \"undefined\" == typeof Worker) && (console.warn(\"* no Worker and/or Blob support - forcing numOfWorkers to 0\"), t.numOfWorkers = 0), new Promise(function(o, i) {\n                        try {\n                            n.init(t, function() {\n                                Nt.once(\"processed\", function(t) {\n                                    r.stop(), e && e.call(null, t), o(t);\n                                }, !0), r.start();\n                            }, null, r);\n                        } catch (t) {\n                            i(t);\n                        }\n                    });\n                },\n                get default () {\n                    return Be;\n                },\n                Readers: r,\n                CameraAccess: re,\n                ImageDebug: h.a,\n                ImageWrapper: c.a,\n                ResultCollector: oe\n            };\n            e.default = Be;\n        }\n    ]).default;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@ericblade/quagga2/dist/quagga.min.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        var React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false;\n        var REACT_CLIENT_REFERENCE$2 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$2 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\"); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            if (typeof type === \"function\") {\n                if (type.$$typeof === REACT_CLIENT_REFERENCE$1) {\n                    // TODO: Create a convention for naming client references with debug info.\n                    return null;\n                }\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                {\n                    if (typeof type.tag === \"number\") {\n                        error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                    }\n                }\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var assign = Object.assign;\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        /**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */ function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */ var RunInRootFrame = {\n                DetermineComponentFrameRoot: function() {\n                    var control;\n                    try {\n                        // This should throw.\n                        if (construct) {\n                            // Something should be setting the props in the constructor.\n                            var Fake = function() {\n                                throw Error();\n                            }; // $FlowFixMe[prop-missing]\n                            Object.defineProperty(Fake.prototype, \"props\", {\n                                set: function() {\n                                    // We use a throwing setter instead of frozen or non-writable props\n                                    // because that won't throw in a non-strict mode function.\n                                    throw Error();\n                                }\n                            });\n                            if (typeof Reflect === \"object\" && Reflect.construct) {\n                                // We construct a different control for this case to include any extra\n                                // frames added by the construct call.\n                                try {\n                                    Reflect.construct(Fake, []);\n                                } catch (x) {\n                                    control = x;\n                                }\n                                Reflect.construct(fn, [], Fake);\n                            } else {\n                                try {\n                                    Fake.call();\n                                } catch (x) {\n                                    control = x;\n                                } // $FlowFixMe[prop-missing] found when upgrading Flow\n                                fn.call(Fake.prototype);\n                            }\n                        } else {\n                            try {\n                                throw Error();\n                            } catch (x) {\n                                control = x;\n                            } // TODO(luna): This will currently only throw if the function component\n                            // tries to access React/ReactDOM/props. We should probably make this throw\n                            // in simple components too\n                            var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n                            // component, which we don't yet support. Attach a noop catch handler to\n                            // silence the error.\n                            // TODO: Implement component stacks for async client components?\n                            if (maybePromise && typeof maybePromise.catch === \"function\") {\n                                maybePromise.catch(function() {});\n                            }\n                        }\n                    } catch (sample) {\n                        // This is inlined manually because closure doesn't do it for us.\n                        if (sample && control && typeof sample.stack === \"string\") {\n                            return [\n                                sample.stack,\n                                control.stack\n                            ];\n                        }\n                    }\n                    return [\n                        null,\n                        null\n                    ];\n                }\n            }; // $FlowFixMe[prop-missing]\n            RunInRootFrame.DetermineComponentFrameRoot.displayName = \"DetermineComponentFrameRoot\";\n            var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, \"name\"); // Before ES6, the `name` property was not configurable.\n            if (namePropDescriptor && namePropDescriptor.configurable) {\n                // V8 utilizes a function's `name` property when generating a stack trace.\n                Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // is set to `false`.\n                // $FlowFixMe[cannot-write]\n                \"name\", {\n                    value: \"DetermineComponentFrameRoot\"\n                });\n            }\n            try {\n                var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(), sampleStack = _RunInRootFrame$Deter[0], controlStack = _RunInRootFrame$Deter[1];\n                if (sampleStack && controlStack) {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sampleStack.split(\"\\n\");\n                    var controlLines = controlStack.split(\"\\n\");\n                    var s = 0;\n                    var c = 0;\n                    while(s < sampleLines.length && !sampleLines[s].includes(\"DetermineComponentFrameRoot\")){\n                        s++;\n                    }\n                    while(c < controlLines.length && !controlLines[c].includes(\"DetermineComponentFrameRoot\")){\n                        c++;\n                    } // We couldn't find our intentionally injected common root frame, attempt\n                    // to find another common root frame by search from the bottom of the\n                    // control stack...\n                    if (s === sampleLines.length || c === controlLines.length) {\n                        s = sampleLines.length - 1;\n                        c = controlLines.length - 1;\n                        while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                            // We expect at least one stack frame to be shared.\n                            // Typically this will be the root most one. However, stack frames may be\n                            // cut off due to maximum stack limits. In this case, one maybe cut off\n                            // earlier than the other. We assume that the sample is longer or the same\n                            // and there for cut off earlier. So we should find the root most frame in\n                            // the sample somewhere in the control.\n                            c--;\n                        }\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        if (true) {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        } // Return the line we found.\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown;\n        var specialPropRefWarningShown;\n        var didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function warnIfStringRefCannotBeAutoConverted(config, self) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner$1.current && self && ReactCurrentOwner$1.current.stateNode !== self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", getComponentNameFromType(ReactCurrentOwner$1.current.type), config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingKey = function() {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingKey.isReactWarning = true;\n                Object.defineProperty(props, \"key\", {\n                    get: warnAboutAccessingKey,\n                    configurable: true\n                });\n            }\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            {\n                var warnAboutAccessingRef = function() {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                };\n                warnAboutAccessingRef.isReactWarning = true;\n                Object.defineProperty(props, \"ref\", {\n                    get: warnAboutAccessingRef,\n                    configurable: true\n                });\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */ function jsxDEV$1(type, config, maybeKey, source, self) {\n            {\n                var propName; // Reserved names are extracted\n                var props = {};\n                var key = null;\n                var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n                // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n                // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n                // but as an intermediary step, we will use jsxDEV for everything except\n                // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n                // key is explicitly declared to be undefined or not.\n                if (maybeKey !== undefined) {\n                    {\n                        checkKeyStringCoercion(maybeKey);\n                    }\n                    key = \"\" + maybeKey;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    warnIfStringRefCannotBeAutoConverted(config, self);\n                } // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                } // Resolve default props\n                if (type && type.defaultProps) {\n                    var defaultProps = type.defaultProps;\n                    for(propName in defaultProps){\n                        if (props[propName] === undefined) {\n                            props[propName] = defaultProps[propName];\n                        }\n                    }\n                }\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n                return ReactElement(type, key, ref, self, source, ReactCurrentOwner$1.current, props);\n            }\n        }\n        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            {\n                return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n            }\n        }\n        function getDeclarationErrorAddendum() {\n            {\n                if (ReactCurrentOwner.current) {\n                    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (name) {\n                        return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                    }\n                }\n                return \"\";\n            }\n        }\n        function getSourceInfoErrorAddendum(source) {\n            {\n                if (source !== undefined) {\n                    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                    var lineNumber = source.lineNumber;\n                    return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n                }\n                return \"\";\n            }\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            {\n                var info = getDeclarationErrorAddendum();\n                if (!info) {\n                    var parentName = getComponentNameFromType(parentType);\n                    if (parentName) {\n                        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                    }\n                }\n                return info;\n            }\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            {\n                if (!element._store || element._store.validated || element.key != null) {\n                    return;\n                }\n                element._store.validated = true;\n                var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n                if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                    return;\n                }\n                ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n                // property, it may be the creator of the child that's responsible for\n                // assigning it a key.\n                var childOwner = \"\";\n                if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                    // Give the component that originally created this child.\n                    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n                }\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            {\n                if (typeof node !== \"object\" || !node) {\n                    return;\n                }\n                if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n                else if (isArray(node)) {\n                    for(var i = 0; i < node.length; i++){\n                        var child = node[i];\n                        if (isValidElement(child)) {\n                            validateExplicitKey(child, parentType);\n                        }\n                    }\n                } else if (isValidElement(node)) {\n                    // This element was passed in a valid location.\n                    if (node._store) {\n                        node._store.validated = true;\n                    }\n                } else {\n                    var iteratorFn = getIteratorFn(node);\n                    if (typeof iteratorFn === \"function\") {\n                        // Entry iterators used to provide implicit keys,\n                        // but now we print a separate warning for them later.\n                        if (iteratorFn !== node.entries) {\n                            var iterator = iteratorFn.call(node);\n                            var step;\n                            while(!(step = iterator.next()).done){\n                                if (isValidElement(step.value)) {\n                                    validateExplicitKey(step.value, parentType);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        var didWarnAboutKeySpread = {};\n        function jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n            {\n                var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n                // succeed and there will likely be errors in render.\n                if (!validType) {\n                    var info = \"\";\n                    if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                        info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                    }\n                    var sourceInfo = getSourceInfoErrorAddendum(source);\n                    if (sourceInfo) {\n                        info += sourceInfo;\n                    } else {\n                        info += getDeclarationErrorAddendum();\n                    }\n                    var typeString;\n                    if (type === null) {\n                        typeString = \"null\";\n                    } else if (isArray(type)) {\n                        typeString = \"array\";\n                    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                        typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                        info = \" Did you accidentally export a JSX literal instead of a component?\";\n                    } else {\n                        typeString = typeof type;\n                    }\n                    error(\"React.jsx: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n                var element = jsxDEV$1(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n                // TODO: Drop this when these are no longer allowed as the type argument.\n                if (element == null) {\n                    return element;\n                } // Skip key warning if the type isn't valid since our key validation logic\n                // doesn't expect a non-string/function type and can throw confusing errors.\n                // We don't want exception behavior to differ between dev and prod.\n                // (Rendering will throw with a helpful message and as soon as the type is\n                // fixed, the key warnings will appear.)\n                if (validType) {\n                    var children = props.children;\n                    if (children !== undefined) {\n                        if (isStaticChildren) {\n                            if (isArray(children)) {\n                                for(var i = 0; i < children.length; i++){\n                                    validateChildKeys(children[i], type);\n                                }\n                                if (Object.freeze) {\n                                    Object.freeze(children);\n                                }\n                            } else {\n                                error(\"React.jsx: Static children should always be an array. \" + \"You are likely explicitly calling React.jsxs or React.jsxDEV. \" + \"Use the Babel transform instead.\");\n                            }\n                        } else {\n                            validateChildKeys(children, type);\n                        }\n                    }\n                }\n                if (hasOwnProperty.call(props, \"key\")) {\n                    var componentName = getComponentNameFromType(type);\n                    var keys = Object.keys(props).filter(function(k) {\n                        return k !== \"key\";\n                    });\n                    var beforeExample = keys.length > 0 ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\" : \"{key: someKey}\";\n                    if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n                        var afterExample = keys.length > 0 ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\";\n                        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + \"  let props = %s;\\n\" + \"  <%s {...props} />\\n\" + \"React keys must be passed directly to JSX without using spread:\\n\" + \"  let props = %s;\\n\" + \"  <%s key={someKey} {...props} />\", beforeExample, componentName, afterExample, componentName);\n                        didWarnAboutKeySpread[componentName + beforeExample] = true;\n                    }\n                }\n                if (type === REACT_FRAGMENT_TYPE) {\n                    validateFragmentProps(element);\n                } else {\n                    validatePropTypes(element);\n                }\n                return element;\n            }\n        } // These two functions exist to still get child warnings in dev\n        var jsxDEV = jsxWithValidation;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.jsxDEV = jsxDEV;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLDhMQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz9jYTIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOlsicHJvY2VzcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXF1aXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/scan2/page.tsx":
/*!********************************!*\
  !*** ./src/app/scan2/page.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ericblade_quagga2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ericblade/quagga2 */ \"(app-pages-browser)/./node_modules/@ericblade/quagga2/dist/quagga.min.js\");\n/* harmony import */ var _ericblade_quagga2__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ericblade_quagga2__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst BarcodeScanPage = ()=>{\n    _s();\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [userCode, setUserCode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const initQuagga = async ()=>{\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({\n                    video: true\n                });\n                const videoElement = document.createElement(\"video\");\n                videoElement.srcObject = stream;\n                videoElement.play();\n                if (videoRef.current) {\n                    videoRef.current.replaceWith(videoElement);\n                }\n                videoElement.addEventListener(\"loadedmetadata\", ()=>{\n                    const canvasElement = document.createElement(\"canvas\");\n                    const canvasContext = canvasElement.getContext(\"2d\");\n                    if (!canvasContext) {\n                        console.error(\"Could not get 2D context from canvas\");\n                        return;\n                    }\n                    canvasElement.width = videoElement.videoWidth;\n                    canvasElement.height = videoElement.videoHeight;\n                    _ericblade_quagga2__WEBPACK_IMPORTED_MODULE_2___default().init({\n                        inputStream: {\n                            name: \"Live\",\n                            type: \"LiveStream\",\n                            target: videoRef.current\n                        },\n                        decoder: {\n                            readers: [\n                                \"ean_reader\"\n                            ]\n                        }\n                    }, (err)=>{\n                        if (err) {\n                            console.error(\"Error initializing Quagga:\", err);\n                            return;\n                        }\n                        console.log(\"Initialization finished. Ready to start\");\n                        alert(\"Initialization finished. Ready to start\");\n                        _ericblade_quagga2__WEBPACK_IMPORTED_MODULE_2___default().start();\n                    });\n                    _ericblade_quagga2__WEBPACK_IMPORTED_MODULE_2___default().onDetected(function(result) {\n                        var code = result.codeResult.code;\n                        console.log(code);\n                        setUserCode(result.codeResult.code || \"\");\n                        alert(code);\n                    });\n                });\n            } catch (error) {\n                console.error(\"Error accessing camera:\", error);\n            }\n        };\n        initQuagga();\n        return ()=>{\n            _ericblade_quagga2__WEBPACK_IMPORTED_MODULE_2___default().stop();\n        };\n    }, []);\n    const handleReset = ()=>{\n        // Implement your reset logic here\n        setUserCode(\"\");\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \" w-[80%] mx-auto flex mb-36 mt-16\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \" w-1/2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                    ref: videoRef\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Duong\\\\Documents\\\\Qr-code-1\\\\nextjs\\\\src\\\\app\\\\scan2\\\\page.tsx\",\n                    lineNumber: 85,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Duong\\\\Documents\\\\Qr-code-1\\\\nextjs\\\\src\\\\app\\\\scan2\\\\page.tsx\",\n                lineNumber: 84,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \" w-1/2\",\n                children: userCode && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \" text-center font-semibold text-3xl\",\n                            children: \"Result\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Duong\\\\Documents\\\\Qr-code-1\\\\nextjs\\\\src\\\\app\\\\scan2\\\\page.tsx\",\n                            lineNumber: 90,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \" text-center text-2xl mt-20 bg-gray-100 rounded-md w-fit px-6 mx-auto py-2 font-semibold\",\n                            children: userCode\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Duong\\\\Documents\\\\Qr-code-1\\\\nextjs\\\\src\\\\app\\\\scan2\\\\page.tsx\",\n                            lineNumber: 91,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \" flex justify-center my-20\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleReset,\n                                className: \"text-md py-2 px-12 border-[1px] mt-24 border-slate-400 rounded-md\",\n                                children: \"Reset\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\Duong\\\\Documents\\\\Qr-code-1\\\\nextjs\\\\src\\\\app\\\\scan2\\\\page.tsx\",\n                                lineNumber: 95,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\Duong\\\\Documents\\\\Qr-code-1\\\\nextjs\\\\src\\\\app\\\\scan2\\\\page.tsx\",\n                            lineNumber: 94,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\Duong\\\\Documents\\\\Qr-code-1\\\\nextjs\\\\src\\\\app\\\\scan2\\\\page.tsx\",\n                    lineNumber: 89,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Duong\\\\Documents\\\\Qr-code-1\\\\nextjs\\\\src\\\\app\\\\scan2\\\\page.tsx\",\n                lineNumber: 87,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Duong\\\\Documents\\\\Qr-code-1\\\\nextjs\\\\src\\\\app\\\\scan2\\\\page.tsx\",\n        lineNumber: 83,\n        columnNumber: 5\n    }, undefined);\n};\n_s(BarcodeScanPage, \"4McBknLaRejctzrE4poeBguDGfo=\");\n_c = BarcodeScanPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (BarcodeScanPage);\nvar _c;\n$RefreshReg$(_c, \"BarcodeScanPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvc2NhbjIvcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFMkQ7QUFDbkI7QUFFeEMsTUFBTUssa0JBQTRCOztJQUNoQyxNQUFNQyxXQUFXSiw2Q0FBTUEsQ0FBbUI7SUFDMUMsTUFBTSxDQUFDSyxVQUFVQyxZQUFZLEdBQUdMLCtDQUFRQSxDQUFTO0lBRWpERixnREFBU0EsQ0FBQztRQUNSLE1BQU1RLGFBQWE7WUFDakIsSUFBSTtnQkFDRixNQUFNQyxTQUFTLE1BQU1DLFVBQVVDLFlBQVksQ0FBQ0MsWUFBWSxDQUFDO29CQUN2REMsT0FBTztnQkFDVDtnQkFFQSxNQUFNQyxlQUFlQyxTQUFTQyxhQUFhLENBQUM7Z0JBQzVDRixhQUFhRyxTQUFTLEdBQUdSO2dCQUN6QkssYUFBYUksSUFBSTtnQkFFakIsSUFBSWIsU0FBU2MsT0FBTyxFQUFFO29CQUNwQmQsU0FBU2MsT0FBTyxDQUFDQyxXQUFXLENBQUNOO2dCQUMvQjtnQkFFQUEsYUFBYU8sZ0JBQWdCLENBQUMsa0JBQWtCO29CQUM5QyxNQUFNQyxnQkFBZ0JQLFNBQVNDLGFBQWEsQ0FBQztvQkFDN0MsTUFBTU8sZ0JBQWdCRCxjQUFjRSxVQUFVLENBQUM7b0JBRS9DLElBQUksQ0FBQ0QsZUFBZTt3QkFDbEJFLFFBQVFDLEtBQUssQ0FBQzt3QkFDZDtvQkFDRjtvQkFFQUosY0FBY0ssS0FBSyxHQUFHYixhQUFhYyxVQUFVO29CQUM3Q04sY0FBY08sTUFBTSxHQUFHZixhQUFhZ0IsV0FBVztvQkFFL0MzQiw4REFBVyxDQUNUO3dCQUNFNkIsYUFBYTs0QkFDWEMsTUFBTTs0QkFDTkMsTUFBTTs0QkFDTkMsUUFBUTlCLFNBQVNjLE9BQU87d0JBQzFCO3dCQUNBaUIsU0FBUzs0QkFDUEMsU0FBUztnQ0FBQzs2QkFBYTt3QkFDekI7b0JBQ0YsR0FDQSxDQUFDQzt3QkFDQyxJQUFJQSxLQUFLOzRCQUNQYixRQUFRQyxLQUFLLENBQUMsOEJBQThCWTs0QkFDNUM7d0JBQ0Y7d0JBQ0FiLFFBQVFjLEdBQUcsQ0FBQzt3QkFDWkMsTUFBTTt3QkFDTnJDLCtEQUFZO29CQUNkO29CQUVGQSxvRUFBaUIsQ0FBQyxTQUFVd0MsTUFBTTt3QkFDaEMsSUFBSUMsT0FBT0QsT0FBT0UsVUFBVSxDQUFDRCxJQUFJO3dCQUNqQ25CLFFBQVFjLEdBQUcsQ0FBQ0s7d0JBQ1pyQyxZQUFZb0MsT0FBT0UsVUFBVSxDQUFDRCxJQUFJLElBQUk7d0JBQ3RDSixNQUFNSTtvQkFDUjtnQkFDRjtZQUNGLEVBQUUsT0FBT2xCLE9BQU87Z0JBQ2RELFFBQVFDLEtBQUssQ0FBQywyQkFBMkJBO1lBQzNDO1FBQ0Y7UUFFQWxCO1FBRUEsT0FBTztZQUNMTCw4REFBVztRQUNiO0lBQ0YsR0FBRyxFQUFFO0lBRUwsTUFBTTRDLGNBQWM7UUFDbEIsa0NBQWtDO1FBQ2xDeEMsWUFBWTtJQUNkO0lBRUEscUJBQ0UsOERBQUN5QztRQUFJQyxXQUFVOzswQkFDYiw4REFBQ0Q7Z0JBQUlDLFdBQVU7MEJBQ2IsNEVBQUNwQztvQkFBTXFDLEtBQUs3Qzs7Ozs7Ozs7Ozs7MEJBRWQsOERBQUMyQztnQkFBSUMsV0FBVTswQkFDWjNDLDBCQUNDLDhEQUFDMEM7O3NDQUNDLDhEQUFDRzs0QkFBRUYsV0FBVTtzQ0FBc0M7Ozs7OztzQ0FDbkQsOERBQUNFOzRCQUFFRixXQUFVO3NDQUNWM0M7Ozs7OztzQ0FFSCw4REFBQzBDOzRCQUFJQyxXQUFVO3NDQUNiLDRFQUFDRztnQ0FDQ0MsU0FBU047Z0NBQ1RFLFdBQVU7MENBQ1g7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTZjtHQXJHTTdDO0tBQUFBO0FBdUdOLCtEQUFlQSxlQUFlQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvc2NhbjIvcGFnZS50c3g/NDM0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcclxuXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IFF1YWdnYSBmcm9tIFwiQGVyaWNibGFkZS9xdWFnZ2EyXCI7XHJcblxyXG5jb25zdCBCYXJjb2RlU2NhblBhZ2U6IFJlYWN0LkZDID0gKCkgPT4ge1xyXG4gIGNvbnN0IHZpZGVvUmVmID0gdXNlUmVmPEhUTUxWaWRlb0VsZW1lbnQ+KG51bGwpO1xyXG4gIGNvbnN0IFt1c2VyQ29kZSwgc2V0VXNlckNvZGVdID0gdXNlU3RhdGU8c3RyaW5nPihcIlwiKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGNvbnN0IGluaXRRdWFnZ2EgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3Qgc3RyZWFtID0gYXdhaXQgbmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEoe1xyXG4gICAgICAgICAgdmlkZW86IHRydWUsXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IHZpZGVvRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ2aWRlb1wiKTtcclxuICAgICAgICB2aWRlb0VsZW1lbnQuc3JjT2JqZWN0ID0gc3RyZWFtO1xyXG4gICAgICAgIHZpZGVvRWxlbWVudC5wbGF5KCk7XHJcblxyXG4gICAgICAgIGlmICh2aWRlb1JlZi5jdXJyZW50KSB7XHJcbiAgICAgICAgICB2aWRlb1JlZi5jdXJyZW50LnJlcGxhY2VXaXRoKHZpZGVvRWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2aWRlb0VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImxvYWRlZG1ldGFkYXRhXCIsICgpID0+IHtcclxuICAgICAgICAgIGNvbnN0IGNhbnZhc0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xyXG4gICAgICAgICAgY29uc3QgY2FudmFzQ29udGV4dCA9IGNhbnZhc0VsZW1lbnQuZ2V0Q29udGV4dChcIjJkXCIpO1xyXG5cclxuICAgICAgICAgIGlmICghY2FudmFzQ29udGV4dCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiQ291bGQgbm90IGdldCAyRCBjb250ZXh0IGZyb20gY2FudmFzXCIpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgY2FudmFzRWxlbWVudC53aWR0aCA9IHZpZGVvRWxlbWVudC52aWRlb1dpZHRoO1xyXG4gICAgICAgICAgY2FudmFzRWxlbWVudC5oZWlnaHQgPSB2aWRlb0VsZW1lbnQudmlkZW9IZWlnaHQ7XHJcblxyXG4gICAgICAgICAgUXVhZ2dhLmluaXQoXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICBpbnB1dFN0cmVhbToge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogXCJMaXZlXCIsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBcIkxpdmVTdHJlYW1cIixcclxuICAgICAgICAgICAgICAgIHRhcmdldDogdmlkZW9SZWYuY3VycmVudCEsXHJcbiAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICBkZWNvZGVyOiB7XHJcbiAgICAgICAgICAgICAgICByZWFkZXJzOiBbXCJlYW5fcmVhZGVyXCJdLFxyXG4gICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIChlcnIpID0+IHtcclxuICAgICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgaW5pdGlhbGl6aW5nIFF1YWdnYTpcIiwgZXJyKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJJbml0aWFsaXphdGlvbiBmaW5pc2hlZC4gUmVhZHkgdG8gc3RhcnRcIik7XHJcbiAgICAgICAgICAgICAgYWxlcnQoXCJJbml0aWFsaXphdGlvbiBmaW5pc2hlZC4gUmVhZHkgdG8gc3RhcnRcIik7XHJcbiAgICAgICAgICAgICAgUXVhZ2dhLnN0YXJ0KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICk7XHJcbiAgICAgICAgICBRdWFnZ2Eub25EZXRlY3RlZChmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgIHZhciBjb2RlID0gcmVzdWx0LmNvZGVSZXN1bHQuY29kZTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coY29kZSk7XHJcbiAgICAgICAgICAgIHNldFVzZXJDb2RlKHJlc3VsdC5jb2RlUmVzdWx0LmNvZGUgfHwgXCJcIik7XHJcbiAgICAgICAgICAgIGFsZXJ0KGNvZGUpO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGFjY2Vzc2luZyBjYW1lcmE6XCIsIGVycm9yKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBpbml0UXVhZ2dhKCk7XHJcblxyXG4gICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgUXVhZ2dhLnN0b3AoKTtcclxuICAgIH07XHJcbiAgfSwgW10pO1xyXG5cclxuICBjb25zdCBoYW5kbGVSZXNldCA9ICgpID0+IHtcclxuICAgIC8vIEltcGxlbWVudCB5b3VyIHJlc2V0IGxvZ2ljIGhlcmVcclxuICAgIHNldFVzZXJDb2RlKFwiXCIpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIiB3LVs4MCVdIG14LWF1dG8gZmxleCBtYi0zNiBtdC0xNlwiPlxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIiB3LTEvMlwiPlxyXG4gICAgICAgIDx2aWRlbyByZWY9e3ZpZGVvUmVmfSAvPlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCIgdy0xLzJcIj5cclxuICAgICAgICB7dXNlckNvZGUgJiYgKFxyXG4gICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiIHRleHQtY2VudGVyIGZvbnQtc2VtaWJvbGQgdGV4dC0zeGxcIj5SZXN1bHQ8L3A+XHJcbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cIiB0ZXh0LWNlbnRlciB0ZXh0LTJ4bCBtdC0yMCBiZy1ncmF5LTEwMCByb3VuZGVkLW1kIHctZml0IHB4LTYgbXgtYXV0byBweS0yIGZvbnQtc2VtaWJvbGRcIj5cclxuICAgICAgICAgICAgICB7dXNlckNvZGV9XHJcbiAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCIgZmxleCBqdXN0aWZ5LWNlbnRlciBteS0yMFwiPlxyXG4gICAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVJlc2V0fVxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC1tZCBweS0yIHB4LTEyIGJvcmRlci1bMXB4XSBtdC0yNCBib3JkZXItc2xhdGUtNDAwIHJvdW5kZWQtbWRcIlxyXG4gICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIFJlc2V0XHJcbiAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgKX1cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQmFyY29kZVNjYW5QYWdlO1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VTdGF0ZSIsIlF1YWdnYSIsIkJhcmNvZGVTY2FuUGFnZSIsInZpZGVvUmVmIiwidXNlckNvZGUiLCJzZXRVc2VyQ29kZSIsImluaXRRdWFnZ2EiLCJzdHJlYW0iLCJuYXZpZ2F0b3IiLCJtZWRpYURldmljZXMiLCJnZXRVc2VyTWVkaWEiLCJ2aWRlbyIsInZpZGVvRWxlbWVudCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNyY09iamVjdCIsInBsYXkiLCJjdXJyZW50IiwicmVwbGFjZVdpdGgiLCJhZGRFdmVudExpc3RlbmVyIiwiY2FudmFzRWxlbWVudCIsImNhbnZhc0NvbnRleHQiLCJnZXRDb250ZXh0IiwiY29uc29sZSIsImVycm9yIiwid2lkdGgiLCJ2aWRlb1dpZHRoIiwiaGVpZ2h0IiwidmlkZW9IZWlnaHQiLCJpbml0IiwiaW5wdXRTdHJlYW0iLCJuYW1lIiwidHlwZSIsInRhcmdldCIsImRlY29kZXIiLCJyZWFkZXJzIiwiZXJyIiwibG9nIiwiYWxlcnQiLCJzdGFydCIsIm9uRGV0ZWN0ZWQiLCJyZXN1bHQiLCJjb2RlIiwiY29kZVJlc3VsdCIsInN0b3AiLCJoYW5kbGVSZXNldCIsImRpdiIsImNsYXNzTmFtZSIsInJlZiIsInAiLCJidXR0b24iLCJvbkNsaWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/scan2/page.tsx\n"));

/***/ })

});